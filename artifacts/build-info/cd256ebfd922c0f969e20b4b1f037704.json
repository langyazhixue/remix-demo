{
	"id": "cd256ebfd922c0f969e20b4b1f037704",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC20_Demo/ERC1363/erc1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/interfaces/IERC1363.sol\";\n import {IERC1363Receiver} from  \"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\n// import \"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol\";\n\n\ncontract MyToken is ERC20, IERC1363 {\n    using Address for address;\n\n    constructor(uint256 initialSupply) ERC20(\"MyToken\", \"MTK\") {\n        _mint(msg.sender, initialSupply);\n    }\n\n     function transferAndCall(address to, uint256 value) external override pure returns (bool) {\n        return true;\n    }\n    // 实现 transferAndCall\n    function transferAndCall(address to, uint256 value, bytes calldata data) external override returns (bool) {\n        transfer(to, value); // 执行 ERC-20 转账\n        require(_checkAndCallTransfer(msg.sender, to, value, data), \"ERC1363: _checkAndCallTransfer failed\");\n        return true;\n    }\n\n    // 内部函数：触发接收合约的回调\n    function _checkAndCallTransfer(address from, address to, uint256 value, bytes memory data) internal returns (bool) {\n        if (to.code.length > 0) {\n            // 调用接收合约的 onTransferReceived\n            try IERC1363Receiver(to).onTransferReceived(msg.sender, from, value, data) returns (bytes4 retval) {\n                return retval == IERC1363Receiver.onTransferReceived.selector;\n            } catch {\n                revert(\"ERC1363: onTransferReceived failed\");\n            }\n        }\n        return true;\n    }\n\n    function transferFromAndCall(address from, address to, uint256 value) external override pure returns (bool) {\n        return true;\n    }\n\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) override pure external returns (bool) {\n        return true;\n    }\n\n    function approveAndCall(address spender, uint256 value) external  pure override returns (bool) {\n        return true;\n    }\n\n    function approveAndCall(address spender, uint256 value, bytes calldata data) override pure external returns (bool) {\n        return true;\n    }\n\n    function supportsInterface(bytes4 interfaceId) external override pure returns (bool) {\n        return true;\n    }\n    // 省略其他必要函数（transferFromAndCall, approveAndCall 等）\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title IERC1363Receiver\n * @dev Interface for any contract that wants to support `transferAndCall` or `transferFromAndCall`\n * from ERC-1363 token contracts.\n */\ninterface IERC1363Receiver {\n    /**\n     * @dev Whenever ERC-1363 tokens are transferred to this contract via `transferAndCall` or `transferFromAndCall`\n     * by `operator` from `from`, this function is called.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))`\n     * (i.e. 0x88a7ca5c, or its own function selector).\n     *\n     * @param operator The address which called `transferAndCall` or `transferFromAndCall` function.\n     * @param from The address which the tokens are transferred from.\n     * @param value The amount of tokens transferred.\n     * @param data Additional data with no specified format.\n     * @return `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` if transfer is allowed unless throwing.\n     */\n    function onTransferReceived(\n        address operator,\n        address from,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol": {
				"IERC1363Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onTransferReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support `transferAndCall` or `transferFromAndCall` from ERC-1363 token contracts.",
						"kind": "dev",
						"methods": {
							"onTransferReceived(address,address,uint256,bytes)": {
								"details": "Whenever ERC-1363 tokens are transferred to this contract via `transferAndCall` or `transferFromAndCall` by `operator` from `from`, this function is called. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` (i.e. 0x88a7ca5c, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format.",
									"from": "The address which the tokens are transferred from.",
									"operator": "The address which called `transferAndCall` or `transferFromAndCall` function.",
									"value": "The amount of tokens transferred."
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` if transfer is allowed unless throwing."
								}
							}
						},
						"title": "IERC1363Receiver",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onTransferReceived(address,address,uint256,bytes)": "88a7ca5c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTransferReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support `transferAndCall` or `transferFromAndCall` from ERC-1363 token contracts.\",\"kind\":\"dev\",\"methods\":{\"onTransferReceived(address,address,uint256,bytes)\":{\"details\":\"Whenever ERC-1363 tokens are transferred to this contract via `transferAndCall` or `transferFromAndCall` by `operator` from `from`, this function is called. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onTransferReceived(address,address,uint256,bytes)\\\"))` (i.e. 0x88a7ca5c, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format.\",\"from\":\"The address which the tokens are transferred from.\",\"operator\":\"The address which called `transferAndCall` or `transferFromAndCall` function.\",\"value\":\"The amount of tokens transferred.\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onTransferReceived(address,address,uint256,bytes)\\\"))` if transfer is allowed unless throwing.\"}}},\"title\":\"IERC1363Receiver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol\":\"IERC1363Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol\":{\"keccak256\":\"0xc988322f9ed15c95b435e5fbb51767b0bd8c19a4a57ca360af409122cede64c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://baf96a3317c8b2d14dd805833efca40c9a38cbf4e2a9c375d88f98b2f1ea5232\",\"dweb:/ipfs/QmTKbzuQBM62yERCNWtfoEK12cFj4sQcEFLLN64h6kEmXn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 267,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 273,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 275,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 277,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 279,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122030109b903c0aea2391eea0c8303e6629797e67d4f1a60f9d1b734ad7d25e583664736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122030109b903c0aea2391eea0c8303e6629797e67d4f1a60f9d1b734ad7d25e583664736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS LT SWAP12 SWAP1 EXTCODECOPY EXP 0xEA 0x23 SWAP2 0xEE LOG0 0xC8 ADDRESS RETURNDATACOPY PUSH7 0x29797E67D4F1A6 0xF SWAP14 SHL PUSH20 0x4AD7D25E583664736F6C634300081C0033000000 ",
							"sourceMap": "233:5815:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122030109b903c0aea2391eea0c8303e6629797e67d4f1a60f9d1b734ad7d25e583664736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS LT SWAP12 SWAP1 EXTCODECOPY EXP 0xEA 0x23 SWAP2 0xEE LOG0 0xC8 ADDRESS RETURNDATACOPY PUSH7 0x29797E67D4F1A6 0xF SWAP14 SHL PUSH20 0x4AD7D25E583664736F6C634300081C0033000000 ",
							"sourceMap": "233:5815:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122030109b903c0aea2391eea0c8303e6629797e67d4f1a60f9d1b734ad7d25e583664736f6c634300081c0033",
									".code": [
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/ERC20_Demo/ERC1363/erc1363.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xC8 0xD0 SWAP3 CODECOPY 0xA5 SWAP12 PUSH14 0x8127DAF01C7A4B484E4331E32378 PUSH17 0x50CC36808EF7DBA49564736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "411:484:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xC8 0xD0 SWAP3 CODECOPY 0xA5 SWAP12 PUSH14 0x8127DAF01C7A4B484E4331E32378 PUSH17 0x50CC36808EF7DBA49564736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "411:484:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/ERC20_Demo/ERC1363/erc1363.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC20_Demo/ERC1363/erc1363.sol": {
				"MyToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":387:2396  contract MyToken is ERC20, IERC1363 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":461:569  constructor(uint256 initialSupply) ERC20(\"MyToken\", \"MTK\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  0x4d79546f6b656e00000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4d544b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":530:562  _mint(msg.sender, initialSupply) */\n  tag_11\n    /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":536:546  msg.sender */\n  caller\n    /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":548:561  initialSupply */\n  dup3\n    /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":530:535  _mint */\n  shl(0x20, tag_12)\n    /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":530:562  _mint(msg.sender, initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":461:569  constructor(uint256 initialSupply) ERC20(\"MyToken\", \"MTK\") {... */\n  pop\n    /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":387:2396  contract MyToken is ERC20, IERC1363 {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\ntag_12:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n  tag_15\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  tag_18\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n  shl(0x20, tag_19)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_19:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_21\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_22\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  jump(tag_24)\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n  iszero\n  tag_25\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_26\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\ntag_24:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  jump(tag_29)\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  mload(0x40)\n  tag_30\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_33:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_35:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_36:\n    /* \"#utility.yul\":490:514   */\n  tag_68\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_35\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_69:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_37:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_71\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_36\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_3:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_74\n  tag_33\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":781:900   */\ntag_73:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_75\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_37\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1051:1150   */\ntag_38:\n    /* \"#utility.yul\":1103:1109   */\n  0x00\n    /* \"#utility.yul\":1137:1142   */\n  dup2\n    /* \"#utility.yul\":1131:1143   */\n  mload\n    /* \"#utility.yul\":1121:1143   */\n  swap1\n  pop\n    /* \"#utility.yul\":1051:1150   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1156:1336   */\ntag_39:\n    /* \"#utility.yul\":1204:1281   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1201:1202   */\n  0x00\n    /* \"#utility.yul\":1194:1282   */\n  mstore\n    /* \"#utility.yul\":1301:1305   */\n  0x41\n    /* \"#utility.yul\":1298:1299   */\n  0x04\n    /* \"#utility.yul\":1291:1306   */\n  mstore\n    /* \"#utility.yul\":1325:1329   */\n  0x24\n    /* \"#utility.yul\":1322:1323   */\n  0x00\n    /* \"#utility.yul\":1315:1330   */\n  revert\n    /* \"#utility.yul\":1342:1522   */\ntag_40:\n    /* \"#utility.yul\":1390:1467   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1387:1388   */\n  0x00\n    /* \"#utility.yul\":1380:1468   */\n  mstore\n    /* \"#utility.yul\":1487:1491   */\n  0x22\n    /* \"#utility.yul\":1484:1485   */\n  0x04\n    /* \"#utility.yul\":1477:1492   */\n  mstore\n    /* \"#utility.yul\":1511:1515   */\n  0x24\n    /* \"#utility.yul\":1508:1509   */\n  0x00\n    /* \"#utility.yul\":1501:1516   */\n  revert\n    /* \"#utility.yul\":1528:1848   */\ntag_41:\n    /* \"#utility.yul\":1572:1578   */\n  0x00\n    /* \"#utility.yul\":1609:1610   */\n  0x02\n    /* \"#utility.yul\":1603:1607   */\n  dup3\n    /* \"#utility.yul\":1599:1611   */\n  div\n    /* \"#utility.yul\":1589:1611   */\n  swap1\n  pop\n    /* \"#utility.yul\":1656:1657   */\n  0x01\n    /* \"#utility.yul\":1650:1654   */\n  dup3\n    /* \"#utility.yul\":1646:1658   */\n  and\n    /* \"#utility.yul\":1677:1695   */\n  dup1\n    /* \"#utility.yul\":1667:1748   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":1733:1737   */\n  0x7f\n    /* \"#utility.yul\":1725:1731   */\n  dup3\n    /* \"#utility.yul\":1721:1738   */\n  and\n    /* \"#utility.yul\":1711:1738   */\n  swap2\n  pop\n    /* \"#utility.yul\":1667:1748   */\ntag_80:\n    /* \"#utility.yul\":1795:1797   */\n  0x20\n    /* \"#utility.yul\":1787:1793   */\n  dup3\n    /* \"#utility.yul\":1784:1798   */\n  lt\n    /* \"#utility.yul\":1764:1782   */\n  dup2\n    /* \"#utility.yul\":1761:1799   */\n  sub\n    /* \"#utility.yul\":1758:1842   */\n  tag_81\n  jumpi\n    /* \"#utility.yul\":1814:1832   */\n  tag_82\n  tag_40\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":1758:1842   */\ntag_81:\n    /* \"#utility.yul\":1579:1848   */\n  pop\n    /* \"#utility.yul\":1528:1848   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1854:1995   */\ntag_42:\n    /* \"#utility.yul\":1903:1907   */\n  0x00\n    /* \"#utility.yul\":1926:1929   */\n  dup2\n    /* \"#utility.yul\":1918:1929   */\n  swap1\n  pop\n    /* \"#utility.yul\":1949:1952   */\n  dup2\n    /* \"#utility.yul\":1946:1947   */\n  0x00\n    /* \"#utility.yul\":1939:1953   */\n  mstore\n    /* \"#utility.yul\":1983:1987   */\n  0x20\n    /* \"#utility.yul\":1980:1981   */\n  0x00\n    /* \"#utility.yul\":1970:1988   */\n  keccak256\n    /* \"#utility.yul\":1962:1988   */\n  swap1\n  pop\n    /* \"#utility.yul\":1854:1995   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2001:2094   */\ntag_43:\n    /* \"#utility.yul\":2038:2044   */\n  0x00\n    /* \"#utility.yul\":2085:2087   */\n  0x20\n    /* \"#utility.yul\":2080:2082   */\n  0x1f\n    /* \"#utility.yul\":2073:2078   */\n  dup4\n    /* \"#utility.yul\":2069:2083   */\n  add\n    /* \"#utility.yul\":2065:2088   */\n  div\n    /* \"#utility.yul\":2055:2088   */\n  swap1\n  pop\n    /* \"#utility.yul\":2001:2094   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2100:2207   */\ntag_44:\n    /* \"#utility.yul\":2144:2152   */\n  0x00\n    /* \"#utility.yul\":2194:2199   */\n  dup3\n    /* \"#utility.yul\":2188:2192   */\n  dup3\n    /* \"#utility.yul\":2184:2200   */\n  shl\n    /* \"#utility.yul\":2163:2200   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2207   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2213:2606   */\ntag_45:\n    /* \"#utility.yul\":2282:2288   */\n  0x00\n    /* \"#utility.yul\":2332:2333   */\n  0x08\n    /* \"#utility.yul\":2320:2330   */\n  dup4\n    /* \"#utility.yul\":2316:2334   */\n  mul\n    /* \"#utility.yul\":2355:2452   */\n  tag_87\n    /* \"#utility.yul\":2385:2451   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2374:2383   */\n  dup3\n    /* \"#utility.yul\":2355:2452   */\n  tag_44\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":2473:2512   */\n  tag_88\n    /* \"#utility.yul\":2503:2511   */\n  dup7\n    /* \"#utility.yul\":2492:2501   */\n  dup4\n    /* \"#utility.yul\":2473:2512   */\n  tag_44\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":2461:2512   */\n  swap6\n  pop\n    /* \"#utility.yul\":2545:2549   */\n  dup1\n    /* \"#utility.yul\":2541:2550   */\n  not\n    /* \"#utility.yul\":2534:2539   */\n  dup5\n    /* \"#utility.yul\":2530:2551   */\n  and\n    /* \"#utility.yul\":2521:2551   */\n  swap4\n  pop\n    /* \"#utility.yul\":2594:2598   */\n  dup1\n    /* \"#utility.yul\":2584:2592   */\n  dup7\n    /* \"#utility.yul\":2580:2599   */\n  and\n    /* \"#utility.yul\":2573:2578   */\n  dup5\n    /* \"#utility.yul\":2570:2600   */\n  or\n    /* \"#utility.yul\":2560:2600   */\n  swap3\n  pop\n    /* \"#utility.yul\":2289:2606   */\n  pop\n  pop\n    /* \"#utility.yul\":2213:2606   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2612:2672   */\ntag_46:\n    /* \"#utility.yul\":2640:2643   */\n  0x00\n    /* \"#utility.yul\":2661:2666   */\n  dup2\n    /* \"#utility.yul\":2654:2666   */\n  swap1\n  pop\n    /* \"#utility.yul\":2612:2672   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2678:2820   */\ntag_47:\n    /* \"#utility.yul\":2728:2737   */\n  0x00\n    /* \"#utility.yul\":2761:2814   */\n  tag_91\n    /* \"#utility.yul\":2779:2813   */\n  tag_92\n    /* \"#utility.yul\":2788:2812   */\n  tag_93\n    /* \"#utility.yul\":2806:2811   */\n  dup5\n    /* \"#utility.yul\":2788:2812   */\n  tag_35\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":2779:2813   */\n  tag_46\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":2761:2814   */\n  tag_35\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":2748:2814   */\n  swap1\n  pop\n    /* \"#utility.yul\":2678:2820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2826:2901   */\ntag_48:\n    /* \"#utility.yul\":2869:2872   */\n  0x00\n    /* \"#utility.yul\":2890:2895   */\n  dup2\n    /* \"#utility.yul\":2883:2895   */\n  swap1\n  pop\n    /* \"#utility.yul\":2826:2901   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2907:3176   */\ntag_49:\n    /* \"#utility.yul\":3017:3056   */\n  tag_96\n    /* \"#utility.yul\":3048:3055   */\n  dup4\n    /* \"#utility.yul\":3017:3056   */\n  tag_47\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3078:3169   */\n  tag_97\n    /* \"#utility.yul\":3127:3168   */\n  tag_98\n    /* \"#utility.yul\":3151:3167   */\n  dup3\n    /* \"#utility.yul\":3127:3168   */\n  tag_48\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":3119:3125   */\n  dup5\n    /* \"#utility.yul\":3112:3116   */\n  dup5\n    /* \"#utility.yul\":3106:3117   */\n  sload\n    /* \"#utility.yul\":3078:3169   */\n  tag_45\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3072:3076   */\n  dup3\n    /* \"#utility.yul\":3065:3170   */\n  sstore\n    /* \"#utility.yul\":2983:3176   */\n  pop\n    /* \"#utility.yul\":2907:3176   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3182:3255   */\ntag_50:\n    /* \"#utility.yul\":3227:3230   */\n  0x00\n    /* \"#utility.yul\":3248:3249   */\n  0x00\n    /* \"#utility.yul\":3241:3249   */\n  swap1\n  pop\n    /* \"#utility.yul\":3182:3255   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3261:3450   */\ntag_51:\n    /* \"#utility.yul\":3338:3370   */\n  tag_101\n  tag_50\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":3379:3444   */\n  tag_102\n    /* \"#utility.yul\":3437:3443   */\n  dup2\n    /* \"#utility.yul\":3429:3435   */\n  dup5\n    /* \"#utility.yul\":3423:3427   */\n  dup5\n    /* \"#utility.yul\":3379:3444   */\n  tag_49\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3314:3450   */\n  pop\n    /* \"#utility.yul\":3261:3450   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3456:3642   */\ntag_52:\n    /* \"#utility.yul\":3516:3636   */\ntag_104:\n    /* \"#utility.yul\":3533:3536   */\n  dup2\n    /* \"#utility.yul\":3526:3531   */\n  dup2\n    /* \"#utility.yul\":3523:3537   */\n  lt\n    /* \"#utility.yul\":3516:3636   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":3587:3626   */\n  tag_107\n    /* \"#utility.yul\":3624:3625   */\n  0x00\n    /* \"#utility.yul\":3617:3622   */\n  dup3\n    /* \"#utility.yul\":3587:3626   */\n  tag_51\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3560:3561   */\n  0x01\n    /* \"#utility.yul\":3553:3558   */\n  dup2\n    /* \"#utility.yul\":3549:3562   */\n  add\n    /* \"#utility.yul\":3540:3562   */\n  swap1\n  pop\n    /* \"#utility.yul\":3516:3636   */\n  jump(tag_104)\ntag_106:\n    /* \"#utility.yul\":3456:3642   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3648:4191   */\ntag_53:\n    /* \"#utility.yul\":3749:3751   */\n  0x1f\n    /* \"#utility.yul\":3744:3747   */\n  dup3\n    /* \"#utility.yul\":3741:3752   */\n  gt\n    /* \"#utility.yul\":3738:4184   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":3783:3821   */\n  tag_110\n    /* \"#utility.yul\":3815:3820   */\n  dup2\n    /* \"#utility.yul\":3783:3821   */\n  tag_42\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":3867:3896   */\n  tag_111\n    /* \"#utility.yul\":3885:3895   */\n  dup5\n    /* \"#utility.yul\":3867:3896   */\n  tag_43\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3857:3865   */\n  dup2\n    /* \"#utility.yul\":3853:3897   */\n  add\n    /* \"#utility.yul\":4050:4052   */\n  0x20\n    /* \"#utility.yul\":4038:4048   */\n  dup6\n    /* \"#utility.yul\":4035:4053   */\n  lt\n    /* \"#utility.yul\":4032:4081   */\n  iszero\n  tag_112\n  jumpi\n    /* \"#utility.yul\":4071:4079   */\n  dup2\n    /* \"#utility.yul\":4056:4079   */\n  swap1\n  pop\n    /* \"#utility.yul\":4032:4081   */\ntag_112:\n    /* \"#utility.yul\":4094:4174   */\n  tag_113\n    /* \"#utility.yul\":4150:4172   */\n  tag_114\n    /* \"#utility.yul\":4168:4171   */\n  dup6\n    /* \"#utility.yul\":4150:4172   */\n  tag_43\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":4140:4148   */\n  dup4\n    /* \"#utility.yul\":4136:4173   */\n  add\n    /* \"#utility.yul\":4123:4134   */\n  dup3\n    /* \"#utility.yul\":4094:4174   */\n  tag_52\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3753:4184   */\n  pop\n  pop\n    /* \"#utility.yul\":3738:4184   */\ntag_109:\n    /* \"#utility.yul\":3648:4191   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4197:4314   */\ntag_54:\n    /* \"#utility.yul\":4251:4259   */\n  0x00\n    /* \"#utility.yul\":4301:4306   */\n  dup3\n    /* \"#utility.yul\":4295:4299   */\n  dup3\n    /* \"#utility.yul\":4291:4307   */\n  shr\n    /* \"#utility.yul\":4270:4307   */\n  swap1\n  pop\n    /* \"#utility.yul\":4197:4314   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4320:4489   */\ntag_55:\n    /* \"#utility.yul\":4364:4370   */\n  0x00\n    /* \"#utility.yul\":4397:4448   */\n  tag_117\n    /* \"#utility.yul\":4445:4446   */\n  0x00\n    /* \"#utility.yul\":4441:4447   */\n  not\n    /* \"#utility.yul\":4433:4438   */\n  dup5\n    /* \"#utility.yul\":4430:4431   */\n  0x08\n    /* \"#utility.yul\":4426:4439   */\n  mul\n    /* \"#utility.yul\":4397:4448   */\n  tag_54\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":4393:4449   */\n  not\n    /* \"#utility.yul\":4478:4482   */\n  dup1\n    /* \"#utility.yul\":4472:4476   */\n  dup4\n    /* \"#utility.yul\":4468:4483   */\n  and\n    /* \"#utility.yul\":4458:4483   */\n  swap2\n  pop\n    /* \"#utility.yul\":4371:4489   */\n  pop\n    /* \"#utility.yul\":4320:4489   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4494:4789   */\ntag_56:\n    /* \"#utility.yul\":4570:4574   */\n  0x00\n    /* \"#utility.yul\":4716:4745   */\n  tag_119\n    /* \"#utility.yul\":4741:4744   */\n  dup4\n    /* \"#utility.yul\":4735:4739   */\n  dup4\n    /* \"#utility.yul\":4716:4745   */\n  tag_55\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":4708:4745   */\n  swap2\n  pop\n    /* \"#utility.yul\":4778:4781   */\n  dup3\n    /* \"#utility.yul\":4775:4776   */\n  0x02\n    /* \"#utility.yul\":4771:4782   */\n  mul\n    /* \"#utility.yul\":4765:4769   */\n  dup3\n    /* \"#utility.yul\":4762:4783   */\n  or\n    /* \"#utility.yul\":4754:4783   */\n  swap1\n  pop\n    /* \"#utility.yul\":4494:4789   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4794:6189   */\ntag_8:\n    /* \"#utility.yul\":4911:4948   */\n  tag_121\n    /* \"#utility.yul\":4944:4947   */\n  dup3\n    /* \"#utility.yul\":4911:4948   */\n  tag_38\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":5013:5031   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5005:5011   */\n  dup2\n    /* \"#utility.yul\":5002:5032   */\n  gt\n    /* \"#utility.yul\":4999:5055   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":5035:5053   */\n  tag_123\n  tag_39\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":4999:5055   */\ntag_122:\n    /* \"#utility.yul\":5079:5117   */\n  tag_124\n    /* \"#utility.yul\":5111:5115   */\n  dup3\n    /* \"#utility.yul\":5105:5116   */\n  sload\n    /* \"#utility.yul\":5079:5117   */\n  tag_41\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":5164:5231   */\n  tag_125\n    /* \"#utility.yul\":5224:5230   */\n  dup3\n    /* \"#utility.yul\":5216:5222   */\n  dup3\n    /* \"#utility.yul\":5210:5214   */\n  dup6\n    /* \"#utility.yul\":5164:5231   */\n  tag_53\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":5258:5259   */\n  0x00\n    /* \"#utility.yul\":5282:5286   */\n  0x20\n    /* \"#utility.yul\":5269:5286   */\n  swap1\n  pop\n    /* \"#utility.yul\":5314:5316   */\n  0x1f\n    /* \"#utility.yul\":5306:5312   */\n  dup4\n    /* \"#utility.yul\":5303:5317   */\n  gt\n    /* \"#utility.yul\":5331:5332   */\n  0x01\n    /* \"#utility.yul\":5326:5944   */\n  dup2\n  eq\n  tag_127\n  jumpi\n    /* \"#utility.yul\":5988:5989   */\n  0x00\n    /* \"#utility.yul\":6005:6011   */\n  dup5\n    /* \"#utility.yul\":6002:6079   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":6054:6063   */\n  dup3\n    /* \"#utility.yul\":6049:6052   */\n  dup8\n    /* \"#utility.yul\":6045:6064   */\n  add\n    /* \"#utility.yul\":6039:6065   */\n  mload\n    /* \"#utility.yul\":6030:6065   */\n  swap1\n  pop\n    /* \"#utility.yul\":6002:6079   */\ntag_128:\n    /* \"#utility.yul\":6105:6172   */\n  tag_129\n    /* \"#utility.yul\":6165:6171   */\n  dup6\n    /* \"#utility.yul\":6158:6163   */\n  dup3\n    /* \"#utility.yul\":6105:6172   */\n  tag_56\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":6099:6103   */\n  dup7\n    /* \"#utility.yul\":6092:6173   */\n  sstore\n    /* \"#utility.yul\":5961:6183   */\n  pop\n    /* \"#utility.yul\":5296:6183   */\n  jump(tag_126)\n    /* \"#utility.yul\":5326:5944   */\ntag_127:\n    /* \"#utility.yul\":5378:5382   */\n  0x1f\n    /* \"#utility.yul\":5374:5383   */\n  not\n    /* \"#utility.yul\":5366:5372   */\n  dup5\n    /* \"#utility.yul\":5362:5384   */\n  and\n    /* \"#utility.yul\":5412:5449   */\n  tag_130\n    /* \"#utility.yul\":5444:5448   */\n  dup7\n    /* \"#utility.yul\":5412:5449   */\n  tag_42\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":5471:5472   */\n  0x00\n    /* \"#utility.yul\":5485:5693   */\ntag_131:\n    /* \"#utility.yul\":5499:5506   */\n  dup3\n    /* \"#utility.yul\":5496:5497   */\n  dup2\n    /* \"#utility.yul\":5493:5507   */\n  lt\n    /* \"#utility.yul\":5485:5693   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":5578:5587   */\n  dup5\n    /* \"#utility.yul\":5573:5576   */\n  dup10\n    /* \"#utility.yul\":5569:5588   */\n  add\n    /* \"#utility.yul\":5563:5589   */\n  mload\n    /* \"#utility.yul\":5555:5561   */\n  dup3\n    /* \"#utility.yul\":5548:5590   */\n  sstore\n    /* \"#utility.yul\":5629:5630   */\n  0x01\n    /* \"#utility.yul\":5621:5627   */\n  dup3\n    /* \"#utility.yul\":5617:5631   */\n  add\n    /* \"#utility.yul\":5607:5631   */\n  swap2\n  pop\n    /* \"#utility.yul\":5676:5678   */\n  0x20\n    /* \"#utility.yul\":5665:5674   */\n  dup6\n    /* \"#utility.yul\":5661:5679   */\n  add\n    /* \"#utility.yul\":5648:5679   */\n  swap5\n  pop\n    /* \"#utility.yul\":5522:5526   */\n  0x20\n    /* \"#utility.yul\":5519:5520   */\n  dup2\n    /* \"#utility.yul\":5515:5527   */\n  add\n    /* \"#utility.yul\":5510:5527   */\n  swap1\n  pop\n    /* \"#utility.yul\":5485:5693   */\n  jump(tag_131)\ntag_133:\n    /* \"#utility.yul\":5721:5727   */\n  dup7\n    /* \"#utility.yul\":5712:5719   */\n  dup4\n    /* \"#utility.yul\":5709:5728   */\n  lt\n    /* \"#utility.yul\":5706:5885   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":5779:5788   */\n  dup5\n    /* \"#utility.yul\":5774:5777   */\n  dup10\n    /* \"#utility.yul\":5770:5789   */\n  add\n    /* \"#utility.yul\":5764:5790   */\n  mload\n    /* \"#utility.yul\":5822:5870   */\n  tag_135\n    /* \"#utility.yul\":5864:5868   */\n  0x1f\n    /* \"#utility.yul\":5856:5862   */\n  dup10\n    /* \"#utility.yul\":5852:5869   */\n  and\n    /* \"#utility.yul\":5841:5850   */\n  dup3\n    /* \"#utility.yul\":5822:5870   */\n  tag_55\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5814:5820   */\n  dup4\n    /* \"#utility.yul\":5807:5871   */\n  sstore\n    /* \"#utility.yul\":5729:5885   */\n  pop\n    /* \"#utility.yul\":5706:5885   */\ntag_134:\n    /* \"#utility.yul\":5931:5932   */\n  0x01\n    /* \"#utility.yul\":5927:5928   */\n  0x02\n    /* \"#utility.yul\":5919:5925   */\n  dup9\n    /* \"#utility.yul\":5915:5929   */\n  mul\n    /* \"#utility.yul\":5911:5933   */\n  add\n    /* \"#utility.yul\":5905:5909   */\n  dup9\n    /* \"#utility.yul\":5898:5934   */\n  sstore\n    /* \"#utility.yul\":5333:5944   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5296:6183   */\ntag_126:\n  pop\n    /* \"#utility.yul\":4886:6189   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4794:6189   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6195:6321   */\ntag_57:\n    /* \"#utility.yul\":6232:6239   */\n  0x00\n    /* \"#utility.yul\":6272:6314   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":6265:6270   */\n  dup3\n    /* \"#utility.yul\":6261:6315   */\n  and\n    /* \"#utility.yul\":6250:6315   */\n  swap1\n  pop\n    /* \"#utility.yul\":6195:6321   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6327:6423   */\ntag_58:\n    /* \"#utility.yul\":6364:6371   */\n  0x00\n    /* \"#utility.yul\":6393:6417   */\n  tag_138\n    /* \"#utility.yul\":6411:6416   */\n  dup3\n    /* \"#utility.yul\":6393:6417   */\n  tag_57\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":6382:6417   */\n  swap1\n  pop\n    /* \"#utility.yul\":6327:6423   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_59:\n    /* \"#utility.yul\":6516:6540   */\n  tag_140\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_58\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_17:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_142\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_59\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6781:6961   */\ntag_60:\n    /* \"#utility.yul\":6829:6906   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6826:6827   */\n  0x00\n    /* \"#utility.yul\":6819:6907   */\n  mstore\n    /* \"#utility.yul\":6926:6930   */\n  0x11\n    /* \"#utility.yul\":6923:6924   */\n  0x04\n    /* \"#utility.yul\":6916:6931   */\n  mstore\n    /* \"#utility.yul\":6950:6954   */\n  0x24\n    /* \"#utility.yul\":6947:6948   */\n  0x00\n    /* \"#utility.yul\":6940:6955   */\n  revert\n    /* \"#utility.yul\":6967:7158   */\ntag_23:\n    /* \"#utility.yul\":7007:7010   */\n  0x00\n    /* \"#utility.yul\":7026:7046   */\n  tag_145\n    /* \"#utility.yul\":7044:7045   */\n  dup3\n    /* \"#utility.yul\":7026:7046   */\n  tag_35\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":7021:7046   */\n  swap2\n  pop\n    /* \"#utility.yul\":7060:7080   */\n  tag_146\n    /* \"#utility.yul\":7078:7079   */\n  dup4\n    /* \"#utility.yul\":7060:7080   */\n  tag_35\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":7055:7080   */\n  swap3\n  pop\n    /* \"#utility.yul\":7103:7104   */\n  dup3\n    /* \"#utility.yul\":7100:7101   */\n  dup3\n    /* \"#utility.yul\":7096:7105   */\n  add\n    /* \"#utility.yul\":7089:7105   */\n  swap1\n  pop\n    /* \"#utility.yul\":7124:7127   */\n  dup1\n    /* \"#utility.yul\":7121:7122   */\n  dup3\n    /* \"#utility.yul\":7118:7128   */\n  gt\n    /* \"#utility.yul\":7115:7151   */\n  iszero\n  tag_147\n  jumpi\n    /* \"#utility.yul\":7131:7149   */\n  tag_148\n  tag_60\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":7115:7151   */\ntag_147:\n    /* \"#utility.yul\":6967:7158   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7164:7282   */\ntag_61:\n    /* \"#utility.yul\":7251:7275   */\n  tag_150\n    /* \"#utility.yul\":7269:7274   */\n  dup2\n    /* \"#utility.yul\":7251:7275   */\n  tag_35\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":7246:7249   */\n  dup3\n    /* \"#utility.yul\":7239:7276   */\n  mstore\n    /* \"#utility.yul\":7164:7282   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7288:7730   */\ntag_27:\n    /* \"#utility.yul\":7437:7441   */\n  0x00\n    /* \"#utility.yul\":7475:7477   */\n  0x60\n    /* \"#utility.yul\":7464:7473   */\n  dup3\n    /* \"#utility.yul\":7460:7478   */\n  add\n    /* \"#utility.yul\":7452:7478   */\n  swap1\n  pop\n    /* \"#utility.yul\":7488:7559   */\n  tag_152\n    /* \"#utility.yul\":7556:7557   */\n  0x00\n    /* \"#utility.yul\":7545:7554   */\n  dup4\n    /* \"#utility.yul\":7541:7558   */\n  add\n    /* \"#utility.yul\":7532:7538   */\n  dup7\n    /* \"#utility.yul\":7488:7559   */\n  tag_59\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":7569:7641   */\n  tag_153\n    /* \"#utility.yul\":7637:7639   */\n  0x20\n    /* \"#utility.yul\":7626:7635   */\n  dup4\n    /* \"#utility.yul\":7622:7640   */\n  add\n    /* \"#utility.yul\":7613:7619   */\n  dup6\n    /* \"#utility.yul\":7569:7641   */\n  tag_61\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":7651:7723   */\n  tag_154\n    /* \"#utility.yul\":7719:7721   */\n  0x40\n    /* \"#utility.yul\":7708:7717   */\n  dup4\n    /* \"#utility.yul\":7704:7722   */\n  add\n    /* \"#utility.yul\":7695:7701   */\n  dup5\n    /* \"#utility.yul\":7651:7723   */\n  tag_61\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":7288:7730   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7736:7958   */\ntag_31:\n    /* \"#utility.yul\":7829:7833   */\n  0x00\n    /* \"#utility.yul\":7867:7869   */\n  0x20\n    /* \"#utility.yul\":7856:7865   */\n  dup3\n    /* \"#utility.yul\":7852:7870   */\n  add\n    /* \"#utility.yul\":7844:7870   */\n  swap1\n  pop\n    /* \"#utility.yul\":7880:7951   */\n  tag_156\n    /* \"#utility.yul\":7948:7949   */\n  0x00\n    /* \"#utility.yul\":7937:7946   */\n  dup4\n    /* \"#utility.yul\":7933:7950   */\n  add\n    /* \"#utility.yul\":7924:7930   */\n  dup5\n    /* \"#utility.yul\":7880:7951   */\n  tag_61\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":7736:7958   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":387:2396  contract MyToken is ERC20, IERC1363 {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":387:2396  contract MyToken is ERC20, IERC1363 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4000aea0\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xc1d34b89\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xc1d34b89\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xcae9ca51\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd8fbe994\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x4000aea0\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x18160ddd\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3177029f\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1296ee62\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":2204:2317  function supportsInterface(bytes4 interfaceId) external override pure returns (bool) {... */\n    tag_3:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":576:694  function transferAndCall(address to, uint256 value) external override pure returns (bool) {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1926:2049  function approveAndCall(address spender, uint256 value) external  pure override returns (bool) {... */\n    tag_10:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":729:1026  function transferAndCall(address to, uint256 value, bytes calldata data) external override returns (bool) {... */\n    tag_11:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_14:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1763:1920  function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) override pure external returns (bool) {... */\n    tag_15:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":2055:2198  function approveAndCall(address spender, uint256 value, bytes calldata data) override pure external returns (bool) {... */\n    tag_16:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1621:1757  function transferFromAndCall(address from, address to, uint256 value) external override pure returns (bool) {... */\n    tag_17:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":2204:2317  function supportsInterface(bytes4 interfaceId) external override pure returns (bool) {... */\n    tag_25:\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":2283:2287  bool */\n      0x00\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":2306:2310  true */\n      0x01\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":2299:2310  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":2204:2317  function supportsInterface(bytes4 interfaceId) external override pure returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_97\n      swap1\n      tag_96\n      jump\t// in\n    tag_97:\n      dup1\n      iszero\n      tag_98\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_99\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_98)\n    tag_99:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_100:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_100\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":576:694  function transferAndCall(address to, uint256 value) external override pure returns (bool) {... */\n    tag_39:\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":660:664  bool */\n      0x00\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":683:687  true */\n      0x01\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":676:687  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":576:694  function transferAndCall(address to, uint256 value) external override pure returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1926:2049  function approveAndCall(address spender, uint256 value) external  pure override returns (bool) {... */\n    tag_56:\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":2015:2019  bool */\n      0x00\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":2038:2042  true */\n      0x01\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":2031:2042  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1926:2049  function approveAndCall(address spender, uint256 value) external  pure override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":729:1026  function transferAndCall(address to, uint256 value, bytes calldata data) external override returns (bool) {... */\n    tag_61:\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":829:833  bool */\n      0x00\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":845:864  transfer(to, value) */\n      tag_117\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":854:856  to */\n      dup6\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":858:863  value */\n      dup6\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":845:853  transfer */\n      tag_73\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":845:864  transfer(to, value) */\n      jump\t// in\n    tag_117:\n      pop\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":906:956  _checkAndCallTransfer(msg.sender, to, value, data) */\n      tag_118\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":928:938  msg.sender */\n      caller\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":940:942  to */\n      dup7\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":944:949  value */\n      dup7\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":951:955  data */\n      dup7\n      dup7\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":906:956  _checkAndCallTransfer(msg.sender, to, value, data) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":906:927  _checkAndCallTransfer */\n      tag_119\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":906:956  _checkAndCallTransfer(msg.sender, to, value, data) */\n      jump\t// in\n    tag_118:\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":898:998  require(_checkAndCallTransfer(msg.sender, to, value, data), \"ERC1363: _checkAndCallTransfer failed\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1015:1019  true */\n      0x01\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1008:1019  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":729:1026  function transferAndCall(address to, uint256 value, bytes calldata data) external override returns (bool) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_125\n      swap1\n      tag_96\n      jump\t// in\n    tag_125:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_96\n      jump\t// in\n    tag_126:\n      dup1\n      iszero\n      tag_127\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_128\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_127)\n    tag_128:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_129:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_129\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1763:1920  function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) override pure external returns (bool) {... */\n    tag_78:\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1886:1890  bool */\n      0x00\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1909:1913  true */\n      0x01\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1902:1913  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1763:1920  function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) override pure external returns (bool) {... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":2055:2198  function approveAndCall(address spender, uint256 value, bytes calldata data) override pure external returns (bool) {... */\n    tag_82:\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":2164:2168  bool */\n      0x00\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":2187:2191  true */\n      0x01\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":2180:2191  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":2055:2198  function approveAndCall(address spender, uint256 value, bytes calldata data) override pure external returns (bool) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1621:1757  function transferFromAndCall(address from, address to, uint256 value) external override pure returns (bool) {... */\n    tag_86:\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1723:1727  bool */\n      0x00\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1746:1750  true */\n      0x01\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1739:1750  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1621:1757  function transferFromAndCall(address from, address to, uint256 value) external override pure returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_143\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_152\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1082:1615  function _checkAndCallTransfer(address from, address to, uint256 value, bytes memory data) internal returns (bool) {... */\n    tag_119:\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1191:1195  bool */\n      0x00\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1228:1229  0 */\n      0x00\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1211:1213  to */\n      dup5\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1211:1225  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1211:1229  to.code.length > 0 */\n      gt\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1207:1588  if (to.code.length > 0) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1322:1324  to */\n      dup4\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1305:1344  IERC1363Receiver(to).onTransferReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x88a7ca5c\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1345:1355  msg.sender */\n      caller\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1357:1361  from */\n      dup8\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1363:1368  value */\n      dup7\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1370:1374  data */\n      dup7\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1305:1375  IERC1363Receiver(to).onTransferReceived(msg.sender, from, value, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_160\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      0x01\n    tag_160:\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1301:1578  try IERC1363Receiver(to).onTransferReceived(msg.sender, from, value, data) returns (bytes4 retval) {... */\n      tag_163\n      jumpi\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1519:1563  revert(\"ERC1363: onTransferReceived failed\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1301:1578  try IERC1363Receiver(to).onTransferReceived(msg.sender, from, value, data) returns (bytes4 retval) {... */\n    tag_163:\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1435:1479  IERC1363Receiver.onTransferReceived.selector */\n      shl(0xe0, 0x88a7ca5c)\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1425:1479  retval == IERC1363Receiver.onTransferReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1425:1431  retval */\n      dup2\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1425:1479  retval == IERC1363Receiver.onTransferReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1418:1479  return retval == IERC1363Receiver.onTransferReceived.selector */\n      swap2\n      pop\n      pop\n      jump(tag_156)\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1207:1588  if (to.code.length > 0) {... */\n    tag_157:\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1604:1608  true */\n      0x01\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1597:1608  return true */\n      swap1\n      pop\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363.sol\":1082:1615  function _checkAndCallTransfer(address from, address to, uint256 value, bytes memory data) internal returns (bool) {... */\n    tag_156:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_171\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_175\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_176\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_179\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_181)\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_185)\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_186\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_188:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_189:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_190:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_191:\n        /* \"#utility.yul\":561:584   */\n      tag_231\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_190\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      0x00\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_232:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_192:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_234\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_191\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_24:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_237\n      tag_188\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":833:952   */\n    tag_236:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_238\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_192\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_193:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_194:\n        /* \"#utility.yul\":1268:1289   */\n      tag_241\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_193\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_27:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_243\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_194\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_195:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_196:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_197:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_198:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_199:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_249\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_195\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":2222:2293   */\n      tag_250\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_196\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_251\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_197\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2392:2421   */\n      tag_252\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_198\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_31:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_254\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_199\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2879   */\n    tag_200:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2830:2872   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2823:2828   */\n      dup3\n        /* \"#utility.yul\":2819:2873   */\n      and\n        /* \"#utility.yul\":2808:2873   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2885:2981   */\n    tag_201:\n        /* \"#utility.yul\":2922:2929   */\n      0x00\n        /* \"#utility.yul\":2951:2975   */\n      tag_257\n        /* \"#utility.yul\":2969:2974   */\n      dup3\n        /* \"#utility.yul\":2951:2975   */\n      tag_200\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2940:2975   */\n      swap1\n      pop\n        /* \"#utility.yul\":2885:2981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2987:3109   */\n    tag_202:\n        /* \"#utility.yul\":3060:3084   */\n      tag_259\n        /* \"#utility.yul\":3078:3083   */\n      dup2\n        /* \"#utility.yul\":3060:3084   */\n      tag_201\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":3053:3058   */\n      dup2\n        /* \"#utility.yul\":3050:3085   */\n      eq\n        /* \"#utility.yul\":3040:3103   */\n      tag_260\n      jumpi\n        /* \"#utility.yul\":3099:3100   */\n      0x00\n        /* \"#utility.yul\":3096:3097   */\n      0x00\n        /* \"#utility.yul\":3089:3101   */\n      revert\n        /* \"#utility.yul\":3040:3103   */\n    tag_260:\n        /* \"#utility.yul\":2987:3109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3254   */\n    tag_203:\n        /* \"#utility.yul\":3161:3166   */\n      0x00\n        /* \"#utility.yul\":3199:3205   */\n      dup2\n        /* \"#utility.yul\":3186:3206   */\n      calldataload\n        /* \"#utility.yul\":3177:3206   */\n      swap1\n      pop\n        /* \"#utility.yul\":3215:3248   */\n      tag_262\n        /* \"#utility.yul\":3242:3247   */\n      dup2\n        /* \"#utility.yul\":3215:3248   */\n      tag_202\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":3115:3254   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3260:3337   */\n    tag_204:\n        /* \"#utility.yul\":3297:3304   */\n      0x00\n        /* \"#utility.yul\":3326:3331   */\n      dup2\n        /* \"#utility.yul\":3315:3331   */\n      swap1\n      pop\n        /* \"#utility.yul\":3260:3337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3465   */\n    tag_205:\n        /* \"#utility.yul\":3416:3440   */\n      tag_265\n        /* \"#utility.yul\":3434:3439   */\n      dup2\n        /* \"#utility.yul\":3416:3440   */\n      tag_204\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":3409:3414   */\n      dup2\n        /* \"#utility.yul\":3406:3441   */\n      eq\n        /* \"#utility.yul\":3396:3459   */\n      tag_266\n      jumpi\n        /* \"#utility.yul\":3455:3456   */\n      0x00\n        /* \"#utility.yul\":3452:3453   */\n      0x00\n        /* \"#utility.yul\":3445:3457   */\n      revert\n        /* \"#utility.yul\":3396:3459   */\n    tag_266:\n        /* \"#utility.yul\":3343:3465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3471:3610   */\n    tag_206:\n        /* \"#utility.yul\":3517:3522   */\n      0x00\n        /* \"#utility.yul\":3555:3561   */\n      dup2\n        /* \"#utility.yul\":3542:3562   */\n      calldataload\n        /* \"#utility.yul\":3533:3562   */\n      swap1\n      pop\n        /* \"#utility.yul\":3571:3604   */\n      tag_268\n        /* \"#utility.yul\":3598:3603   */\n      dup2\n        /* \"#utility.yul\":3571:3604   */\n      tag_205\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":3471:3610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3616:4090   */\n    tag_34:\n        /* \"#utility.yul\":3684:3690   */\n      0x00\n        /* \"#utility.yul\":3692:3698   */\n      0x00\n        /* \"#utility.yul\":3741:3743   */\n      0x40\n        /* \"#utility.yul\":3729:3738   */\n      dup4\n        /* \"#utility.yul\":3720:3727   */\n      dup6\n        /* \"#utility.yul\":3716:3739   */\n      sub\n        /* \"#utility.yul\":3712:3744   */\n      slt\n        /* \"#utility.yul\":3709:3828   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":3747:3826   */\n      tag_271\n      tag_188\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":3709:3828   */\n    tag_270:\n        /* \"#utility.yul\":3867:3868   */\n      0x00\n        /* \"#utility.yul\":3892:3945   */\n      tag_272\n        /* \"#utility.yul\":3937:3944   */\n      dup6\n        /* \"#utility.yul\":3928:3934   */\n      dup3\n        /* \"#utility.yul\":3917:3926   */\n      dup7\n        /* \"#utility.yul\":3913:3935   */\n      add\n        /* \"#utility.yul\":3892:3945   */\n      tag_203\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":3882:3945   */\n      swap3\n      pop\n        /* \"#utility.yul\":3838:3955   */\n      pop\n        /* \"#utility.yul\":3994:3996   */\n      0x20\n        /* \"#utility.yul\":4020:4073   */\n      tag_273\n        /* \"#utility.yul\":4065:4072   */\n      dup6\n        /* \"#utility.yul\":4056:4062   */\n      dup3\n        /* \"#utility.yul\":4045:4054   */\n      dup7\n        /* \"#utility.yul\":4041:4063   */\n      add\n        /* \"#utility.yul\":4020:4073   */\n      tag_206\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":4010:4073   */\n      swap2\n      pop\n        /* \"#utility.yul\":3965:4083   */\n      pop\n        /* \"#utility.yul\":3616:4090   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4096:4214   */\n    tag_207:\n        /* \"#utility.yul\":4183:4207   */\n      tag_275\n        /* \"#utility.yul\":4201:4206   */\n      dup2\n        /* \"#utility.yul\":4183:4207   */\n      tag_204\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":4178:4181   */\n      dup3\n        /* \"#utility.yul\":4171:4208   */\n      mstore\n        /* \"#utility.yul\":4096:4214   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4220:4442   */\n    tag_44:\n        /* \"#utility.yul\":4313:4317   */\n      0x00\n        /* \"#utility.yul\":4351:4353   */\n      0x20\n        /* \"#utility.yul\":4340:4349   */\n      dup3\n        /* \"#utility.yul\":4336:4354   */\n      add\n        /* \"#utility.yul\":4328:4354   */\n      swap1\n      pop\n        /* \"#utility.yul\":4364:4435   */\n      tag_277\n        /* \"#utility.yul\":4432:4433   */\n      0x00\n        /* \"#utility.yul\":4421:4430   */\n      dup4\n        /* \"#utility.yul\":4417:4434   */\n      add\n        /* \"#utility.yul\":4408:4414   */\n      dup5\n        /* \"#utility.yul\":4364:4435   */\n      tag_207\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4220:4442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4448:5067   */\n    tag_47:\n        /* \"#utility.yul\":4525:4531   */\n      0x00\n        /* \"#utility.yul\":4533:4539   */\n      0x00\n        /* \"#utility.yul\":4541:4547   */\n      0x00\n        /* \"#utility.yul\":4590:4592   */\n      0x60\n        /* \"#utility.yul\":4578:4587   */\n      dup5\n        /* \"#utility.yul\":4569:4576   */\n      dup7\n        /* \"#utility.yul\":4565:4588   */\n      sub\n        /* \"#utility.yul\":4561:4593   */\n      slt\n        /* \"#utility.yul\":4558:4677   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":4596:4675   */\n      tag_280\n      tag_188\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":4558:4677   */\n    tag_279:\n        /* \"#utility.yul\":4716:4717   */\n      0x00\n        /* \"#utility.yul\":4741:4794   */\n      tag_281\n        /* \"#utility.yul\":4786:4793   */\n      dup7\n        /* \"#utility.yul\":4777:4783   */\n      dup3\n        /* \"#utility.yul\":4766:4775   */\n      dup8\n        /* \"#utility.yul\":4762:4784   */\n      add\n        /* \"#utility.yul\":4741:4794   */\n      tag_203\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":4731:4794   */\n      swap4\n      pop\n        /* \"#utility.yul\":4687:4804   */\n      pop\n        /* \"#utility.yul\":4843:4845   */\n      0x20\n        /* \"#utility.yul\":4869:4922   */\n      tag_282\n        /* \"#utility.yul\":4914:4921   */\n      dup7\n        /* \"#utility.yul\":4905:4911   */\n      dup3\n        /* \"#utility.yul\":4894:4903   */\n      dup8\n        /* \"#utility.yul\":4890:4912   */\n      add\n        /* \"#utility.yul\":4869:4922   */\n      tag_203\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":4859:4922   */\n      swap3\n      pop\n        /* \"#utility.yul\":4814:4932   */\n      pop\n        /* \"#utility.yul\":4971:4973   */\n      0x40\n        /* \"#utility.yul\":4997:5050   */\n      tag_283\n        /* \"#utility.yul\":5042:5049   */\n      dup7\n        /* \"#utility.yul\":5033:5039   */\n      dup3\n        /* \"#utility.yul\":5022:5031   */\n      dup8\n        /* \"#utility.yul\":5018:5040   */\n      add\n        /* \"#utility.yul\":4997:5050   */\n      tag_206\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":4987:5050   */\n      swap2\n      pop\n        /* \"#utility.yul\":4942:5060   */\n      pop\n        /* \"#utility.yul\":4448:5067   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5073:5159   */\n    tag_208:\n        /* \"#utility.yul\":5108:5115   */\n      0x00\n        /* \"#utility.yul\":5148:5152   */\n      0xff\n        /* \"#utility.yul\":5141:5146   */\n      dup3\n        /* \"#utility.yul\":5137:5153   */\n      and\n        /* \"#utility.yul\":5126:5153   */\n      swap1\n      pop\n        /* \"#utility.yul\":5073:5159   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5165:5277   */\n    tag_209:\n        /* \"#utility.yul\":5248:5270   */\n      tag_286\n        /* \"#utility.yul\":5264:5269   */\n      dup2\n        /* \"#utility.yul\":5248:5270   */\n      tag_208\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":5243:5246   */\n      dup3\n        /* \"#utility.yul\":5236:5271   */\n      mstore\n        /* \"#utility.yul\":5165:5277   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5283:5497   */\n    tag_53:\n        /* \"#utility.yul\":5372:5376   */\n      0x00\n        /* \"#utility.yul\":5410:5412   */\n      0x20\n        /* \"#utility.yul\":5399:5408   */\n      dup3\n        /* \"#utility.yul\":5395:5413   */\n      add\n        /* \"#utility.yul\":5387:5413   */\n      swap1\n      pop\n        /* \"#utility.yul\":5423:5490   */\n      tag_288\n        /* \"#utility.yul\":5487:5488   */\n      0x00\n        /* \"#utility.yul\":5476:5485   */\n      dup4\n        /* \"#utility.yul\":5472:5489   */\n      add\n        /* \"#utility.yul\":5463:5469   */\n      dup5\n        /* \"#utility.yul\":5423:5490   */\n      tag_209\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":5283:5497   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5503:5620   */\n    tag_210:\n        /* \"#utility.yul\":5612:5613   */\n      0x00\n        /* \"#utility.yul\":5609:5610   */\n      0x00\n        /* \"#utility.yul\":5602:5614   */\n      revert\n        /* \"#utility.yul\":5626:5743   */\n    tag_211:\n        /* \"#utility.yul\":5735:5736   */\n      0x00\n        /* \"#utility.yul\":5732:5733   */\n      0x00\n        /* \"#utility.yul\":5725:5737   */\n      revert\n        /* \"#utility.yul\":5749:5866   */\n    tag_212:\n        /* \"#utility.yul\":5858:5859   */\n      0x00\n        /* \"#utility.yul\":5855:5856   */\n      0x00\n        /* \"#utility.yul\":5848:5860   */\n      revert\n        /* \"#utility.yul\":5885:6437   */\n    tag_213:\n        /* \"#utility.yul\":5942:5950   */\n      0x00\n        /* \"#utility.yul\":5952:5958   */\n      0x00\n        /* \"#utility.yul\":6002:6005   */\n      dup4\n        /* \"#utility.yul\":5995:5999   */\n      0x1f\n        /* \"#utility.yul\":5987:5993   */\n      dup5\n        /* \"#utility.yul\":5983:6000   */\n      add\n        /* \"#utility.yul\":5979:6006   */\n      slt\n        /* \"#utility.yul\":5969:6091   */\n      tag_293\n      jumpi\n        /* \"#utility.yul\":6010:6089   */\n      tag_294\n      tag_210\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":5969:6091   */\n    tag_293:\n        /* \"#utility.yul\":6123:6129   */\n      dup3\n        /* \"#utility.yul\":6110:6130   */\n      calldataload\n        /* \"#utility.yul\":6100:6130   */\n      swap1\n      pop\n        /* \"#utility.yul\":6153:6171   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6145:6151   */\n      dup2\n        /* \"#utility.yul\":6142:6172   */\n      gt\n        /* \"#utility.yul\":6139:6256   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":6175:6254   */\n      tag_296\n      tag_211\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":6139:6256   */\n    tag_295:\n        /* \"#utility.yul\":6289:6293   */\n      0x20\n        /* \"#utility.yul\":6281:6287   */\n      dup4\n        /* \"#utility.yul\":6277:6294   */\n      add\n        /* \"#utility.yul\":6265:6294   */\n      swap2\n      pop\n        /* \"#utility.yul\":6343:6346   */\n      dup4\n        /* \"#utility.yul\":6335:6339   */\n      0x01\n        /* \"#utility.yul\":6327:6333   */\n      dup3\n        /* \"#utility.yul\":6323:6340   */\n      mul\n        /* \"#utility.yul\":6313:6321   */\n      dup4\n        /* \"#utility.yul\":6309:6341   */\n      add\n        /* \"#utility.yul\":6306:6347   */\n      gt\n        /* \"#utility.yul\":6303:6431   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":6350:6429   */\n      tag_298\n      tag_212\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":6303:6431   */\n    tag_297:\n        /* \"#utility.yul\":5885:6437   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6443:7260   */\n    tag_60:\n        /* \"#utility.yul\":6531:6537   */\n      0x00\n        /* \"#utility.yul\":6539:6545   */\n      0x00\n        /* \"#utility.yul\":6547:6553   */\n      0x00\n        /* \"#utility.yul\":6555:6561   */\n      0x00\n        /* \"#utility.yul\":6604:6606   */\n      0x60\n        /* \"#utility.yul\":6592:6601   */\n      dup6\n        /* \"#utility.yul\":6583:6590   */\n      dup8\n        /* \"#utility.yul\":6579:6602   */\n      sub\n        /* \"#utility.yul\":6575:6607   */\n      slt\n        /* \"#utility.yul\":6572:6691   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":6610:6689   */\n      tag_301\n      tag_188\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":6572:6691   */\n    tag_300:\n        /* \"#utility.yul\":6730:6731   */\n      0x00\n        /* \"#utility.yul\":6755:6808   */\n      tag_302\n        /* \"#utility.yul\":6800:6807   */\n      dup8\n        /* \"#utility.yul\":6791:6797   */\n      dup3\n        /* \"#utility.yul\":6780:6789   */\n      dup9\n        /* \"#utility.yul\":6776:6798   */\n      add\n        /* \"#utility.yul\":6755:6808   */\n      tag_203\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":6745:6808   */\n      swap5\n      pop\n        /* \"#utility.yul\":6701:6818   */\n      pop\n        /* \"#utility.yul\":6857:6859   */\n      0x20\n        /* \"#utility.yul\":6883:6936   */\n      tag_303\n        /* \"#utility.yul\":6928:6935   */\n      dup8\n        /* \"#utility.yul\":6919:6925   */\n      dup3\n        /* \"#utility.yul\":6908:6917   */\n      dup9\n        /* \"#utility.yul\":6904:6926   */\n      add\n        /* \"#utility.yul\":6883:6936   */\n      tag_206\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":6873:6936   */\n      swap4\n      pop\n        /* \"#utility.yul\":6828:6946   */\n      pop\n        /* \"#utility.yul\":7013:7015   */\n      0x40\n        /* \"#utility.yul\":7002:7011   */\n      dup6\n        /* \"#utility.yul\":6998:7016   */\n      add\n        /* \"#utility.yul\":6985:7017   */\n      calldataload\n        /* \"#utility.yul\":7044:7062   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7036:7042   */\n      dup2\n        /* \"#utility.yul\":7033:7063   */\n      gt\n        /* \"#utility.yul\":7030:7147   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":7066:7145   */\n      tag_305\n      tag_189\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":7030:7147   */\n    tag_304:\n        /* \"#utility.yul\":7179:7243   */\n      tag_306\n        /* \"#utility.yul\":7235:7242   */\n      dup8\n        /* \"#utility.yul\":7226:7232   */\n      dup3\n        /* \"#utility.yul\":7215:7224   */\n      dup9\n        /* \"#utility.yul\":7211:7233   */\n      add\n        /* \"#utility.yul\":7179:7243   */\n      tag_213\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":7161:7243   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":6956:7253   */\n      pop\n        /* \"#utility.yul\":6443:7260   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7266:7595   */\n    tag_65:\n        /* \"#utility.yul\":7325:7331   */\n      0x00\n        /* \"#utility.yul\":7374:7376   */\n      0x20\n        /* \"#utility.yul\":7362:7371   */\n      dup3\n        /* \"#utility.yul\":7353:7360   */\n      dup5\n        /* \"#utility.yul\":7349:7372   */\n      sub\n        /* \"#utility.yul\":7345:7377   */\n      slt\n        /* \"#utility.yul\":7342:7461   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":7380:7459   */\n      tag_309\n      tag_188\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":7342:7461   */\n    tag_308:\n        /* \"#utility.yul\":7500:7501   */\n      0x00\n        /* \"#utility.yul\":7525:7578   */\n      tag_310\n        /* \"#utility.yul\":7570:7577   */\n      dup5\n        /* \"#utility.yul\":7561:7567   */\n      dup3\n        /* \"#utility.yul\":7550:7559   */\n      dup6\n        /* \"#utility.yul\":7546:7568   */\n      add\n        /* \"#utility.yul\":7525:7578   */\n      tag_203\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":7515:7578   */\n      swap2\n      pop\n        /* \"#utility.yul\":7471:7588   */\n      pop\n        /* \"#utility.yul\":7266:7595   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7601:8564   */\n    tag_77:\n        /* \"#utility.yul\":7698:7704   */\n      0x00\n        /* \"#utility.yul\":7706:7712   */\n      0x00\n        /* \"#utility.yul\":7714:7720   */\n      0x00\n        /* \"#utility.yul\":7722:7728   */\n      0x00\n        /* \"#utility.yul\":7730:7736   */\n      0x00\n        /* \"#utility.yul\":7779:7782   */\n      0x80\n        /* \"#utility.yul\":7767:7776   */\n      dup7\n        /* \"#utility.yul\":7758:7765   */\n      dup9\n        /* \"#utility.yul\":7754:7777   */\n      sub\n        /* \"#utility.yul\":7750:7783   */\n      slt\n        /* \"#utility.yul\":7747:7867   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":7786:7865   */\n      tag_313\n      tag_188\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":7747:7867   */\n    tag_312:\n        /* \"#utility.yul\":7906:7907   */\n      0x00\n        /* \"#utility.yul\":7931:7984   */\n      tag_314\n        /* \"#utility.yul\":7976:7983   */\n      dup9\n        /* \"#utility.yul\":7967:7973   */\n      dup3\n        /* \"#utility.yul\":7956:7965   */\n      dup10\n        /* \"#utility.yul\":7952:7974   */\n      add\n        /* \"#utility.yul\":7931:7984   */\n      tag_203\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":7921:7984   */\n      swap6\n      pop\n        /* \"#utility.yul\":7877:7994   */\n      pop\n        /* \"#utility.yul\":8033:8035   */\n      0x20\n        /* \"#utility.yul\":8059:8112   */\n      tag_315\n        /* \"#utility.yul\":8104:8111   */\n      dup9\n        /* \"#utility.yul\":8095:8101   */\n      dup3\n        /* \"#utility.yul\":8084:8093   */\n      dup10\n        /* \"#utility.yul\":8080:8102   */\n      add\n        /* \"#utility.yul\":8059:8112   */\n      tag_203\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":8049:8112   */\n      swap5\n      pop\n        /* \"#utility.yul\":8004:8122   */\n      pop\n        /* \"#utility.yul\":8161:8163   */\n      0x40\n        /* \"#utility.yul\":8187:8240   */\n      tag_316\n        /* \"#utility.yul\":8232:8239   */\n      dup9\n        /* \"#utility.yul\":8223:8229   */\n      dup3\n        /* \"#utility.yul\":8212:8221   */\n      dup10\n        /* \"#utility.yul\":8208:8230   */\n      add\n        /* \"#utility.yul\":8187:8240   */\n      tag_206\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":8177:8240   */\n      swap4\n      pop\n        /* \"#utility.yul\":8132:8250   */\n      pop\n        /* \"#utility.yul\":8317:8319   */\n      0x60\n        /* \"#utility.yul\":8306:8315   */\n      dup7\n        /* \"#utility.yul\":8302:8320   */\n      add\n        /* \"#utility.yul\":8289:8321   */\n      calldataload\n        /* \"#utility.yul\":8348:8366   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8340:8346   */\n      dup2\n        /* \"#utility.yul\":8337:8367   */\n      gt\n        /* \"#utility.yul\":8334:8451   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":8370:8449   */\n      tag_318\n      tag_189\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":8334:8451   */\n    tag_317:\n        /* \"#utility.yul\":8483:8547   */\n      tag_319\n        /* \"#utility.yul\":8539:8546   */\n      dup9\n        /* \"#utility.yul\":8530:8536   */\n      dup3\n        /* \"#utility.yul\":8519:8528   */\n      dup10\n        /* \"#utility.yul\":8515:8537   */\n      add\n        /* \"#utility.yul\":8483:8547   */\n      tag_213\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":8465:8547   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":8260:8557   */\n      pop\n        /* \"#utility.yul\":7601:8564   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8570:9044   */\n    tag_90:\n        /* \"#utility.yul\":8638:8644   */\n      0x00\n        /* \"#utility.yul\":8646:8652   */\n      0x00\n        /* \"#utility.yul\":8695:8697   */\n      0x40\n        /* \"#utility.yul\":8683:8692   */\n      dup4\n        /* \"#utility.yul\":8674:8681   */\n      dup6\n        /* \"#utility.yul\":8670:8693   */\n      sub\n        /* \"#utility.yul\":8666:8698   */\n      slt\n        /* \"#utility.yul\":8663:8782   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":8701:8780   */\n      tag_322\n      tag_188\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":8663:8782   */\n    tag_321:\n        /* \"#utility.yul\":8821:8822   */\n      0x00\n        /* \"#utility.yul\":8846:8899   */\n      tag_323\n        /* \"#utility.yul\":8891:8898   */\n      dup6\n        /* \"#utility.yul\":8882:8888   */\n      dup3\n        /* \"#utility.yul\":8871:8880   */\n      dup7\n        /* \"#utility.yul\":8867:8889   */\n      add\n        /* \"#utility.yul\":8846:8899   */\n      tag_203\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":8836:8899   */\n      swap3\n      pop\n        /* \"#utility.yul\":8792:8909   */\n      pop\n        /* \"#utility.yul\":8948:8950   */\n      0x20\n        /* \"#utility.yul\":8974:9027   */\n      tag_324\n        /* \"#utility.yul\":9019:9026   */\n      dup6\n        /* \"#utility.yul\":9010:9016   */\n      dup3\n        /* \"#utility.yul\":8999:9008   */\n      dup7\n        /* \"#utility.yul\":8995:9017   */\n      add\n        /* \"#utility.yul\":8974:9027   */\n      tag_203\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":8964:9027   */\n      swap2\n      pop\n        /* \"#utility.yul\":8919:9037   */\n      pop\n        /* \"#utility.yul\":8570:9044   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9050:9230   */\n    tag_214:\n        /* \"#utility.yul\":9098:9175   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9095:9096   */\n      0x00\n        /* \"#utility.yul\":9088:9176   */\n      mstore\n        /* \"#utility.yul\":9195:9199   */\n      0x22\n        /* \"#utility.yul\":9192:9193   */\n      0x04\n        /* \"#utility.yul\":9185:9200   */\n      mstore\n        /* \"#utility.yul\":9219:9223   */\n      0x24\n        /* \"#utility.yul\":9216:9217   */\n      0x00\n        /* \"#utility.yul\":9209:9224   */\n      revert\n        /* \"#utility.yul\":9236:9556   */\n    tag_96:\n        /* \"#utility.yul\":9280:9286   */\n      0x00\n        /* \"#utility.yul\":9317:9318   */\n      0x02\n        /* \"#utility.yul\":9311:9315   */\n      dup3\n        /* \"#utility.yul\":9307:9319   */\n      div\n        /* \"#utility.yul\":9297:9319   */\n      swap1\n      pop\n        /* \"#utility.yul\":9364:9365   */\n      0x01\n        /* \"#utility.yul\":9358:9362   */\n      dup3\n        /* \"#utility.yul\":9354:9366   */\n      and\n        /* \"#utility.yul\":9385:9403   */\n      dup1\n        /* \"#utility.yul\":9375:9456   */\n      tag_327\n      jumpi\n        /* \"#utility.yul\":9441:9445   */\n      0x7f\n        /* \"#utility.yul\":9433:9439   */\n      dup3\n        /* \"#utility.yul\":9429:9446   */\n      and\n        /* \"#utility.yul\":9419:9446   */\n      swap2\n      pop\n        /* \"#utility.yul\":9375:9456   */\n    tag_327:\n        /* \"#utility.yul\":9503:9505   */\n      0x20\n        /* \"#utility.yul\":9495:9501   */\n      dup3\n        /* \"#utility.yul\":9492:9506   */\n      lt\n        /* \"#utility.yul\":9472:9490   */\n      dup2\n        /* \"#utility.yul\":9469:9507   */\n      sub\n        /* \"#utility.yul\":9466:9550   */\n      tag_328\n      jumpi\n        /* \"#utility.yul\":9522:9540   */\n      tag_329\n      tag_214\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":9466:9550   */\n    tag_328:\n        /* \"#utility.yul\":9287:9556   */\n      pop\n        /* \"#utility.yul\":9236:9556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9562:9786   */\n    tag_215:\n        /* \"#utility.yul\":9702:9736   */\n      0x455243313336333a205f636865636b416e6443616c6c5472616e736665722066\n        /* \"#utility.yul\":9698:9699   */\n      0x00\n        /* \"#utility.yul\":9690:9696   */\n      dup3\n        /* \"#utility.yul\":9686:9700   */\n      add\n        /* \"#utility.yul\":9679:9737   */\n      mstore\n        /* \"#utility.yul\":9771:9778   */\n      0x61696c6564000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9766:9768   */\n      0x20\n        /* \"#utility.yul\":9758:9764   */\n      dup3\n        /* \"#utility.yul\":9754:9769   */\n      add\n        /* \"#utility.yul\":9747:9779   */\n      mstore\n        /* \"#utility.yul\":9562:9786   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9792:10158   */\n    tag_216:\n        /* \"#utility.yul\":9934:9937   */\n      0x00\n        /* \"#utility.yul\":9955:10022   */\n      tag_332\n        /* \"#utility.yul\":10019:10021   */\n      0x25\n        /* \"#utility.yul\":10014:10017   */\n      dup4\n        /* \"#utility.yul\":9955:10022   */\n      tag_196\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":9948:10022   */\n      swap2\n      pop\n        /* \"#utility.yul\":10031:10124   */\n      tag_333\n        /* \"#utility.yul\":10120:10123   */\n      dup3\n        /* \"#utility.yul\":10031:10124   */\n      tag_215\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":10149:10151   */\n      0x40\n        /* \"#utility.yul\":10144:10147   */\n      dup3\n        /* \"#utility.yul\":10140:10152   */\n      add\n        /* \"#utility.yul\":10133:10152   */\n      swap1\n      pop\n        /* \"#utility.yul\":9792:10158   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10164:10583   */\n    tag_122:\n        /* \"#utility.yul\":10330:10334   */\n      0x00\n        /* \"#utility.yul\":10368:10370   */\n      0x20\n        /* \"#utility.yul\":10357:10366   */\n      dup3\n        /* \"#utility.yul\":10353:10371   */\n      add\n        /* \"#utility.yul\":10345:10371   */\n      swap1\n      pop\n        /* \"#utility.yul\":10417:10426   */\n      dup2\n        /* \"#utility.yul\":10411:10415   */\n      dup2\n        /* \"#utility.yul\":10407:10427   */\n      sub\n        /* \"#utility.yul\":10403:10404   */\n      0x00\n        /* \"#utility.yul\":10392:10401   */\n      dup4\n        /* \"#utility.yul\":10388:10405   */\n      add\n        /* \"#utility.yul\":10381:10428   */\n      mstore\n        /* \"#utility.yul\":10445:10576   */\n      tag_335\n        /* \"#utility.yul\":10571:10575   */\n      dup2\n        /* \"#utility.yul\":10445:10576   */\n      tag_216\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":10437:10576   */\n      swap1\n      pop\n        /* \"#utility.yul\":10164:10583   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10589:10707   */\n    tag_217:\n        /* \"#utility.yul\":10676:10700   */\n      tag_337\n        /* \"#utility.yul\":10694:10699   */\n      dup2\n        /* \"#utility.yul\":10676:10700   */\n      tag_201\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":10671:10674   */\n      dup3\n        /* \"#utility.yul\":10664:10701   */\n      mstore\n        /* \"#utility.yul\":10589:10707   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10713:11155   */\n    tag_146:\n        /* \"#utility.yul\":10862:10866   */\n      0x00\n        /* \"#utility.yul\":10900:10902   */\n      0x60\n        /* \"#utility.yul\":10889:10898   */\n      dup3\n        /* \"#utility.yul\":10885:10903   */\n      add\n        /* \"#utility.yul\":10877:10903   */\n      swap1\n      pop\n        /* \"#utility.yul\":10913:10984   */\n      tag_339\n        /* \"#utility.yul\":10981:10982   */\n      0x00\n        /* \"#utility.yul\":10970:10979   */\n      dup4\n        /* \"#utility.yul\":10966:10983   */\n      add\n        /* \"#utility.yul\":10957:10963   */\n      dup7\n        /* \"#utility.yul\":10913:10984   */\n      tag_217\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":10994:11066   */\n      tag_340\n        /* \"#utility.yul\":11062:11064   */\n      0x20\n        /* \"#utility.yul\":11051:11060   */\n      dup4\n        /* \"#utility.yul\":11047:11065   */\n      add\n        /* \"#utility.yul\":11038:11044   */\n      dup6\n        /* \"#utility.yul\":10994:11066   */\n      tag_207\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":11076:11148   */\n      tag_341\n        /* \"#utility.yul\":11144:11146   */\n      0x40\n        /* \"#utility.yul\":11133:11142   */\n      dup4\n        /* \"#utility.yul\":11129:11147   */\n      add\n        /* \"#utility.yul\":11120:11126   */\n      dup5\n        /* \"#utility.yul\":11076:11148   */\n      tag_207\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":10713:11155   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11161:11383   */\n    tag_151:\n        /* \"#utility.yul\":11254:11258   */\n      0x00\n        /* \"#utility.yul\":11292:11294   */\n      0x20\n        /* \"#utility.yul\":11281:11290   */\n      dup3\n        /* \"#utility.yul\":11277:11295   */\n      add\n        /* \"#utility.yul\":11269:11295   */\n      swap1\n      pop\n        /* \"#utility.yul\":11305:11376   */\n      tag_343\n        /* \"#utility.yul\":11373:11374   */\n      0x00\n        /* \"#utility.yul\":11362:11371   */\n      dup4\n        /* \"#utility.yul\":11358:11375   */\n      add\n        /* \"#utility.yul\":11349:11355   */\n      dup5\n        /* \"#utility.yul\":11305:11376   */\n      tag_217\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":11161:11383   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11389:11487   */\n    tag_218:\n        /* \"#utility.yul\":11440:11446   */\n      0x00\n        /* \"#utility.yul\":11474:11479   */\n      dup2\n        /* \"#utility.yul\":11468:11480   */\n      mload\n        /* \"#utility.yul\":11458:11480   */\n      swap1\n      pop\n        /* \"#utility.yul\":11389:11487   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11493:11661   */\n    tag_219:\n        /* \"#utility.yul\":11576:11587   */\n      0x00\n        /* \"#utility.yul\":11610:11616   */\n      dup3\n        /* \"#utility.yul\":11605:11608   */\n      dup3\n        /* \"#utility.yul\":11598:11617   */\n      mstore\n        /* \"#utility.yul\":11650:11654   */\n      0x20\n        /* \"#utility.yul\":11645:11648   */\n      dup3\n        /* \"#utility.yul\":11641:11655   */\n      add\n        /* \"#utility.yul\":11626:11655   */\n      swap1\n      pop\n        /* \"#utility.yul\":11493:11661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11667:12040   */\n    tag_220:\n        /* \"#utility.yul\":11753:11756   */\n      0x00\n        /* \"#utility.yul\":11781:11819   */\n      tag_347\n        /* \"#utility.yul\":11813:11818   */\n      dup3\n        /* \"#utility.yul\":11781:11819   */\n      tag_218\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":11835:11905   */\n      tag_348\n        /* \"#utility.yul\":11898:11904   */\n      dup2\n        /* \"#utility.yul\":11893:11896   */\n      dup6\n        /* \"#utility.yul\":11835:11905   */\n      tag_219\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":11828:11905   */\n      swap4\n      pop\n        /* \"#utility.yul\":11914:11979   */\n      tag_349\n        /* \"#utility.yul\":11972:11978   */\n      dup2\n        /* \"#utility.yul\":11967:11970   */\n      dup6\n        /* \"#utility.yul\":11960:11964   */\n      0x20\n        /* \"#utility.yul\":11953:11958   */\n      dup7\n        /* \"#utility.yul\":11949:11965   */\n      add\n        /* \"#utility.yul\":11914:11979   */\n      tag_197\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":12004:12033   */\n      tag_350\n        /* \"#utility.yul\":12026:12032   */\n      dup2\n        /* \"#utility.yul\":12004:12033   */\n      tag_198\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":11999:12002   */\n      dup5\n        /* \"#utility.yul\":11995:12034   */\n      add\n        /* \"#utility.yul\":11988:12034   */\n      swap2\n      pop\n        /* \"#utility.yul\":11757:12040   */\n      pop\n        /* \"#utility.yul\":11667:12040   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12046:12686   */\n    tag_159:\n        /* \"#utility.yul\":12241:12245   */\n      0x00\n        /* \"#utility.yul\":12279:12282   */\n      0x80\n        /* \"#utility.yul\":12268:12277   */\n      dup3\n        /* \"#utility.yul\":12264:12283   */\n      add\n        /* \"#utility.yul\":12256:12283   */\n      swap1\n      pop\n        /* \"#utility.yul\":12293:12364   */\n      tag_352\n        /* \"#utility.yul\":12361:12362   */\n      0x00\n        /* \"#utility.yul\":12350:12359   */\n      dup4\n        /* \"#utility.yul\":12346:12363   */\n      add\n        /* \"#utility.yul\":12337:12343   */\n      dup8\n        /* \"#utility.yul\":12293:12364   */\n      tag_217\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":12374:12446   */\n      tag_353\n        /* \"#utility.yul\":12442:12444   */\n      0x20\n        /* \"#utility.yul\":12431:12440   */\n      dup4\n        /* \"#utility.yul\":12427:12445   */\n      add\n        /* \"#utility.yul\":12418:12424   */\n      dup7\n        /* \"#utility.yul\":12374:12446   */\n      tag_217\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":12456:12528   */\n      tag_354\n        /* \"#utility.yul\":12524:12526   */\n      0x40\n        /* \"#utility.yul\":12513:12522   */\n      dup4\n        /* \"#utility.yul\":12509:12527   */\n      add\n        /* \"#utility.yul\":12500:12506   */\n      dup6\n        /* \"#utility.yul\":12456:12528   */\n      tag_207\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":12575:12584   */\n      dup2\n        /* \"#utility.yul\":12569:12573   */\n      dup2\n        /* \"#utility.yul\":12565:12585   */\n      sub\n        /* \"#utility.yul\":12560:12562   */\n      0x60\n        /* \"#utility.yul\":12549:12558   */\n      dup4\n        /* \"#utility.yul\":12545:12563   */\n      add\n        /* \"#utility.yul\":12538:12586   */\n      mstore\n        /* \"#utility.yul\":12603:12679   */\n      tag_355\n        /* \"#utility.yul\":12674:12678   */\n      dup2\n        /* \"#utility.yul\":12665:12671   */\n      dup5\n        /* \"#utility.yul\":12603:12679   */\n      tag_220\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":12595:12679   */\n      swap1\n      pop\n        /* \"#utility.yul\":12046:12686   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12692:12833   */\n    tag_221:\n        /* \"#utility.yul\":12748:12753   */\n      0x00\n        /* \"#utility.yul\":12779:12785   */\n      dup2\n        /* \"#utility.yul\":12773:12786   */\n      mload\n        /* \"#utility.yul\":12764:12786   */\n      swap1\n      pop\n        /* \"#utility.yul\":12795:12827   */\n      tag_357\n        /* \"#utility.yul\":12821:12826   */\n      dup2\n        /* \"#utility.yul\":12795:12827   */\n      tag_191\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":12692:12833   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12839:13188   */\n    tag_162:\n        /* \"#utility.yul\":12908:12914   */\n      0x00\n        /* \"#utility.yul\":12957:12959   */\n      0x20\n        /* \"#utility.yul\":12945:12954   */\n      dup3\n        /* \"#utility.yul\":12936:12943   */\n      dup5\n        /* \"#utility.yul\":12932:12955   */\n      sub\n        /* \"#utility.yul\":12928:12960   */\n      slt\n        /* \"#utility.yul\":12925:13044   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":12963:13042   */\n      tag_360\n      tag_188\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":12925:13044   */\n    tag_359:\n        /* \"#utility.yul\":13083:13084   */\n      0x00\n        /* \"#utility.yul\":13108:13171   */\n      tag_361\n        /* \"#utility.yul\":13163:13170   */\n      dup5\n        /* \"#utility.yul\":13154:13160   */\n      dup3\n        /* \"#utility.yul\":13143:13152   */\n      dup6\n        /* \"#utility.yul\":13139:13161   */\n      add\n        /* \"#utility.yul\":13108:13171   */\n      tag_221\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":13098:13171   */\n      swap2\n      pop\n        /* \"#utility.yul\":13054:13181   */\n      pop\n        /* \"#utility.yul\":12839:13188   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13194:13415   */\n    tag_222:\n        /* \"#utility.yul\":13334:13368   */\n      0x455243313336333a206f6e5472616e736665725265636569766564206661696c\n        /* \"#utility.yul\":13330:13331   */\n      0x00\n        /* \"#utility.yul\":13322:13328   */\n      dup3\n        /* \"#utility.yul\":13318:13332   */\n      add\n        /* \"#utility.yul\":13311:13369   */\n      mstore\n        /* \"#utility.yul\":13403:13407   */\n      0x6564000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13398:13400   */\n      0x20\n        /* \"#utility.yul\":13390:13396   */\n      dup3\n        /* \"#utility.yul\":13386:13401   */\n      add\n        /* \"#utility.yul\":13379:13408   */\n      mstore\n        /* \"#utility.yul\":13194:13415   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13421:13787   */\n    tag_223:\n        /* \"#utility.yul\":13563:13566   */\n      0x00\n        /* \"#utility.yul\":13584:13651   */\n      tag_364\n        /* \"#utility.yul\":13648:13650   */\n      0x22\n        /* \"#utility.yul\":13643:13646   */\n      dup4\n        /* \"#utility.yul\":13584:13651   */\n      tag_196\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":13577:13651   */\n      swap2\n      pop\n        /* \"#utility.yul\":13660:13753   */\n      tag_365\n        /* \"#utility.yul\":13749:13752   */\n      dup3\n        /* \"#utility.yul\":13660:13753   */\n      tag_222\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":13778:13780   */\n      0x40\n        /* \"#utility.yul\":13773:13776   */\n      dup3\n        /* \"#utility.yul\":13769:13781   */\n      add\n        /* \"#utility.yul\":13762:13781   */\n      swap1\n      pop\n        /* \"#utility.yul\":13421:13787   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13793:14212   */\n    tag_168:\n        /* \"#utility.yul\":13959:13963   */\n      0x00\n        /* \"#utility.yul\":13997:13999   */\n      0x20\n        /* \"#utility.yul\":13986:13995   */\n      dup3\n        /* \"#utility.yul\":13982:14000   */\n      add\n        /* \"#utility.yul\":13974:14000   */\n      swap1\n      pop\n        /* \"#utility.yul\":14046:14055   */\n      dup2\n        /* \"#utility.yul\":14040:14044   */\n      dup2\n        /* \"#utility.yul\":14036:14056   */\n      sub\n        /* \"#utility.yul\":14032:14033   */\n      0x00\n        /* \"#utility.yul\":14021:14030   */\n      dup4\n        /* \"#utility.yul\":14017:14034   */\n      add\n        /* \"#utility.yul\":14010:14057   */\n      mstore\n        /* \"#utility.yul\":14074:14205   */\n      tag_367\n        /* \"#utility.yul\":14200:14204   */\n      dup2\n        /* \"#utility.yul\":14074:14205   */\n      tag_223\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":14066:14205   */\n      swap1\n      pop\n        /* \"#utility.yul\":13793:14212   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14218:14398   */\n    tag_224:\n        /* \"#utility.yul\":14266:14343   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14263:14264   */\n      0x00\n        /* \"#utility.yul\":14256:14344   */\n      mstore\n        /* \"#utility.yul\":14363:14367   */\n      0x11\n        /* \"#utility.yul\":14360:14361   */\n      0x04\n        /* \"#utility.yul\":14353:14368   */\n      mstore\n        /* \"#utility.yul\":14387:14391   */\n      0x24\n        /* \"#utility.yul\":14384:14385   */\n      0x00\n        /* \"#utility.yul\":14377:14392   */\n      revert\n        /* \"#utility.yul\":14404:14595   */\n    tag_180:\n        /* \"#utility.yul\":14444:14447   */\n      0x00\n        /* \"#utility.yul\":14463:14483   */\n      tag_370\n        /* \"#utility.yul\":14481:14482   */\n      dup3\n        /* \"#utility.yul\":14463:14483   */\n      tag_204\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":14458:14483   */\n      swap2\n      pop\n        /* \"#utility.yul\":14497:14517   */\n      tag_371\n        /* \"#utility.yul\":14515:14516   */\n      dup4\n        /* \"#utility.yul\":14497:14517   */\n      tag_204\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":14492:14517   */\n      swap3\n      pop\n        /* \"#utility.yul\":14540:14541   */\n      dup3\n        /* \"#utility.yul\":14537:14538   */\n      dup3\n        /* \"#utility.yul\":14533:14542   */\n      add\n        /* \"#utility.yul\":14526:14542   */\n      swap1\n      pop\n        /* \"#utility.yul\":14561:14564   */\n      dup1\n        /* \"#utility.yul\":14558:14559   */\n      dup3\n        /* \"#utility.yul\":14555:14565   */\n      gt\n        /* \"#utility.yul\":14552:14588   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":14568:14586   */\n      tag_373\n      tag_224\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":14552:14588   */\n    tag_372:\n        /* \"#utility.yul\":14404:14595   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cea6dade97de971196c35b63b5b7c13acb56c2bc907caeab34061a7082e9a11e64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1217": {
									"entryPoint": null,
									"id": 1217,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_296": {
									"entryPoint": null,
									"id": 296,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_599": {
									"entryPoint": 213,
									"id": 599,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_566": {
									"entryPoint": 346,
									"id": 566,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 1951,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1408,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1840,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1036,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 991,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 883,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1174,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1306,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1343,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7961:13",
										"nodeType": "YulBlock",
										"src": "0:7961:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:32:13",
													"nodeType": "YulBlock",
													"src": "379:32:13",
													"statements": [
														{
															"nativeSrc": "389:16:13",
															"nodeType": "YulAssignment",
															"src": "389:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:13",
																"nodeType": "YulIdentifier",
																"src": "400:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:77:13"
											},
											{
												"body": {
													"nativeSrc": "460:79:13",
													"nodeType": "YulBlock",
													"src": "460:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:13",
																"nodeType": "YulBlock",
																"src": "517:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:13",
																					"nodeType": "YulLiteral",
																					"src": "526:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:13",
																					"nodeType": "YulLiteral",
																					"src": "529:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:13"
																			},
																			"nativeSrc": "519:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:13"
																		},
																		"nativeSrc": "519:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:13"
																				},
																				"nativeSrc": "490:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:13"
																		},
																		"nativeSrc": "480:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:13"
																},
																"nativeSrc": "473:43:13",
																"nodeType": "YulFunctionCall",
																"src": "473:43:13"
															},
															"nativeSrc": "470:63:13",
															"nodeType": "YulIf",
															"src": "470:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:13",
														"nodeType": "YulTypedName",
														"src": "453:5:13",
														"type": ""
													}
												],
												"src": "417:122:13"
											},
											{
												"body": {
													"nativeSrc": "608:80:13",
													"nodeType": "YulBlock",
													"src": "608:80:13",
													"statements": [
														{
															"nativeSrc": "618:22:13",
															"nodeType": "YulAssignment",
															"src": "618:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:13"
																},
																"nativeSrc": "627:13:13",
																"nodeType": "YulFunctionCall",
																"src": "627:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:13"
																},
																"nativeSrc": "649:33:13",
																"nodeType": "YulFunctionCall",
																"src": "649:33:13"
															},
															"nativeSrc": "649:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:13",
														"nodeType": "YulTypedName",
														"src": "586:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:13",
														"nodeType": "YulTypedName",
														"src": "594:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:13",
														"nodeType": "YulTypedName",
														"src": "602:5:13",
														"type": ""
													}
												],
												"src": "545:143:13"
											},
											{
												"body": {
													"nativeSrc": "771:274:13",
													"nodeType": "YulBlock",
													"src": "771:274:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "817:83:13",
																"nodeType": "YulBlock",
																"src": "817:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "819:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:13"
																			},
																			"nativeSrc": "819:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:13"
																		},
																		"nativeSrc": "819:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "792:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "801:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "788:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:13"
																		},
																		"nativeSrc": "788:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "813:2:13",
																		"nodeType": "YulLiteral",
																		"src": "813:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "784:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:13"
																},
																"nativeSrc": "784:32:13",
																"nodeType": "YulFunctionCall",
																"src": "784:32:13"
															},
															"nativeSrc": "781:119:13",
															"nodeType": "YulIf",
															"src": "781:119:13"
														},
														{
															"nativeSrc": "910:128:13",
															"nodeType": "YulBlock",
															"src": "910:128:13",
															"statements": [
																{
																	"nativeSrc": "925:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "939:1:13",
																		"nodeType": "YulLiteral",
																		"src": "939:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "929:6:13",
																			"nodeType": "YulTypedName",
																			"src": "929:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "954:74:13",
																	"nodeType": "YulAssignment",
																	"src": "954:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1000:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1011:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "996:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:13"
																				},
																				"nativeSrc": "996:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1020:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "964:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:13"
																		},
																		"nativeSrc": "964:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "954:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "694:351:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "741:9:13",
														"nodeType": "YulTypedName",
														"src": "741:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "752:7:13",
														"nodeType": "YulTypedName",
														"src": "752:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "764:6:13",
														"nodeType": "YulTypedName",
														"src": "764:6:13",
														"type": ""
													}
												],
												"src": "694:351:13"
											},
											{
												"body": {
													"nativeSrc": "1110:40:13",
													"nodeType": "YulBlock",
													"src": "1110:40:13",
													"statements": [
														{
															"nativeSrc": "1121:22:13",
															"nodeType": "YulAssignment",
															"src": "1121:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1137:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1137:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1131:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1131:5:13"
																},
																"nativeSrc": "1131:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1131:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1121:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1121:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1051:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1093:5:13",
														"nodeType": "YulTypedName",
														"src": "1093:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1103:6:13",
														"nodeType": "YulTypedName",
														"src": "1103:6:13",
														"type": ""
													}
												],
												"src": "1051:99:13"
											},
											{
												"body": {
													"nativeSrc": "1184:152:13",
													"nodeType": "YulBlock",
													"src": "1184:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1201:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1201:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1204:77:13",
																		"nodeType": "YulLiteral",
																		"src": "1204:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:13"
																},
																"nativeSrc": "1194:88:13",
																"nodeType": "YulFunctionCall",
																"src": "1194:88:13"
															},
															"nativeSrc": "1194:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "1194:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1298:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1298:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1301:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1301:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1291:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1291:6:13"
																},
																"nativeSrc": "1291:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1291:15:13"
															},
															"nativeSrc": "1291:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1291:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1322:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1322:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1325:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1325:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1315:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:13"
																},
																"nativeSrc": "1315:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1315:15:13"
															},
															"nativeSrc": "1315:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1315:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1156:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1156:180:13"
											},
											{
												"body": {
													"nativeSrc": "1370:152:13",
													"nodeType": "YulBlock",
													"src": "1370:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1387:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1387:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1390:77:13",
																		"nodeType": "YulLiteral",
																		"src": "1390:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1380:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:13"
																},
																"nativeSrc": "1380:88:13",
																"nodeType": "YulFunctionCall",
																"src": "1380:88:13"
															},
															"nativeSrc": "1380:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "1380:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1484:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1487:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1487:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1477:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1477:6:13"
																},
																"nativeSrc": "1477:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1477:15:13"
															},
															"nativeSrc": "1477:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1477:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1508:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1511:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1501:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:13"
																},
																"nativeSrc": "1501:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1501:15:13"
															},
															"nativeSrc": "1501:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1501:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1342:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1342:180:13"
											},
											{
												"body": {
													"nativeSrc": "1579:269:13",
													"nodeType": "YulBlock",
													"src": "1579:269:13",
													"statements": [
														{
															"nativeSrc": "1589:22:13",
															"nodeType": "YulAssignment",
															"src": "1589:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1603:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1603:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1609:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1609:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1599:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1599:3:13"
																},
																"nativeSrc": "1599:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1599:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1589:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:13"
																}
															]
														},
														{
															"nativeSrc": "1620:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1620:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1650:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1650:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1656:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1656:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1646:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1646:3:13"
																},
																"nativeSrc": "1646:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1646:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1624:18:13",
																	"nodeType": "YulTypedName",
																	"src": "1624:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1697:51:13",
																"nodeType": "YulBlock",
																"src": "1697:51:13",
																"statements": [
																	{
																		"nativeSrc": "1711:27:13",
																		"nodeType": "YulAssignment",
																		"src": "1711:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1725:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "1725:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1733:4:13",
																					"nodeType": "YulLiteral",
																					"src": "1733:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1721:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1721:3:13"
																			},
																			"nativeSrc": "1721:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1721:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1711:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1711:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1677:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "1677:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1670:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1670:6:13"
																},
																"nativeSrc": "1670:26:13",
																"nodeType": "YulFunctionCall",
																"src": "1670:26:13"
															},
															"nativeSrc": "1667:81:13",
															"nodeType": "YulIf",
															"src": "1667:81:13"
														},
														{
															"body": {
																"nativeSrc": "1800:42:13",
																"nodeType": "YulBlock",
																"src": "1800:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1814:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1814:16:13"
																			},
																			"nativeSrc": "1814:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1814:18:13"
																		},
																		"nativeSrc": "1814:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1814:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1764:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "1764:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1787:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1787:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1795:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1795:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1784:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1784:2:13"
																		},
																		"nativeSrc": "1784:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1784:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1761:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1761:2:13"
																},
																"nativeSrc": "1761:38:13",
																"nodeType": "YulFunctionCall",
																"src": "1761:38:13"
															},
															"nativeSrc": "1758:84:13",
															"nodeType": "YulIf",
															"src": "1758:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1528:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1563:4:13",
														"nodeType": "YulTypedName",
														"src": "1563:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1572:6:13",
														"nodeType": "YulTypedName",
														"src": "1572:6:13",
														"type": ""
													}
												],
												"src": "1528:320:13"
											},
											{
												"body": {
													"nativeSrc": "1908:87:13",
													"nodeType": "YulBlock",
													"src": "1908:87:13",
													"statements": [
														{
															"nativeSrc": "1918:11:13",
															"nodeType": "YulAssignment",
															"src": "1918:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "1926:3:13",
																"nodeType": "YulIdentifier",
																"src": "1926:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1918:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1918:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1946:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1946:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1949:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1949:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1939:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1939:6:13"
																},
																"nativeSrc": "1939:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1939:14:13"
															},
															"nativeSrc": "1939:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "1939:14:13"
														},
														{
															"nativeSrc": "1962:26:13",
															"nodeType": "YulAssignment",
															"src": "1962:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1980:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1980:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1983:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1983:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1970:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "1970:9:13"
																},
																"nativeSrc": "1970:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1970:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1962:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1962:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "1854:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1895:3:13",
														"nodeType": "YulTypedName",
														"src": "1895:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1903:4:13",
														"nodeType": "YulTypedName",
														"src": "1903:4:13",
														"type": ""
													}
												],
												"src": "1854:141:13"
											},
											{
												"body": {
													"nativeSrc": "2045:49:13",
													"nodeType": "YulBlock",
													"src": "2045:49:13",
													"statements": [
														{
															"nativeSrc": "2055:33:13",
															"nodeType": "YulAssignment",
															"src": "2055:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2073:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2073:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2080:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2080:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2069:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2069:3:13"
																		},
																		"nativeSrc": "2069:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2069:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2085:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2085:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2065:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2065:3:13"
																},
																"nativeSrc": "2065:23:13",
																"nodeType": "YulFunctionCall",
																"src": "2065:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2055:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2055:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2001:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2028:5:13",
														"nodeType": "YulTypedName",
														"src": "2028:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2038:6:13",
														"nodeType": "YulTypedName",
														"src": "2038:6:13",
														"type": ""
													}
												],
												"src": "2001:93:13"
											},
											{
												"body": {
													"nativeSrc": "2153:54:13",
													"nodeType": "YulBlock",
													"src": "2153:54:13",
													"statements": [
														{
															"nativeSrc": "2163:37:13",
															"nodeType": "YulAssignment",
															"src": "2163:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2188:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2188:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2194:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2194:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2184:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2184:3:13"
																},
																"nativeSrc": "2184:16:13",
																"nodeType": "YulFunctionCall",
																"src": "2184:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2163:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "2163:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2100:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2128:4:13",
														"nodeType": "YulTypedName",
														"src": "2128:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2134:5:13",
														"nodeType": "YulTypedName",
														"src": "2134:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2144:8:13",
														"nodeType": "YulTypedName",
														"src": "2144:8:13",
														"type": ""
													}
												],
												"src": "2100:107:13"
											},
											{
												"body": {
													"nativeSrc": "2289:317:13",
													"nodeType": "YulBlock",
													"src": "2289:317:13",
													"statements": [
														{
															"nativeSrc": "2299:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2299:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2320:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "2320:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2332:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2332:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2316:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2316:3:13"
																},
																"nativeSrc": "2316:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2316:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2303:9:13",
																	"nodeType": "YulTypedName",
																	"src": "2303:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2343:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2343:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2374:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2374:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2385:66:13",
																		"nodeType": "YulLiteral",
																		"src": "2385:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2355:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "2355:18:13"
																},
																"nativeSrc": "2355:97:13",
																"nodeType": "YulFunctionCall",
																"src": "2355:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2347:4:13",
																	"nodeType": "YulTypedName",
																	"src": "2347:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2461:51:13",
															"nodeType": "YulAssignment",
															"src": "2461:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2492:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2492:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2503:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "2503:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2473:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "2473:18:13"
																},
																"nativeSrc": "2473:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2473:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2461:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "2461:8:13"
																}
															]
														},
														{
															"nativeSrc": "2521:30:13",
															"nodeType": "YulAssignment",
															"src": "2521:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2534:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2534:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2545:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2545:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2541:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2541:3:13"
																		},
																		"nativeSrc": "2541:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2541:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2530:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2530:3:13"
																},
																"nativeSrc": "2530:21:13",
																"nodeType": "YulFunctionCall",
																"src": "2530:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2521:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2521:5:13"
																}
															]
														},
														{
															"nativeSrc": "2560:40:13",
															"nodeType": "YulAssignment",
															"src": "2560:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2573:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2573:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2584:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "2584:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2594:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2594:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2580:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2580:3:13"
																		},
																		"nativeSrc": "2580:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2580:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2570:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2570:2:13"
																},
																"nativeSrc": "2570:30:13",
																"nodeType": "YulFunctionCall",
																"src": "2570:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2560:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2560:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2213:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2250:5:13",
														"nodeType": "YulTypedName",
														"src": "2250:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2257:10:13",
														"nodeType": "YulTypedName",
														"src": "2257:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2269:8:13",
														"nodeType": "YulTypedName",
														"src": "2269:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2282:6:13",
														"nodeType": "YulTypedName",
														"src": "2282:6:13",
														"type": ""
													}
												],
												"src": "2213:393:13"
											},
											{
												"body": {
													"nativeSrc": "2644:28:13",
													"nodeType": "YulBlock",
													"src": "2644:28:13",
													"statements": [
														{
															"nativeSrc": "2654:12:13",
															"nodeType": "YulAssignment",
															"src": "2654:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "2661:5:13",
																"nodeType": "YulIdentifier",
																"src": "2661:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2654:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2654:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2612:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2630:5:13",
														"nodeType": "YulTypedName",
														"src": "2630:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2640:3:13",
														"nodeType": "YulTypedName",
														"src": "2640:3:13",
														"type": ""
													}
												],
												"src": "2612:60:13"
											},
											{
												"body": {
													"nativeSrc": "2738:82:13",
													"nodeType": "YulBlock",
													"src": "2738:82:13",
													"statements": [
														{
															"nativeSrc": "2748:66:13",
															"nodeType": "YulAssignment",
															"src": "2748:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2806:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2806:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2788:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "2788:17:13"
																				},
																				"nativeSrc": "2788:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2788:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2779:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "2779:8:13"
																		},
																		"nativeSrc": "2779:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2779:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2761:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2761:17:13"
																},
																"nativeSrc": "2761:53:13",
																"nodeType": "YulFunctionCall",
																"src": "2761:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2748:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "2748:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2678:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2718:5:13",
														"nodeType": "YulTypedName",
														"src": "2718:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2728:9:13",
														"nodeType": "YulTypedName",
														"src": "2728:9:13",
														"type": ""
													}
												],
												"src": "2678:142:13"
											},
											{
												"body": {
													"nativeSrc": "2873:28:13",
													"nodeType": "YulBlock",
													"src": "2873:28:13",
													"statements": [
														{
															"nativeSrc": "2883:12:13",
															"nodeType": "YulAssignment",
															"src": "2883:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "2890:5:13",
																"nodeType": "YulIdentifier",
																"src": "2890:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2883:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2883:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "2826:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2859:5:13",
														"nodeType": "YulTypedName",
														"src": "2859:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2869:3:13",
														"nodeType": "YulTypedName",
														"src": "2869:3:13",
														"type": ""
													}
												],
												"src": "2826:75:13"
											},
											{
												"body": {
													"nativeSrc": "2983:193:13",
													"nodeType": "YulBlock",
													"src": "2983:193:13",
													"statements": [
														{
															"nativeSrc": "2993:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2993:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3048:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "3048:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3017:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "3017:30:13"
																},
																"nativeSrc": "3017:39:13",
																"nodeType": "YulFunctionCall",
																"src": "3017:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2997:16:13",
																	"nodeType": "YulTypedName",
																	"src": "2997:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3072:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3072:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3112:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "3112:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3106:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "3106:5:13"
																				},
																				"nativeSrc": "3106:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3106:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3119:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3119:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3151:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "3151:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3127:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "3127:23:13"
																				},
																				"nativeSrc": "3127:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3127:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3078:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "3078:27:13"
																		},
																		"nativeSrc": "3078:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3078:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3065:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3065:6:13"
																},
																"nativeSrc": "3065:105:13",
																"nodeType": "YulFunctionCall",
																"src": "3065:105:13"
															},
															"nativeSrc": "3065:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "3065:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "2907:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2960:4:13",
														"nodeType": "YulTypedName",
														"src": "2960:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2966:6:13",
														"nodeType": "YulTypedName",
														"src": "2966:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2974:7:13",
														"nodeType": "YulTypedName",
														"src": "2974:7:13",
														"type": ""
													}
												],
												"src": "2907:269:13"
											},
											{
												"body": {
													"nativeSrc": "3231:24:13",
													"nodeType": "YulBlock",
													"src": "3231:24:13",
													"statements": [
														{
															"nativeSrc": "3241:8:13",
															"nodeType": "YulAssignment",
															"src": "3241:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "3248:1:13",
																"nodeType": "YulLiteral",
																"src": "3248:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3241:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3241:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3182:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3227:3:13",
														"nodeType": "YulTypedName",
														"src": "3227:3:13",
														"type": ""
													}
												],
												"src": "3182:73:13"
											},
											{
												"body": {
													"nativeSrc": "3314:136:13",
													"nodeType": "YulBlock",
													"src": "3314:136:13",
													"statements": [
														{
															"nativeSrc": "3324:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3324:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3338:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "3338:30:13"
																},
																"nativeSrc": "3338:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3338:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3328:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3328:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3423:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3423:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3429:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3429:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3437:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3437:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3379:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "3379:43:13"
																},
																"nativeSrc": "3379:65:13",
																"nodeType": "YulFunctionCall",
																"src": "3379:65:13"
															},
															"nativeSrc": "3379:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "3379:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3261:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3300:4:13",
														"nodeType": "YulTypedName",
														"src": "3300:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3306:6:13",
														"nodeType": "YulTypedName",
														"src": "3306:6:13",
														"type": ""
													}
												],
												"src": "3261:189:13"
											},
											{
												"body": {
													"nativeSrc": "3506:136:13",
													"nodeType": "YulBlock",
													"src": "3506:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3573:63:13",
																"nodeType": "YulBlock",
																"src": "3573:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3617:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "3617:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3624:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3624:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3587:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "3587:29:13"
																			},
																			"nativeSrc": "3587:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3587:39:13"
																		},
																		"nativeSrc": "3587:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3587:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3526:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3526:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3533:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3533:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3523:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3523:2:13"
																},
																"nativeSrc": "3523:14:13",
																"nodeType": "YulFunctionCall",
																"src": "3523:14:13"
															},
															"nativeSrc": "3516:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3538:26:13",
																"nodeType": "YulBlock",
																"src": "3538:26:13",
																"statements": [
																	{
																		"nativeSrc": "3540:22:13",
																		"nodeType": "YulAssignment",
																		"src": "3540:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3553:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "3553:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3560:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3560:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3549:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3549:3:13"
																			},
																			"nativeSrc": "3549:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3549:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3540:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3540:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3520:2:13",
																"nodeType": "YulBlock",
																"src": "3520:2:13",
																"statements": []
															},
															"src": "3516:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3456:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3494:5:13",
														"nodeType": "YulTypedName",
														"src": "3494:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3501:3:13",
														"nodeType": "YulTypedName",
														"src": "3501:3:13",
														"type": ""
													}
												],
												"src": "3456:186:13"
											},
											{
												"body": {
													"nativeSrc": "3727:464:13",
													"nodeType": "YulBlock",
													"src": "3727:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3753:431:13",
																"nodeType": "YulBlock",
																"src": "3753:431:13",
																"statements": [
																	{
																		"nativeSrc": "3767:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3767:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "3815:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "3815:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "3783:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "3783:31:13"
																			},
																			"nativeSrc": "3783:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "3771:8:13",
																				"nodeType": "YulTypedName",
																				"src": "3771:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3834:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3834:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "3857:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "3857:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "3885:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "3885:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "3867:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "3867:17:13"
																					},
																					"nativeSrc": "3867:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3867:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3853:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3853:3:13"
																			},
																			"nativeSrc": "3853:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3853:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "3838:11:13",
																				"nodeType": "YulTypedName",
																				"src": "3838:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4054:27:13",
																			"nodeType": "YulBlock",
																			"src": "4054:27:13",
																			"statements": [
																				{
																					"nativeSrc": "4056:23:13",
																					"nodeType": "YulAssignment",
																					"src": "4056:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4071:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "4071:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4056:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "4056:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4038:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "4038:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4050:2:13",
																					"nodeType": "YulLiteral",
																					"src": "4050:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4035:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "4035:2:13"
																			},
																			"nativeSrc": "4035:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4035:18:13"
																		},
																		"nativeSrc": "4032:49:13",
																		"nodeType": "YulIf",
																		"src": "4032:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4123:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "4123:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4140:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "4140:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4168:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "4168:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4150:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "4150:17:13"
																							},
																							"nativeSrc": "4150:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "4150:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4136:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "4136:3:13"
																					},
																					"nativeSrc": "4136:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4136:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4094:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "4094:28:13"
																			},
																			"nativeSrc": "4094:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4094:80:13"
																		},
																		"nativeSrc": "4094:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4094:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3744:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3744:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3749:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3749:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3741:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3741:2:13"
																},
																"nativeSrc": "3741:11:13",
																"nodeType": "YulFunctionCall",
																"src": "3741:11:13"
															},
															"nativeSrc": "3738:446:13",
															"nodeType": "YulIf",
															"src": "3738:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3648:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3703:5:13",
														"nodeType": "YulTypedName",
														"src": "3703:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3710:3:13",
														"nodeType": "YulTypedName",
														"src": "3710:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3715:10:13",
														"nodeType": "YulTypedName",
														"src": "3715:10:13",
														"type": ""
													}
												],
												"src": "3648:543:13"
											},
											{
												"body": {
													"nativeSrc": "4260:54:13",
													"nodeType": "YulBlock",
													"src": "4260:54:13",
													"statements": [
														{
															"nativeSrc": "4270:37:13",
															"nodeType": "YulAssignment",
															"src": "4270:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4295:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4295:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4301:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4301:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4291:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4291:3:13"
																},
																"nativeSrc": "4291:16:13",
																"nodeType": "YulFunctionCall",
																"src": "4291:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4270:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "4270:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4197:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4235:4:13",
														"nodeType": "YulTypedName",
														"src": "4235:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4241:5:13",
														"nodeType": "YulTypedName",
														"src": "4241:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4251:8:13",
														"nodeType": "YulTypedName",
														"src": "4251:8:13",
														"type": ""
													}
												],
												"src": "4197:117:13"
											},
											{
												"body": {
													"nativeSrc": "4371:118:13",
													"nodeType": "YulBlock",
													"src": "4371:118:13",
													"statements": [
														{
															"nativeSrc": "4381:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4381:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4430:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4430:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4433:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4433:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4426:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4426:3:13"
																				},
																				"nativeSrc": "4426:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4426:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4445:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4445:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4441:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4441:3:13"
																				},
																				"nativeSrc": "4441:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4441:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4397:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "4397:28:13"
																		},
																		"nativeSrc": "4397:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4397:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4393:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4393:3:13"
																},
																"nativeSrc": "4393:56:13",
																"nodeType": "YulFunctionCall",
																"src": "4393:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4385:4:13",
																	"nodeType": "YulTypedName",
																	"src": "4385:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4458:25:13",
															"nodeType": "YulAssignment",
															"src": "4458:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4472:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4472:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4478:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4478:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4468:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4468:3:13"
																},
																"nativeSrc": "4468:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4468:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4458:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4458:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4320:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4348:4:13",
														"nodeType": "YulTypedName",
														"src": "4348:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4354:5:13",
														"nodeType": "YulTypedName",
														"src": "4354:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4364:6:13",
														"nodeType": "YulTypedName",
														"src": "4364:6:13",
														"type": ""
													}
												],
												"src": "4320:169:13"
											},
											{
												"body": {
													"nativeSrc": "4575:214:13",
													"nodeType": "YulBlock",
													"src": "4575:214:13",
													"statements": [
														{
															"nativeSrc": "4708:37:13",
															"nodeType": "YulAssignment",
															"src": "4708:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4735:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4735:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4741:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4741:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4716:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "4716:18:13"
																},
																"nativeSrc": "4716:29:13",
																"nodeType": "YulFunctionCall",
																"src": "4716:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4708:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4708:4:13"
																}
															]
														},
														{
															"nativeSrc": "4754:29:13",
															"nodeType": "YulAssignment",
															"src": "4754:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4765:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4765:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4775:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4775:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "4778:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4778:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "4771:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4771:3:13"
																		},
																		"nativeSrc": "4771:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4771:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4762:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4762:2:13"
																},
																"nativeSrc": "4762:21:13",
																"nodeType": "YulFunctionCall",
																"src": "4762:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4754:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4754:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4494:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4556:4:13",
														"nodeType": "YulTypedName",
														"src": "4556:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4562:3:13",
														"nodeType": "YulTypedName",
														"src": "4562:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4570:4:13",
														"nodeType": "YulTypedName",
														"src": "4570:4:13",
														"type": ""
													}
												],
												"src": "4494:295:13"
											},
											{
												"body": {
													"nativeSrc": "4886:1303:13",
													"nodeType": "YulBlock",
													"src": "4886:1303:13",
													"statements": [
														{
															"nativeSrc": "4897:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4897:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "4944:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4944:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4911:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "4911:32:13"
																},
																"nativeSrc": "4911:37:13",
																"nodeType": "YulFunctionCall",
																"src": "4911:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "4901:6:13",
																	"nodeType": "YulTypedName",
																	"src": "4901:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5033:22:13",
																"nodeType": "YulBlock",
																"src": "5033:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5035:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5035:16:13"
																			},
																			"nativeSrc": "5035:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5035:18:13"
																		},
																		"nativeSrc": "5035:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5035:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5005:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5005:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5013:18:13",
																		"nodeType": "YulLiteral",
																		"src": "5013:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5002:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5002:2:13"
																},
																"nativeSrc": "5002:30:13",
																"nodeType": "YulFunctionCall",
																"src": "5002:30:13"
															},
															"nativeSrc": "4999:56:13",
															"nodeType": "YulIf",
															"src": "4999:56:13"
														},
														{
															"nativeSrc": "5065:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5065:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5111:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "5111:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5105:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "5105:5:13"
																		},
																		"nativeSrc": "5105:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5105:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5079:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "5079:25:13"
																},
																"nativeSrc": "5079:38:13",
																"nodeType": "YulFunctionCall",
																"src": "5079:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5069:6:13",
																	"nodeType": "YulTypedName",
																	"src": "5069:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5210:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5210:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5216:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5216:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5224:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5224:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5164:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "5164:45:13"
																},
																"nativeSrc": "5164:67:13",
																"nodeType": "YulFunctionCall",
																"src": "5164:67:13"
															},
															"nativeSrc": "5164:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "5164:67:13"
														},
														{
															"nativeSrc": "5241:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5241:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "5258:1:13",
																"nodeType": "YulLiteral",
																"src": "5258:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5245:9:13",
																	"nodeType": "YulTypedName",
																	"src": "5245:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5269:17:13",
															"nodeType": "YulAssignment",
															"src": "5269:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "5282:4:13",
																"nodeType": "YulLiteral",
																"src": "5282:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5269:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "5269:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5333:611:13",
																		"nodeType": "YulBlock",
																		"src": "5333:611:13",
																		"statements": [
																			{
																				"nativeSrc": "5347:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5347:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5366:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "5366:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5378:4:13",
																									"nodeType": "YulLiteral",
																									"src": "5378:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5374:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "5374:3:13"
																							},
																							"nativeSrc": "5374:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "5374:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5362:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "5362:3:13"
																					},
																					"nativeSrc": "5362:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5362:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5351:7:13",
																						"nodeType": "YulTypedName",
																						"src": "5351:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5398:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5398:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5444:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "5444:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5412:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "5412:31:13"
																					},
																					"nativeSrc": "5412:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5412:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5402:6:13",
																						"nodeType": "YulTypedName",
																						"src": "5402:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5462:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5462:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5471:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5471:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5466:1:13",
																						"nodeType": "YulTypedName",
																						"src": "5466:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5530:163:13",
																					"nodeType": "YulBlock",
																					"src": "5530:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5555:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "5555:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5573:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "5573:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5578:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "5578:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5569:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "5569:3:13"
																												},
																												"nativeSrc": "5569:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "5569:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5563:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "5563:5:13"
																										},
																										"nativeSrc": "5563:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "5563:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5548:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "5548:6:13"
																								},
																								"nativeSrc": "5548:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5548:42:13"
																							},
																							"nativeSrc": "5548:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "5548:42:13"
																						},
																						{
																							"nativeSrc": "5607:24:13",
																							"nodeType": "YulAssignment",
																							"src": "5607:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5621:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "5621:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5629:1:13",
																										"nodeType": "YulLiteral",
																										"src": "5629:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5617:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "5617:3:13"
																								},
																								"nativeSrc": "5617:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5617:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5607:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "5607:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5648:31:13",
																							"nodeType": "YulAssignment",
																							"src": "5648:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5665:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "5665:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5676:2:13",
																										"nodeType": "YulLiteral",
																										"src": "5676:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5661:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "5661:3:13"
																								},
																								"nativeSrc": "5661:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5661:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5648:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "5648:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5496:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "5496:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5499:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "5499:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5493:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "5493:2:13"
																					},
																					"nativeSrc": "5493:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5493:14:13"
																				},
																				"nativeSrc": "5485:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5508:21:13",
																					"nodeType": "YulBlock",
																					"src": "5508:21:13",
																					"statements": [
																						{
																							"nativeSrc": "5510:17:13",
																							"nodeType": "YulAssignment",
																							"src": "5510:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5519:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "5519:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5522:4:13",
																										"nodeType": "YulLiteral",
																										"src": "5522:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5515:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "5515:3:13"
																								},
																								"nativeSrc": "5515:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5515:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5510:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "5510:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5489:3:13",
																					"nodeType": "YulBlock",
																					"src": "5489:3:13",
																					"statements": []
																				},
																				"src": "5485:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "5729:156:13",
																					"nodeType": "YulBlock",
																					"src": "5729:156:13",
																					"statements": [
																						{
																							"nativeSrc": "5747:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5747:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5774:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "5774:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5779:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "5779:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5770:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "5770:3:13"
																										},
																										"nativeSrc": "5770:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "5770:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5764:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "5764:5:13"
																								},
																								"nativeSrc": "5764:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5764:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5751:9:13",
																									"nodeType": "YulTypedName",
																									"src": "5751:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5814:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "5814:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "5841:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "5841:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "5856:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "5856:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "5864:4:13",
																														"nodeType": "YulLiteral",
																														"src": "5864:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "5852:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "5852:3:13"
																												},
																												"nativeSrc": "5852:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "5852:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "5822:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "5822:18:13"
																										},
																										"nativeSrc": "5822:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "5822:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5807:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "5807:6:13"
																								},
																								"nativeSrc": "5807:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5807:64:13"
																							},
																							"nativeSrc": "5807:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "5807:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5712:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "5712:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5721:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "5721:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5709:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "5709:2:13"
																					},
																					"nativeSrc": "5709:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5709:19:13"
																				},
																				"nativeSrc": "5706:179:13",
																				"nodeType": "YulIf",
																				"src": "5706:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5905:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "5905:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "5919:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "5919:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "5927:1:13",
																											"nodeType": "YulLiteral",
																											"src": "5927:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "5915:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "5915:3:13"
																									},
																									"nativeSrc": "5915:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "5915:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5931:1:13",
																									"nodeType": "YulLiteral",
																									"src": "5931:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5911:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "5911:3:13"
																							},
																							"nativeSrc": "5911:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "5911:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5898:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5898:6:13"
																					},
																					"nativeSrc": "5898:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5898:36:13"
																				},
																				"nativeSrc": "5898:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "5898:36:13"
																			}
																		]
																	},
																	"nativeSrc": "5326:618:13",
																	"nodeType": "YulCase",
																	"src": "5326:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5331:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5331:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5961:222:13",
																		"nodeType": "YulBlock",
																		"src": "5961:222:13",
																		"statements": [
																			{
																				"nativeSrc": "5975:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5975:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5988:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5988:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5979:5:13",
																						"nodeType": "YulTypedName",
																						"src": "5979:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6012:67:13",
																					"nodeType": "YulBlock",
																					"src": "6012:67:13",
																					"statements": [
																						{
																							"nativeSrc": "6030:35:13",
																							"nodeType": "YulAssignment",
																							"src": "6030:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6049:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "6049:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6054:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "6054:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6045:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "6045:3:13"
																										},
																										"nativeSrc": "6045:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "6045:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6039:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "6039:5:13"
																								},
																								"nativeSrc": "6039:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "6039:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6030:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "6030:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6005:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "6005:6:13"
																				},
																				"nativeSrc": "6002:77:13",
																				"nodeType": "YulIf",
																				"src": "6002:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6099:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "6099:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6158:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "6158:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6165:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "6165:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6105:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "6105:52:13"
																							},
																							"nativeSrc": "6105:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "6105:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6092:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6092:6:13"
																					},
																					"nativeSrc": "6092:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6092:81:13"
																				},
																				"nativeSrc": "6092:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "6092:81:13"
																			}
																		]
																	},
																	"nativeSrc": "5953:230:13",
																	"nodeType": "YulCase",
																	"src": "5953:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5306:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5306:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5314:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5314:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5303:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5303:2:13"
																},
																"nativeSrc": "5303:14:13",
																"nodeType": "YulFunctionCall",
																"src": "5303:14:13"
															},
															"nativeSrc": "5296:887:13",
															"nodeType": "YulSwitch",
															"src": "5296:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "4794:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4875:4:13",
														"nodeType": "YulTypedName",
														"src": "4875:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "4881:3:13",
														"nodeType": "YulTypedName",
														"src": "4881:3:13",
														"type": ""
													}
												],
												"src": "4794:1395:13"
											},
											{
												"body": {
													"nativeSrc": "6240:81:13",
													"nodeType": "YulBlock",
													"src": "6240:81:13",
													"statements": [
														{
															"nativeSrc": "6250:65:13",
															"nodeType": "YulAssignment",
															"src": "6250:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6265:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6265:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6272:42:13",
																		"nodeType": "YulLiteral",
																		"src": "6272:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6261:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6261:3:13"
																},
																"nativeSrc": "6261:54:13",
																"nodeType": "YulFunctionCall",
																"src": "6261:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6250:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "6250:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "6195:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6222:5:13",
														"nodeType": "YulTypedName",
														"src": "6222:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6232:7:13",
														"nodeType": "YulTypedName",
														"src": "6232:7:13",
														"type": ""
													}
												],
												"src": "6195:126:13"
											},
											{
												"body": {
													"nativeSrc": "6372:51:13",
													"nodeType": "YulBlock",
													"src": "6372:51:13",
													"statements": [
														{
															"nativeSrc": "6382:35:13",
															"nodeType": "YulAssignment",
															"src": "6382:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6411:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6411:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "6393:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "6393:17:13"
																},
																"nativeSrc": "6393:24:13",
																"nodeType": "YulFunctionCall",
																"src": "6393:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6382:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "6382:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "6327:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6354:5:13",
														"nodeType": "YulTypedName",
														"src": "6354:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6364:7:13",
														"nodeType": "YulTypedName",
														"src": "6364:7:13",
														"type": ""
													}
												],
												"src": "6327:96:13"
											},
											{
												"body": {
													"nativeSrc": "6494:53:13",
													"nodeType": "YulBlock",
													"src": "6494:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:13"
																		},
																		"nativeSrc": "6516:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:13"
																},
																"nativeSrc": "6504:37:13",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:13"
															},
															"nativeSrc": "6504:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:13",
														"nodeType": "YulTypedName",
														"src": "6482:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:13",
														"nodeType": "YulTypedName",
														"src": "6489:3:13",
														"type": ""
													}
												],
												"src": "6429:118:13"
											},
											{
												"body": {
													"nativeSrc": "6651:124:13",
													"nodeType": "YulBlock",
													"src": "6651:124:13",
													"statements": [
														{
															"nativeSrc": "6661:26:13",
															"nodeType": "YulAssignment",
															"src": "6661:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:13"
																},
																"nativeSrc": "6669:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:13"
																		},
																		"nativeSrc": "6750:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:13"
																},
																"nativeSrc": "6697:71:13",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:13"
															},
															"nativeSrc": "6697:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:13",
														"nodeType": "YulTypedName",
														"src": "6623:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:13",
														"nodeType": "YulTypedName",
														"src": "6635:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:13",
														"nodeType": "YulTypedName",
														"src": "6646:4:13",
														"type": ""
													}
												],
												"src": "6553:222:13"
											},
											{
												"body": {
													"nativeSrc": "6809:152:13",
													"nodeType": "YulBlock",
													"src": "6809:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6826:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6826:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6829:77:13",
																		"nodeType": "YulLiteral",
																		"src": "6829:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6819:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6819:6:13"
																},
																"nativeSrc": "6819:88:13",
																"nodeType": "YulFunctionCall",
																"src": "6819:88:13"
															},
															"nativeSrc": "6819:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "6819:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6923:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6923:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6926:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6926:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6916:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:13"
																},
																"nativeSrc": "6916:15:13",
																"nodeType": "YulFunctionCall",
																"src": "6916:15:13"
															},
															"nativeSrc": "6916:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "6916:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6947:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6947:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6950:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6950:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6940:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6940:6:13"
																},
																"nativeSrc": "6940:15:13",
																"nodeType": "YulFunctionCall",
																"src": "6940:15:13"
															},
															"nativeSrc": "6940:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "6940:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6781:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "6781:180:13"
											},
											{
												"body": {
													"nativeSrc": "7011:147:13",
													"nodeType": "YulBlock",
													"src": "7011:147:13",
													"statements": [
														{
															"nativeSrc": "7021:25:13",
															"nodeType": "YulAssignment",
															"src": "7021:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7044:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7044:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7026:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "7026:17:13"
																},
																"nativeSrc": "7026:20:13",
																"nodeType": "YulFunctionCall",
																"src": "7026:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7021:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "7021:1:13"
																}
															]
														},
														{
															"nativeSrc": "7055:25:13",
															"nodeType": "YulAssignment",
															"src": "7055:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7078:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7078:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7060:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "7060:17:13"
																},
																"nativeSrc": "7060:20:13",
																"nodeType": "YulFunctionCall",
																"src": "7060:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7055:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "7055:1:13"
																}
															]
														},
														{
															"nativeSrc": "7089:16:13",
															"nodeType": "YulAssignment",
															"src": "7089:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7100:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7100:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7103:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7103:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7096:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7096:3:13"
																},
																"nativeSrc": "7096:9:13",
																"nodeType": "YulFunctionCall",
																"src": "7096:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7089:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7089:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7129:22:13",
																"nodeType": "YulBlock",
																"src": "7129:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7131:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "7131:16:13"
																			},
																			"nativeSrc": "7131:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7131:18:13"
																		},
																		"nativeSrc": "7131:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7131:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7121:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7121:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7124:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7124:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7118:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7118:2:13"
																},
																"nativeSrc": "7118:10:13",
																"nodeType": "YulFunctionCall",
																"src": "7118:10:13"
															},
															"nativeSrc": "7115:36:13",
															"nodeType": "YulIf",
															"src": "7115:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6967:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6998:1:13",
														"nodeType": "YulTypedName",
														"src": "6998:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7001:1:13",
														"nodeType": "YulTypedName",
														"src": "7001:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7007:3:13",
														"nodeType": "YulTypedName",
														"src": "7007:3:13",
														"type": ""
													}
												],
												"src": "6967:191:13"
											},
											{
												"body": {
													"nativeSrc": "7229:53:13",
													"nodeType": "YulBlock",
													"src": "7229:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7246:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7246:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7269:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "7269:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7251:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "7251:17:13"
																		},
																		"nativeSrc": "7251:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7251:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7239:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7239:6:13"
																},
																"nativeSrc": "7239:37:13",
																"nodeType": "YulFunctionCall",
																"src": "7239:37:13"
															},
															"nativeSrc": "7239:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "7239:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7164:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7217:5:13",
														"nodeType": "YulTypedName",
														"src": "7217:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7224:3:13",
														"nodeType": "YulTypedName",
														"src": "7224:3:13",
														"type": ""
													}
												],
												"src": "7164:118:13"
											},
											{
												"body": {
													"nativeSrc": "7442:288:13",
													"nodeType": "YulBlock",
													"src": "7442:288:13",
													"statements": [
														{
															"nativeSrc": "7452:26:13",
															"nodeType": "YulAssignment",
															"src": "7452:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7464:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7464:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7475:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7475:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7460:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7460:3:13"
																},
																"nativeSrc": "7460:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7460:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7452:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7452:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7532:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7532:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7545:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7545:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7556:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7556:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7541:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7541:3:13"
																		},
																		"nativeSrc": "7541:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7541:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7488:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "7488:43:13"
																},
																"nativeSrc": "7488:71:13",
																"nodeType": "YulFunctionCall",
																"src": "7488:71:13"
															},
															"nativeSrc": "7488:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "7488:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7613:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7613:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7626:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7626:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7637:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7637:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7622:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7622:3:13"
																		},
																		"nativeSrc": "7622:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7622:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7569:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "7569:43:13"
																},
																"nativeSrc": "7569:72:13",
																"nodeType": "YulFunctionCall",
																"src": "7569:72:13"
															},
															"nativeSrc": "7569:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "7569:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7695:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7695:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7708:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7708:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7719:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7719:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7704:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7704:3:13"
																		},
																		"nativeSrc": "7704:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7704:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7651:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "7651:43:13"
																},
																"nativeSrc": "7651:72:13",
																"nodeType": "YulFunctionCall",
																"src": "7651:72:13"
															},
															"nativeSrc": "7651:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "7651:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7288:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7398:9:13",
														"nodeType": "YulTypedName",
														"src": "7398:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7410:6:13",
														"nodeType": "YulTypedName",
														"src": "7410:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7418:6:13",
														"nodeType": "YulTypedName",
														"src": "7418:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7426:6:13",
														"nodeType": "YulTypedName",
														"src": "7426:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7437:4:13",
														"nodeType": "YulTypedName",
														"src": "7437:4:13",
														"type": ""
													}
												],
												"src": "7288:442:13"
											},
											{
												"body": {
													"nativeSrc": "7834:124:13",
													"nodeType": "YulBlock",
													"src": "7834:124:13",
													"statements": [
														{
															"nativeSrc": "7844:26:13",
															"nodeType": "YulAssignment",
															"src": "7844:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7856:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7856:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7867:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7867:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7852:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7852:3:13"
																},
																"nativeSrc": "7852:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7852:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7844:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7844:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7924:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7924:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7937:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7937:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7948:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7948:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7933:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7933:3:13"
																		},
																		"nativeSrc": "7933:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7933:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7880:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "7880:43:13"
																},
																"nativeSrc": "7880:71:13",
																"nodeType": "YulFunctionCall",
																"src": "7880:71:13"
															},
															"nativeSrc": "7880:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "7880:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7736:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7806:9:13",
														"nodeType": "YulTypedName",
														"src": "7806:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7818:6:13",
														"nodeType": "YulTypedName",
														"src": "7818:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7829:4:13",
														"nodeType": "YulTypedName",
														"src": "7829:4:13",
														"type": ""
													}
												],
												"src": "7736:222:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051611d8d380380611d8d833981810160405281019061003191906103aa565b6040518060400160405280600781526020017f4d79546f6b656e000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d544b000000000000000000000000000000000000000000000000000000000081525081600390816100ac9190610609565b5080600490816100bc9190610609565b5050506100cf33826100d560201b60201c565b506107ed565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610145575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161013c9190610717565b60405180910390fd5b6101565f838361015a60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036101aa578060025f82825461019e919061075d565b92505081905550610278565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610233578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161022a9392919061079f565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102bf578060025f8282540392505081905550610309565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161036691906107d4565b60405180910390a3505050565b5f5ffd5b5f819050919050565b61038981610377565b8114610393575f5ffd5b50565b5f815190506103a481610380565b92915050565b5f602082840312156103bf576103be610373565b5b5f6103cc84828501610396565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061045057607f821691505b6020821081036104635761046261040c565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026104c57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261048a565b6104cf868361048a565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61050a61050561050084610377565b6104e7565b610377565b9050919050565b5f819050919050565b610523836104f0565b61053761052f82610511565b848454610496565b825550505050565b5f5f905090565b61054e61053f565b61055981848461051a565b505050565b5b8181101561057c576105715f82610546565b60018101905061055f565b5050565b601f8211156105c15761059281610469565b61059b8461047b565b810160208510156105aa578190505b6105be6105b68561047b565b83018261055e565b50505b505050565b5f82821c905092915050565b5f6105e15f19846008026105c6565b1980831691505092915050565b5f6105f983836105d2565b9150826002028217905092915050565b610612826103d5565b67ffffffffffffffff81111561062b5761062a6103df565b5b6106358254610439565b610640828285610580565b5f60209050601f831160018114610671575f841561065f578287015190505b61066985826105ee565b8655506106d0565b601f19841661067f86610469565b5f5b828110156106a657848901518255600182019150602085019450602081019050610681565b868310156106c357848901516106bf601f8916826105d2565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610701826106d8565b9050919050565b610711816106f7565b82525050565b5f60208201905061072a5f830184610708565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61076782610377565b915061077283610377565b925082820190508082111561078a57610789610730565b5b92915050565b61079981610377565b82525050565b5f6060820190506107b25f830186610708565b6107bf6020830185610790565b6107cc6040830184610790565b949350505050565b5f6020820190506107e75f830184610790565b92915050565b611593806107fa5f395ff3fe608060405234801561000f575f5ffd5b50600436106100fe575f3560e01c80634000aea011610095578063c1d34b8911610064578063c1d34b89146102fa578063cae9ca511461032a578063d8fbe9941461035a578063dd62ed3e1461038a576100fe565b80634000aea01461024c57806370a082311461027c57806395d89b41146102ac578063a9059cbb146102ca576100fe565b806318160ddd116100d157806318160ddd146101b057806323b872dd146101ce578063313ce567146101fe5780633177029f1461021c576100fe565b806301ffc9a71461010257806306fdde0314610132578063095ea7b3146101505780631296ee6214610180575b5f5ffd5b61011c60048036038101906101179190610e28565b6103ba565b6040516101299190610e6d565b60405180910390f35b61013a6103c4565b6040516101479190610ef6565b60405180910390f35b61016a60048036038101906101659190610fa3565b610454565b6040516101779190610e6d565b60405180910390f35b61019a60048036038101906101959190610fa3565b610476565b6040516101a79190610e6d565b60405180910390f35b6101b8610481565b6040516101c59190610ff0565b60405180910390f35b6101e860048036038101906101e39190611009565b61048a565b6040516101f59190610e6d565b60405180910390f35b6102066104b8565b6040516102139190611074565b60405180910390f35b61023660048036038101906102319190610fa3565b6104c0565b6040516102439190610e6d565b60405180910390f35b610266600480360381019061026191906110ee565b6104cb565b6040516102739190610e6d565b60405180910390f35b6102966004803603810190610291919061115f565b610571565b6040516102a39190610ff0565b60405180910390f35b6102b46105b6565b6040516102c19190610ef6565b60405180910390f35b6102e460048036038101906102df9190610fa3565b610646565b6040516102f19190610e6d565b60405180910390f35b610314600480360381019061030f919061118a565b610668565b6040516103219190610e6d565b60405180910390f35b610344600480360381019061033f91906110ee565b610676565b6040516103519190610e6d565b60405180910390f35b610374600480360381019061036f9190611009565b610683565b6040516103819190610e6d565b60405180910390f35b6103a4600480360381019061039f919061120e565b61068f565b6040516103b19190610ff0565b60405180910390f35b5f60019050919050565b6060600380546103d390611279565b80601f01602080910402602001604051908101604052809291908181526020018280546103ff90611279565b801561044a5780601f106104215761010080835404028352916020019161044a565b820191905f5260205f20905b81548152906001019060200180831161042d57829003601f168201915b5050505050905090565b5f5f61045e610711565b905061046b818585610718565b600191505092915050565b5f6001905092915050565b5f600254905090565b5f5f610494610711565b90506104a185828561072a565b6104ac8585856107bd565b60019150509392505050565b5f6012905090565b5f6001905092915050565b5f6104d68585610646565b5061052633868686868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f820116905080830192505050505050506108ad565b610565576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055c90611319565b60405180910390fd5b60019050949350505050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600480546105c590611279565b80601f01602080910402602001604051908101604052809291908181526020018280546105f190611279565b801561063c5780601f106106135761010080835404028352916020019161063c565b820191905f5260205f20905b81548152906001019060200180831161061f57829003601f168201915b5050505050905090565b5f5f610650610711565b905061065d8185856107bd565b600191505092915050565b5f6001905095945050505050565b5f60019050949350505050565b5f600190509392505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b61072583838360016109e3565b505050565b5f610735848461068f565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156107b757818110156107a8578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161079f93929190611346565b60405180910390fd5b6107b684848484035f6109e3565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361082d575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610824919061137b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361089d575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610894919061137b565b60405180910390fd5b6108a8838383610bb2565b505050565b5f5f8473ffffffffffffffffffffffffffffffffffffffff163b11156109d6578373ffffffffffffffffffffffffffffffffffffffff166388a7ca5c338786866040518563ffffffff1660e01b815260040161090c94939291906113e6565b6020604051808303815f875af192505050801561094757506040513d601f19601f820116820180604052508101906109449190611444565b60015b610986576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097d906114df565b60405180910390fd5b6388a7ca5c60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506109db565b600190505b949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a53575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610a4a919061137b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ac3575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610aba919061137b565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610bac578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610ba39190610ff0565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c02578060025f828254610bf6919061152a565b92505081905550610cd0565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610c8b578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c8293929190611346565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d17578060025f8282540392505081905550610d61565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610dbe9190610ff0565b60405180910390a3505050565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610e0781610dd3565b8114610e11575f5ffd5b50565b5f81359050610e2281610dfe565b92915050565b5f60208284031215610e3d57610e3c610dcb565b5b5f610e4a84828501610e14565b91505092915050565b5f8115159050919050565b610e6781610e53565b82525050565b5f602082019050610e805f830184610e5e565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610ec882610e86565b610ed28185610e90565b9350610ee2818560208601610ea0565b610eeb81610eae565b840191505092915050565b5f6020820190508181035f830152610f0e8184610ebe565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610f3f82610f16565b9050919050565b610f4f81610f35565b8114610f59575f5ffd5b50565b5f81359050610f6a81610f46565b92915050565b5f819050919050565b610f8281610f70565b8114610f8c575f5ffd5b50565b5f81359050610f9d81610f79565b92915050565b5f5f60408385031215610fb957610fb8610dcb565b5b5f610fc685828601610f5c565b9250506020610fd785828601610f8f565b9150509250929050565b610fea81610f70565b82525050565b5f6020820190506110035f830184610fe1565b92915050565b5f5f5f606084860312156110205761101f610dcb565b5b5f61102d86828701610f5c565b935050602061103e86828701610f5c565b925050604061104f86828701610f8f565b9150509250925092565b5f60ff82169050919050565b61106e81611059565b82525050565b5f6020820190506110875f830184611065565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f8401126110ae576110ad61108d565b5b8235905067ffffffffffffffff8111156110cb576110ca611091565b5b6020830191508360018202830111156110e7576110e6611095565b5b9250929050565b5f5f5f5f6060858703121561110657611105610dcb565b5b5f61111387828801610f5c565b945050602061112487828801610f8f565b935050604085013567ffffffffffffffff81111561114557611144610dcf565b5b61115187828801611099565b925092505092959194509250565b5f6020828403121561117457611173610dcb565b5b5f61118184828501610f5c565b91505092915050565b5f5f5f5f5f608086880312156111a3576111a2610dcb565b5b5f6111b088828901610f5c565b95505060206111c188828901610f5c565b94505060406111d288828901610f8f565b935050606086013567ffffffffffffffff8111156111f3576111f2610dcf565b5b6111ff88828901611099565b92509250509295509295909350565b5f5f6040838503121561122457611223610dcb565b5b5f61123185828601610f5c565b925050602061124285828601610f5c565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061129057607f821691505b6020821081036112a3576112a261124c565b5b50919050565b7f455243313336333a205f636865636b416e6443616c6c5472616e7366657220665f8201527f61696c6564000000000000000000000000000000000000000000000000000000602082015250565b5f611303602583610e90565b915061130e826112a9565b604082019050919050565b5f6020820190508181035f830152611330816112f7565b9050919050565b61134081610f35565b82525050565b5f6060820190506113595f830186611337565b6113666020830185610fe1565b6113736040830184610fe1565b949350505050565b5f60208201905061138e5f830184611337565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f6113b882611394565b6113c2818561139e565b93506113d2818560208601610ea0565b6113db81610eae565b840191505092915050565b5f6080820190506113f95f830187611337565b6114066020830186611337565b6114136040830185610fe1565b818103606083015261142581846113ae565b905095945050505050565b5f8151905061143e81610dfe565b92915050565b5f6020828403121561145957611458610dcb565b5b5f61146684828501611430565b91505092915050565b7f455243313336333a206f6e5472616e736665725265636569766564206661696c5f8201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b5f6114c9602283610e90565b91506114d48261146f565b604082019050919050565b5f6020820190508181035f8301526114f6816114bd565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61153482610f70565b915061153f83610f70565b9250828201905080821115611557576115566114fd565b5b9291505056fea2646970667358221220cea6dade97de971196c35b63b5b7c13acb56c2bc907caeab34061a7082e9a11e64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1D8D CODESIZE SUB DUP1 PUSH2 0x1D8D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x3AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D79546F6B656E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D544B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x609 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x609 JUMP JUMPDEST POP POP POP PUSH2 0xCF CALLER DUP3 PUSH2 0xD5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x7ED JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x145 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x717 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x156 PUSH0 DUP4 DUP4 PUSH2 0x15A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AA JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x75D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x278 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x233 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x79F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2BF JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x309 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x7D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x389 DUP2 PUSH2 0x377 JUMP JUMPDEST DUP2 EQ PUSH2 0x393 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3A4 DUP2 PUSH2 0x380 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3BF JUMPI PUSH2 0x3BE PUSH2 0x373 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3CC DUP5 DUP3 DUP6 ADD PUSH2 0x396 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x450 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x463 JUMPI PUSH2 0x462 PUSH2 0x40C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x4C5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x48A JUMP JUMPDEST PUSH2 0x4CF DUP7 DUP4 PUSH2 0x48A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x50A PUSH2 0x505 PUSH2 0x500 DUP5 PUSH2 0x377 JUMP JUMPDEST PUSH2 0x4E7 JUMP JUMPDEST PUSH2 0x377 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x523 DUP4 PUSH2 0x4F0 JUMP JUMPDEST PUSH2 0x537 PUSH2 0x52F DUP3 PUSH2 0x511 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x496 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x54E PUSH2 0x53F JUMP JUMPDEST PUSH2 0x559 DUP2 DUP5 DUP5 PUSH2 0x51A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x57C JUMPI PUSH2 0x571 PUSH0 DUP3 PUSH2 0x546 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x55F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5C1 JUMPI PUSH2 0x592 DUP2 PUSH2 0x469 JUMP JUMPDEST PUSH2 0x59B DUP5 PUSH2 0x47B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x5AA JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x5BE PUSH2 0x5B6 DUP6 PUSH2 0x47B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x55E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5E1 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x5C6 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5F9 DUP4 DUP4 PUSH2 0x5D2 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x612 DUP3 PUSH2 0x3D5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x62B JUMPI PUSH2 0x62A PUSH2 0x3DF JUMP JUMPDEST JUMPDEST PUSH2 0x635 DUP3 SLOAD PUSH2 0x439 JUMP JUMPDEST PUSH2 0x640 DUP3 DUP3 DUP6 PUSH2 0x580 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x671 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x65F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x669 DUP6 DUP3 PUSH2 0x5EE JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x67F DUP7 PUSH2 0x469 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x6A6 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x681 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x6C3 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x6BF PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x5D2 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x701 DUP3 PUSH2 0x6D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x711 DUP2 PUSH2 0x6F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x72A PUSH0 DUP4 ADD DUP5 PUSH2 0x708 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x767 DUP3 PUSH2 0x377 JUMP JUMPDEST SWAP2 POP PUSH2 0x772 DUP4 PUSH2 0x377 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x78A JUMPI PUSH2 0x789 PUSH2 0x730 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x799 DUP2 PUSH2 0x377 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x7B2 PUSH0 DUP4 ADD DUP7 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x7BF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x790 JUMP JUMPDEST PUSH2 0x7CC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x790 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7E7 PUSH0 DUP4 ADD DUP5 PUSH2 0x790 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1593 DUP1 PUSH2 0x7FA PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4000AEA0 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC1D34B89 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC1D34B89 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0xD8FBE994 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x38A JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x4000AEA0 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2CA JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x3177029F EQ PUSH2 0x21C JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x1296EE62 EQ PUSH2 0x180 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0xFF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1009 JUMP JUMPDEST PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x1074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x236 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x10EE JUMP JUMPDEST PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x115F JUMP JUMPDEST PUSH2 0x571 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0xFF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B4 PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x118A JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x344 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x10EE JUMP JUMPDEST PUSH2 0x676 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x351 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x374 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x1009 JUMP JUMPDEST PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x120E JUMP JUMPDEST PUSH2 0x68F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0xFF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3D3 SWAP1 PUSH2 0x1279 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3FF SWAP1 PUSH2 0x1279 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x44A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x421 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x44A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x42D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x45E PUSH2 0x711 JUMP JUMPDEST SWAP1 POP PUSH2 0x46B DUP2 DUP6 DUP6 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x494 PUSH2 0x711 JUMP JUMPDEST SWAP1 POP PUSH2 0x4A1 DUP6 DUP3 DUP6 PUSH2 0x72A JUMP JUMPDEST PUSH2 0x4AC DUP6 DUP6 DUP6 PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4D6 DUP6 DUP6 PUSH2 0x646 JUMP JUMPDEST POP PUSH2 0x526 CALLER DUP7 DUP7 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x8AD JUMP JUMPDEST PUSH2 0x565 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55C SWAP1 PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5C5 SWAP1 PUSH2 0x1279 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5F1 SWAP1 PUSH2 0x1279 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x63C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x613 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x63C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x61F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x650 PUSH2 0x711 JUMP JUMPDEST SWAP1 POP PUSH2 0x65D DUP2 DUP6 DUP6 PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x725 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x9E3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x735 DUP5 DUP5 PUSH2 0x68F JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x7B7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7A8 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B6 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x9E3 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x82D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x824 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x89D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x894 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A8 DUP4 DUP4 DUP4 PUSH2 0xBB2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x9D6 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x88A7CA5C CALLER DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x947 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x944 SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x986 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97D SWAP1 PUSH2 0x14DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x88A7CA5C PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x9DB JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA53 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4A SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABA SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xBAC JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xBA3 SWAP2 SWAP1 PUSH2 0xFF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC02 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBF6 SWAP2 SWAP1 PUSH2 0x152A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCD0 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC8B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC82 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD17 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD61 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xDBE SWAP2 SWAP1 PUSH2 0xFF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE07 DUP2 PUSH2 0xDD3 JUMP JUMPDEST DUP2 EQ PUSH2 0xE11 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE22 DUP2 PUSH2 0xDFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE3D JUMPI PUSH2 0xE3C PUSH2 0xDCB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE4A DUP5 DUP3 DUP6 ADD PUSH2 0xE14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE67 DUP2 PUSH2 0xE53 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE80 PUSH0 DUP4 ADD DUP5 PUSH2 0xE5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEC8 DUP3 PUSH2 0xE86 JUMP JUMPDEST PUSH2 0xED2 DUP2 DUP6 PUSH2 0xE90 JUMP JUMPDEST SWAP4 POP PUSH2 0xEE2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEA0 JUMP JUMPDEST PUSH2 0xEEB DUP2 PUSH2 0xEAE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF0E DUP2 DUP5 PUSH2 0xEBE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF3F DUP3 PUSH2 0xF16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF4F DUP2 PUSH2 0xF35 JUMP JUMPDEST DUP2 EQ PUSH2 0xF59 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF6A DUP2 PUSH2 0xF46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF82 DUP2 PUSH2 0xF70 JUMP JUMPDEST DUP2 EQ PUSH2 0xF8C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF9D DUP2 PUSH2 0xF79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFB9 JUMPI PUSH2 0xFB8 PUSH2 0xDCB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFC6 DUP6 DUP3 DUP7 ADD PUSH2 0xF5C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFD7 DUP6 DUP3 DUP7 ADD PUSH2 0xF8F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xFEA DUP2 PUSH2 0xF70 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1003 PUSH0 DUP4 ADD DUP5 PUSH2 0xFE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1020 JUMPI PUSH2 0x101F PUSH2 0xDCB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x102D DUP7 DUP3 DUP8 ADD PUSH2 0xF5C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x103E DUP7 DUP3 DUP8 ADD PUSH2 0xF5C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x104F DUP7 DUP3 DUP8 ADD PUSH2 0xF8F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x106E DUP2 PUSH2 0x1059 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1087 PUSH0 DUP4 ADD DUP5 PUSH2 0x1065 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x10AE JUMPI PUSH2 0x10AD PUSH2 0x108D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10CB JUMPI PUSH2 0x10CA PUSH2 0x1091 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x10E7 JUMPI PUSH2 0x10E6 PUSH2 0x1095 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1106 JUMPI PUSH2 0x1105 PUSH2 0xDCB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1113 DUP8 DUP3 DUP9 ADD PUSH2 0xF5C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1124 DUP8 DUP3 DUP9 ADD PUSH2 0xF8F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1145 JUMPI PUSH2 0x1144 PUSH2 0xDCF JUMP JUMPDEST JUMPDEST PUSH2 0x1151 DUP8 DUP3 DUP9 ADD PUSH2 0x1099 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1174 JUMPI PUSH2 0x1173 PUSH2 0xDCB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1181 DUP5 DUP3 DUP6 ADD PUSH2 0xF5C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x11A3 JUMPI PUSH2 0x11A2 PUSH2 0xDCB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11B0 DUP9 DUP3 DUP10 ADD PUSH2 0xF5C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x11C1 DUP9 DUP3 DUP10 ADD PUSH2 0xF5C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x11D2 DUP9 DUP3 DUP10 ADD PUSH2 0xF8F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11F3 JUMPI PUSH2 0x11F2 PUSH2 0xDCF JUMP JUMPDEST JUMPDEST PUSH2 0x11FF DUP9 DUP3 DUP10 ADD PUSH2 0x1099 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1224 JUMPI PUSH2 0x1223 PUSH2 0xDCB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1231 DUP6 DUP3 DUP7 ADD PUSH2 0xF5C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1242 DUP6 DUP3 DUP7 ADD PUSH2 0xF5C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1290 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x12A3 JUMPI PUSH2 0x12A2 PUSH2 0x124C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313336333A205F636865636B416E6443616C6C5472616E736665722066 PUSH0 DUP3 ADD MSTORE PUSH32 0x61696C6564000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1303 PUSH1 0x25 DUP4 PUSH2 0xE90 JUMP JUMPDEST SWAP2 POP PUSH2 0x130E DUP3 PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1330 DUP2 PUSH2 0x12F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1340 DUP2 PUSH2 0xF35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1359 PUSH0 DUP4 ADD DUP7 PUSH2 0x1337 JUMP JUMPDEST PUSH2 0x1366 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xFE1 JUMP JUMPDEST PUSH2 0x1373 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFE1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x138E PUSH0 DUP4 ADD DUP5 PUSH2 0x1337 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13B8 DUP3 PUSH2 0x1394 JUMP JUMPDEST PUSH2 0x13C2 DUP2 DUP6 PUSH2 0x139E JUMP JUMPDEST SWAP4 POP PUSH2 0x13D2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEA0 JUMP JUMPDEST PUSH2 0x13DB DUP2 PUSH2 0xEAE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x13F9 PUSH0 DUP4 ADD DUP8 PUSH2 0x1337 JUMP JUMPDEST PUSH2 0x1406 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1337 JUMP JUMPDEST PUSH2 0x1413 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xFE1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1425 DUP2 DUP5 PUSH2 0x13AE JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x143E DUP2 PUSH2 0xDFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1459 JUMPI PUSH2 0x1458 PUSH2 0xDCB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1466 DUP5 DUP3 DUP6 ADD PUSH2 0x1430 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455243313336333A206F6E5472616E736665725265636569766564206661696C PUSH0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14C9 PUSH1 0x22 DUP4 PUSH2 0xE90 JUMP JUMPDEST SWAP2 POP PUSH2 0x14D4 DUP3 PUSH2 0x146F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14F6 DUP2 PUSH2 0x14BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1534 DUP3 PUSH2 0xF70 JUMP JUMPDEST SWAP2 POP PUSH2 0x153F DUP4 PUSH2 0xF70 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1557 JUMPI PUSH2 0x1556 PUSH2 0x14FD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xA6 0xDA 0xDE SWAP8 0xDE SWAP8 GT SWAP7 0xC3 JUMPDEST PUSH4 0xB5B7C13A 0xCB JUMP 0xC2 0xBC SWAP1 PUSH29 0xAEAB34061A7082E9A11E64736F6C634300081C00330000000000000000 ",
							"sourceMap": "387:2009:12:-:0;;;461:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1582:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;530:32:12::1;536:10;548:13;530:5;;;:32;;:::i;:::-;461:108:::0;387:2009;;7439:208:5;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;;;:35;;:::i;:::-;7439:208;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;88:117:13:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:99::-;1103:6;1137:5;1131:12;1121:22;;1051:99;;;:::o;1156:180::-;1204:77;1201:1;1194:88;1301:4;1298:1;1291:15;1325:4;1322:1;1315:15;1342:180;1390:77;1387:1;1380:88;1487:4;1484:1;1477:15;1511:4;1508:1;1501:15;1528:320;1572:6;1609:1;1603:4;1599:12;1589:22;;1656:1;1650:4;1646:12;1677:18;1667:81;;1733:4;1725:6;1721:17;1711:27;;1667:81;1795:2;1787:6;1784:14;1764:18;1761:38;1758:84;;1814:18;;:::i;:::-;1758:84;1579:269;1528:320;;;:::o;1854:141::-;1903:4;1926:3;1918:11;;1949:3;1946:1;1939:14;1983:4;1980:1;1970:18;1962:26;;1854:141;;;:::o;2001:93::-;2038:6;2085:2;2080;2073:5;2069:14;2065:23;2055:33;;2001:93;;;:::o;2100:107::-;2144:8;2194:5;2188:4;2184:16;2163:37;;2100:107;;;;:::o;2213:393::-;2282:6;2332:1;2320:10;2316:18;2355:97;2385:66;2374:9;2355:97;:::i;:::-;2473:39;2503:8;2492:9;2473:39;:::i;:::-;2461:51;;2545:4;2541:9;2534:5;2530:21;2521:30;;2594:4;2584:8;2580:19;2573:5;2570:30;2560:40;;2289:317;;2213:393;;;;;:::o;2612:60::-;2640:3;2661:5;2654:12;;2612:60;;;:::o;2678:142::-;2728:9;2761:53;2779:34;2788:24;2806:5;2788:24;:::i;:::-;2779:34;:::i;:::-;2761:53;:::i;:::-;2748:66;;2678:142;;;:::o;2826:75::-;2869:3;2890:5;2883:12;;2826:75;;;:::o;2907:269::-;3017:39;3048:7;3017:39;:::i;:::-;3078:91;3127:41;3151:16;3127:41;:::i;:::-;3119:6;3112:4;3106:11;3078:91;:::i;:::-;3072:4;3065:105;2983:193;2907:269;;;:::o;3182:73::-;3227:3;3248:1;3241:8;;3182:73;:::o;3261:189::-;3338:32;;:::i;:::-;3379:65;3437:6;3429;3423:4;3379:65;:::i;:::-;3314:136;3261:189;;:::o;3456:186::-;3516:120;3533:3;3526:5;3523:14;3516:120;;;3587:39;3624:1;3617:5;3587:39;:::i;:::-;3560:1;3553:5;3549:13;3540:22;;3516:120;;;3456:186;;:::o;3648:543::-;3749:2;3744:3;3741:11;3738:446;;;3783:38;3815:5;3783:38;:::i;:::-;3867:29;3885:10;3867:29;:::i;:::-;3857:8;3853:44;4050:2;4038:10;4035:18;4032:49;;;4071:8;4056:23;;4032:49;4094:80;4150:22;4168:3;4150:22;:::i;:::-;4140:8;4136:37;4123:11;4094:80;:::i;:::-;3753:431;;3738:446;3648:543;;;:::o;4197:117::-;4251:8;4301:5;4295:4;4291:16;4270:37;;4197:117;;;;:::o;4320:169::-;4364:6;4397:51;4445:1;4441:6;4433:5;4430:1;4426:13;4397:51;:::i;:::-;4393:56;4478:4;4472;4468:15;4458:25;;4371:118;4320:169;;;;:::o;4494:295::-;4570:4;4716:29;4741:3;4735:4;4716:29;:::i;:::-;4708:37;;4778:3;4775:1;4771:11;4765:4;4762:21;4754:29;;4494:295;;;;:::o;4794:1395::-;4911:37;4944:3;4911:37;:::i;:::-;5013:18;5005:6;5002:30;4999:56;;;5035:18;;:::i;:::-;4999:56;5079:38;5111:4;5105:11;5079:38;:::i;:::-;5164:67;5224:6;5216;5210:4;5164:67;:::i;:::-;5258:1;5282:4;5269:17;;5314:2;5306:6;5303:14;5331:1;5326:618;;;;5988:1;6005:6;6002:77;;;6054:9;6049:3;6045:19;6039:26;6030:35;;6002:77;6105:67;6165:6;6158:5;6105:67;:::i;:::-;6099:4;6092:81;5961:222;5296:887;;5326:618;5378:4;5374:9;5366:6;5362:22;5412:37;5444:4;5412:37;:::i;:::-;5471:1;5485:208;5499:7;5496:1;5493:14;5485:208;;;5578:9;5573:3;5569:19;5563:26;5555:6;5548:42;5629:1;5621:6;5617:14;5607:24;;5676:2;5665:9;5661:18;5648:31;;5522:4;5519:1;5515:12;5510:17;;5485:208;;;5721:6;5712:7;5709:19;5706:179;;;5779:9;5774:3;5770:19;5764:26;5822:48;5864:4;5856:6;5852:17;5841:9;5822:48;:::i;:::-;5814:6;5807:64;5729:156;5706:179;5931:1;5927;5919:6;5915:14;5911:22;5905:4;5898:36;5333:611;;;5296:887;;4886:1303;;;4794:1395;;:::o;6195:126::-;6232:7;6272:42;6265:5;6261:54;6250:65;;6195:126;;;:::o;6327:96::-;6364:7;6393:24;6411:5;6393:24;:::i;:::-;6382:35;;6327:96;;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:180::-;6829:77;6826:1;6819:88;6926:4;6923:1;6916:15;6950:4;6947:1;6940:15;6967:191;7007:3;7026:20;7044:1;7026:20;:::i;:::-;7021:25;;7060:20;7078:1;7060:20;:::i;:::-;7055:25;;7103:1;7100;7096:9;7089:16;;7124:3;7121:1;7118:10;7115:36;;;7131:18;;:::i;:::-;7115:36;6967:191;;;;:::o;7164:118::-;7251:24;7269:5;7251:24;:::i;:::-;7246:3;7239:37;7164:118;;:::o;7288:442::-;7437:4;7475:2;7464:9;7460:18;7452:26;;7488:71;7556:1;7545:9;7541:17;7532:6;7488:71;:::i;:::-;7569:72;7637:2;7626:9;7622:18;7613:6;7569:72;:::i;:::-;7651;7719:2;7708:9;7704:18;7695:6;7651:72;:::i;:::-;7288:442;;;;;;:::o;7736:222::-;7829:4;7867:2;7856:9;7852:18;7844:26;;7880:71;7948:1;7937:9;7933:17;7924:6;7880:71;:::i;:::-;7736:222;;;;:::o;387:2009:12:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_650": {
									"entryPoint": 1816,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_710": {
									"entryPoint": 2531,
									"id": 710,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkAndCallTransfer_1312": {
									"entryPoint": 2221,
									"id": 1312,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_msgSender_1135": {
									"entryPoint": 1809,
									"id": 1135,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_758": {
									"entryPoint": 1834,
									"id": 758,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_489": {
									"entryPoint": 1981,
									"id": 489,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_566": {
									"entryPoint": 2994,
									"id": 566,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_386": {
									"entryPoint": 1679,
									"id": 386,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approveAndCall_1357": {
									"entryPoint": 1216,
									"id": 1357,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approveAndCall_1372": {
									"entryPoint": 1654,
									"id": 1372,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@approve_410": {
									"entryPoint": 1108,
									"id": 410,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_345": {
									"entryPoint": 1393,
									"id": 345,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_323": {
									"entryPoint": 1208,
									"id": 323,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_305": {
									"entryPoint": 964,
									"id": 305,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@supportsInterface_1383": {
									"entryPoint": 954,
									"id": 1383,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_314": {
									"entryPoint": 1462,
									"id": 314,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_332": {
									"entryPoint": 1153,
									"id": 332,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferAndCall_1230": {
									"entryPoint": 1142,
									"id": 1230,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transferAndCall_1261": {
									"entryPoint": 1227,
									"id": 1261,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@transferFromAndCall_1327": {
									"entryPoint": 1667,
									"id": 1327,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFromAndCall_1344": {
									"entryPoint": 1640,
									"id": 1344,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@transferFrom_442": {
									"entryPoint": 1162,
									"id": 442,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_369": {
									"entryPoint": 1606,
									"id": 369,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 3604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 5168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 4249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 4490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 4334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 5188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 5038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2d6ba6a21b441acbb28fc61d7d2718aa2ce0e43522a0a02e0ab6d7ec526529d5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_767d08b4043dcc0a72fe6da23c3e15169075e0c3845c64dad35d2bf3849edad9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5094,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4934,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2d6ba6a21b441acbb28fc61d7d2718aa2ce0e43522a0a02e0ab6d7ec526529d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_767d08b4043dcc0a72fe6da23c3e15169075e0c3845c64dad35d2bf3849edad9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 5012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 5022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 3539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3744,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5373,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4684,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 4241,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 4237,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 4245,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3535,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3531,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_2d6ba6a21b441acbb28fc61d7d2718aa2ce0e43522a0a02e0ab6d7ec526529d5": {
									"entryPoint": 5231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_767d08b4043dcc0a72fe6da23c3e15169075e0c3845c64dad35d2bf3849edad9": {
									"entryPoint": 4777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 3582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14598:13",
										"nodeType": "YulBlock",
										"src": "0:14598:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "378:105:13",
													"nodeType": "YulBlock",
													"src": "378:105:13",
													"statements": [
														{
															"nativeSrc": "388:89:13",
															"nodeType": "YulAssignment",
															"src": "388:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:13",
																		"nodeType": "YulLiteral",
																		"src": "410:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:13"
																},
																"nativeSrc": "399:78:13",
																"nodeType": "YulFunctionCall",
																"src": "399:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:13",
														"nodeType": "YulTypedName",
														"src": "360:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:13",
														"nodeType": "YulTypedName",
														"src": "370:7:13",
														"type": ""
													}
												],
												"src": "334:149:13"
											},
											{
												"body": {
													"nativeSrc": "531:78:13",
													"nodeType": "YulBlock",
													"src": "531:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:13",
																"nodeType": "YulBlock",
																"src": "587:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:13",
																					"nodeType": "YulLiteral",
																					"src": "596:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:13",
																					"nodeType": "YulLiteral",
																					"src": "599:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:13"
																			},
																			"nativeSrc": "589:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:13"
																		},
																		"nativeSrc": "589:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:13"
																				},
																				"nativeSrc": "561:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:13"
																		},
																		"nativeSrc": "551:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:13"
																},
																"nativeSrc": "544:42:13",
																"nodeType": "YulFunctionCall",
																"src": "544:42:13"
															},
															"nativeSrc": "541:62:13",
															"nodeType": "YulIf",
															"src": "541:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:13",
														"nodeType": "YulTypedName",
														"src": "524:5:13",
														"type": ""
													}
												],
												"src": "489:120:13"
											},
											{
												"body": {
													"nativeSrc": "666:86:13",
													"nodeType": "YulBlock",
													"src": "666:86:13",
													"statements": [
														{
															"nativeSrc": "676:29:13",
															"nodeType": "YulAssignment",
															"src": "676:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:13"
																},
																"nativeSrc": "685:20:13",
																"nodeType": "YulFunctionCall",
																"src": "685:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:13"
																},
																"nativeSrc": "714:32:13",
																"nodeType": "YulFunctionCall",
																"src": "714:32:13"
															},
															"nativeSrc": "714:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:13",
														"nodeType": "YulTypedName",
														"src": "644:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:13",
														"nodeType": "YulTypedName",
														"src": "652:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:13",
														"nodeType": "YulTypedName",
														"src": "660:5:13",
														"type": ""
													}
												],
												"src": "615:137:13"
											},
											{
												"body": {
													"nativeSrc": "823:262:13",
													"nodeType": "YulBlock",
													"src": "823:262:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:13",
																"nodeType": "YulBlock",
																"src": "869:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:13"
																			},
																			"nativeSrc": "871:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:13"
																		},
																		"nativeSrc": "871:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:13"
																		},
																		"nativeSrc": "840:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:13",
																		"nodeType": "YulLiteral",
																		"src": "865:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:13"
																},
																"nativeSrc": "836:32:13",
																"nodeType": "YulFunctionCall",
																"src": "836:32:13"
															},
															"nativeSrc": "833:119:13",
															"nodeType": "YulIf",
															"src": "833:119:13"
														},
														{
															"nativeSrc": "962:116:13",
															"nodeType": "YulBlock",
															"src": "962:116:13",
															"statements": [
																{
																	"nativeSrc": "977:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:13",
																		"nodeType": "YulLiteral",
																		"src": "991:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:13",
																			"nodeType": "YulTypedName",
																			"src": "981:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:13",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nativeSrc": "1036:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:13",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:13"
																		},
																		"nativeSrc": "1016:52:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:13",
														"nodeType": "YulTypedName",
														"src": "793:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:13",
														"nodeType": "YulTypedName",
														"src": "804:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:13",
														"nodeType": "YulTypedName",
														"src": "816:6:13",
														"type": ""
													}
												],
												"src": "758:327:13"
											},
											{
												"body": {
													"nativeSrc": "1133:48:13",
													"nodeType": "YulBlock",
													"src": "1133:48:13",
													"statements": [
														{
															"nativeSrc": "1143:32:13",
															"nodeType": "YulAssignment",
															"src": "1143:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:13"
																		},
																		"nativeSrc": "1161:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:13"
																},
																"nativeSrc": "1154:21:13",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:13",
														"nodeType": "YulTypedName",
														"src": "1115:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:13",
														"nodeType": "YulTypedName",
														"src": "1125:7:13",
														"type": ""
													}
												],
												"src": "1091:90:13"
											},
											{
												"body": {
													"nativeSrc": "1246:50:13",
													"nodeType": "YulBlock",
													"src": "1246:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:13"
																		},
																		"nativeSrc": "1268:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:13"
																},
																"nativeSrc": "1256:34:13",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:13"
															},
															"nativeSrc": "1256:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:13",
														"nodeType": "YulTypedName",
														"src": "1234:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:13",
														"nodeType": "YulTypedName",
														"src": "1241:3:13",
														"type": ""
													}
												],
												"src": "1187:109:13"
											},
											{
												"body": {
													"nativeSrc": "1394:118:13",
													"nodeType": "YulBlock",
													"src": "1394:118:13",
													"statements": [
														{
															"nativeSrc": "1404:26:13",
															"nodeType": "YulAssignment",
															"src": "1404:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:13"
																},
																"nativeSrc": "1412:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:13"
																		},
																		"nativeSrc": "1487:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:13"
																},
																"nativeSrc": "1440:65:13",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:13"
															},
															"nativeSrc": "1440:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:13",
														"nodeType": "YulTypedName",
														"src": "1366:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:13",
														"nodeType": "YulTypedName",
														"src": "1378:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:13",
														"nodeType": "YulTypedName",
														"src": "1389:4:13",
														"type": ""
													}
												],
												"src": "1302:210:13"
											},
											{
												"body": {
													"nativeSrc": "1577:40:13",
													"nodeType": "YulBlock",
													"src": "1577:40:13",
													"statements": [
														{
															"nativeSrc": "1588:22:13",
															"nodeType": "YulAssignment",
															"src": "1588:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:13"
																},
																"nativeSrc": "1598:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:13",
														"nodeType": "YulTypedName",
														"src": "1560:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:13",
														"nodeType": "YulTypedName",
														"src": "1570:6:13",
														"type": ""
													}
												],
												"src": "1518:99:13"
											},
											{
												"body": {
													"nativeSrc": "1719:73:13",
													"nodeType": "YulBlock",
													"src": "1719:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:13"
																},
																"nativeSrc": "1729:19:13",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:13"
															},
															"nativeSrc": "1729:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:13"
														},
														{
															"nativeSrc": "1757:29:13",
															"nodeType": "YulAssignment",
															"src": "1757:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:13"
																},
																"nativeSrc": "1772:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:13",
														"nodeType": "YulTypedName",
														"src": "1691:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:13",
														"nodeType": "YulTypedName",
														"src": "1696:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:13",
														"nodeType": "YulTypedName",
														"src": "1707:11:13",
														"type": ""
													}
												],
												"src": "1623:169:13"
											},
											{
												"body": {
													"nativeSrc": "1860:77:13",
													"nodeType": "YulBlock",
													"src": "1860:77:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:13"
																},
																"nativeSrc": "1871:23:13",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:13"
															},
															"nativeSrc": "1871:23:13",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:13"
																		},
																		"nativeSrc": "1910:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:13"
																},
																"nativeSrc": "1903:27:13",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:13"
															},
															"nativeSrc": "1903:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:13",
														"nodeType": "YulTypedName",
														"src": "1842:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:13",
														"nodeType": "YulTypedName",
														"src": "1847:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:13",
														"nodeType": "YulTypedName",
														"src": "1852:6:13",
														"type": ""
													}
												],
												"src": "1798:139:13"
											},
											{
												"body": {
													"nativeSrc": "1991:54:13",
													"nodeType": "YulBlock",
													"src": "1991:54:13",
													"statements": [
														{
															"nativeSrc": "2001:38:13",
															"nodeType": "YulAssignment",
															"src": "2001:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:13"
																		},
																		"nativeSrc": "2015:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:13"
																		},
																		"nativeSrc": "2031:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:13"
																},
																"nativeSrc": "2011:28:13",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:13",
														"nodeType": "YulTypedName",
														"src": "1974:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:13",
														"nodeType": "YulTypedName",
														"src": "1984:6:13",
														"type": ""
													}
												],
												"src": "1943:102:13"
											},
											{
												"body": {
													"nativeSrc": "2143:285:13",
													"nodeType": "YulBlock",
													"src": "2143:285:13",
													"statements": [
														{
															"nativeSrc": "2153:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:13"
																},
																"nativeSrc": "2167:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:13",
															"nodeType": "YulAssignment",
															"src": "2215:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:13"
																},
																"nativeSrc": "2222:71:13",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:13"
																		},
																		"nativeSrc": "2337:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:13"
																},
																"nativeSrc": "2302:65:13",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:13"
															},
															"nativeSrc": "2302:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:13"
														},
														{
															"nativeSrc": "2376:46:13",
															"nodeType": "YulAssignment",
															"src": "2376:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:13"
																		},
																		"nativeSrc": "2392:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:13"
																},
																"nativeSrc": "2383:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:13",
														"nodeType": "YulTypedName",
														"src": "2124:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:13",
														"nodeType": "YulTypedName",
														"src": "2131:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:13",
														"nodeType": "YulTypedName",
														"src": "2139:3:13",
														"type": ""
													}
												],
												"src": "2051:377:13"
											},
											{
												"body": {
													"nativeSrc": "2552:195:13",
													"nodeType": "YulBlock",
													"src": "2552:195:13",
													"statements": [
														{
															"nativeSrc": "2562:26:13",
															"nodeType": "YulAssignment",
															"src": "2562:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:13"
																},
																"nativeSrc": "2570:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:13"
																		},
																		"nativeSrc": "2605:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:13"
																		},
																		"nativeSrc": "2624:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:13"
																},
																"nativeSrc": "2598:47:13",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:13"
															},
															"nativeSrc": "2598:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:13"
														},
														{
															"nativeSrc": "2654:86:13",
															"nodeType": "YulAssignment",
															"src": "2654:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:13",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:13"
																},
																"nativeSrc": "2662:78:13",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:13",
														"nodeType": "YulTypedName",
														"src": "2524:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:13",
														"nodeType": "YulTypedName",
														"src": "2536:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:13",
														"nodeType": "YulTypedName",
														"src": "2547:4:13",
														"type": ""
													}
												],
												"src": "2434:313:13"
											},
											{
												"body": {
													"nativeSrc": "2798:81:13",
													"nodeType": "YulBlock",
													"src": "2798:81:13",
													"statements": [
														{
															"nativeSrc": "2808:65:13",
															"nodeType": "YulAssignment",
															"src": "2808:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2823:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2823:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2830:42:13",
																		"nodeType": "YulLiteral",
																		"src": "2830:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2819:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2819:3:13"
																},
																"nativeSrc": "2819:54:13",
																"nodeType": "YulFunctionCall",
																"src": "2819:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2753:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:13",
														"nodeType": "YulTypedName",
														"src": "2780:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:13",
														"nodeType": "YulTypedName",
														"src": "2790:7:13",
														"type": ""
													}
												],
												"src": "2753:126:13"
											},
											{
												"body": {
													"nativeSrc": "2930:51:13",
													"nodeType": "YulBlock",
													"src": "2930:51:13",
													"statements": [
														{
															"nativeSrc": "2940:35:13",
															"nodeType": "YulAssignment",
															"src": "2940:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2969:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2969:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2951:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2951:17:13"
																},
																"nativeSrc": "2951:24:13",
																"nodeType": "YulFunctionCall",
																"src": "2951:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2940:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2940:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2885:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2912:5:13",
														"nodeType": "YulTypedName",
														"src": "2912:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2922:7:13",
														"nodeType": "YulTypedName",
														"src": "2922:7:13",
														"type": ""
													}
												],
												"src": "2885:96:13"
											},
											{
												"body": {
													"nativeSrc": "3030:79:13",
													"nodeType": "YulBlock",
													"src": "3030:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3087:16:13",
																"nodeType": "YulBlock",
																"src": "3087:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3096:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3096:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3099:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3099:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3089:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3089:6:13"
																			},
																			"nativeSrc": "3089:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3089:12:13"
																		},
																		"nativeSrc": "3089:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3089:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3053:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3053:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3078:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3078:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3060:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3060:17:13"
																				},
																				"nativeSrc": "3060:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3060:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3050:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3050:2:13"
																		},
																		"nativeSrc": "3050:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3050:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3043:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3043:6:13"
																},
																"nativeSrc": "3043:43:13",
																"nodeType": "YulFunctionCall",
																"src": "3043:43:13"
															},
															"nativeSrc": "3040:63:13",
															"nodeType": "YulIf",
															"src": "3040:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2987:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3023:5:13",
														"nodeType": "YulTypedName",
														"src": "3023:5:13",
														"type": ""
													}
												],
												"src": "2987:122:13"
											},
											{
												"body": {
													"nativeSrc": "3167:87:13",
													"nodeType": "YulBlock",
													"src": "3167:87:13",
													"statements": [
														{
															"nativeSrc": "3177:29:13",
															"nodeType": "YulAssignment",
															"src": "3177:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3199:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3199:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3186:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3186:12:13"
																},
																"nativeSrc": "3186:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3186:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3177:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3177:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3242:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3242:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3215:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3215:26:13"
																},
																"nativeSrc": "3215:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3215:33:13"
															},
															"nativeSrc": "3215:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3215:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3115:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3145:6:13",
														"nodeType": "YulTypedName",
														"src": "3145:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3153:3:13",
														"nodeType": "YulTypedName",
														"src": "3153:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3161:5:13",
														"nodeType": "YulTypedName",
														"src": "3161:5:13",
														"type": ""
													}
												],
												"src": "3115:139:13"
											},
											{
												"body": {
													"nativeSrc": "3305:32:13",
													"nodeType": "YulBlock",
													"src": "3305:32:13",
													"statements": [
														{
															"nativeSrc": "3315:16:13",
															"nodeType": "YulAssignment",
															"src": "3315:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "3326:5:13",
																"nodeType": "YulIdentifier",
																"src": "3326:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3315:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3315:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3260:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3287:5:13",
														"nodeType": "YulTypedName",
														"src": "3287:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3297:7:13",
														"nodeType": "YulTypedName",
														"src": "3297:7:13",
														"type": ""
													}
												],
												"src": "3260:77:13"
											},
											{
												"body": {
													"nativeSrc": "3386:79:13",
													"nodeType": "YulBlock",
													"src": "3386:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3443:16:13",
																"nodeType": "YulBlock",
																"src": "3443:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3452:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3452:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3455:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3455:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3445:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3445:6:13"
																			},
																			"nativeSrc": "3445:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3445:12:13"
																		},
																		"nativeSrc": "3445:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3445:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3409:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3409:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3434:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3434:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3416:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3416:17:13"
																				},
																				"nativeSrc": "3416:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3416:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3406:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3406:2:13"
																		},
																		"nativeSrc": "3406:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3406:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3399:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:13"
																},
																"nativeSrc": "3399:43:13",
																"nodeType": "YulFunctionCall",
																"src": "3399:43:13"
															},
															"nativeSrc": "3396:63:13",
															"nodeType": "YulIf",
															"src": "3396:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3343:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3379:5:13",
														"nodeType": "YulTypedName",
														"src": "3379:5:13",
														"type": ""
													}
												],
												"src": "3343:122:13"
											},
											{
												"body": {
													"nativeSrc": "3523:87:13",
													"nodeType": "YulBlock",
													"src": "3523:87:13",
													"statements": [
														{
															"nativeSrc": "3533:29:13",
															"nodeType": "YulAssignment",
															"src": "3533:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3555:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3555:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3542:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3542:12:13"
																},
																"nativeSrc": "3542:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3542:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3533:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3533:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3598:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3598:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3571:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3571:26:13"
																},
																"nativeSrc": "3571:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3571:33:13"
															},
															"nativeSrc": "3571:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3571:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3471:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3501:6:13",
														"nodeType": "YulTypedName",
														"src": "3501:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3509:3:13",
														"nodeType": "YulTypedName",
														"src": "3509:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3517:5:13",
														"nodeType": "YulTypedName",
														"src": "3517:5:13",
														"type": ""
													}
												],
												"src": "3471:139:13"
											},
											{
												"body": {
													"nativeSrc": "3699:391:13",
													"nodeType": "YulBlock",
													"src": "3699:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3745:83:13",
																"nodeType": "YulBlock",
																"src": "3745:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3747:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3747:77:13"
																			},
																			"nativeSrc": "3747:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3747:79:13"
																		},
																		"nativeSrc": "3747:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3747:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3720:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3720:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3729:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3729:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3716:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:13"
																		},
																		"nativeSrc": "3716:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3716:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3741:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3741:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3712:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3712:3:13"
																},
																"nativeSrc": "3712:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3712:32:13"
															},
															"nativeSrc": "3709:119:13",
															"nodeType": "YulIf",
															"src": "3709:119:13"
														},
														{
															"nativeSrc": "3838:117:13",
															"nodeType": "YulBlock",
															"src": "3838:117:13",
															"statements": [
																{
																	"nativeSrc": "3853:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3853:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3867:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3867:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3857:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3857:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3882:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3882:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3917:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3917:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3928:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3928:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3913:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3913:3:13"
																				},
																				"nativeSrc": "3913:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3913:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3937:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3937:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3892:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3892:20:13"
																		},
																		"nativeSrc": "3892:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3892:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3882:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3882:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3965:118:13",
															"nodeType": "YulBlock",
															"src": "3965:118:13",
															"statements": [
																{
																	"nativeSrc": "3980:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3980:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3994:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3994:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3984:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3984:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4010:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4010:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4045:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4045:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4056:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4056:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4041:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4041:3:13"
																				},
																				"nativeSrc": "4041:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4041:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4020:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4020:20:13"
																		},
																		"nativeSrc": "4020:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4020:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4010:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4010:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3616:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3661:9:13",
														"nodeType": "YulTypedName",
														"src": "3661:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3672:7:13",
														"nodeType": "YulTypedName",
														"src": "3672:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3684:6:13",
														"nodeType": "YulTypedName",
														"src": "3684:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3692:6:13",
														"nodeType": "YulTypedName",
														"src": "3692:6:13",
														"type": ""
													}
												],
												"src": "3616:474:13"
											},
											{
												"body": {
													"nativeSrc": "4161:53:13",
													"nodeType": "YulBlock",
													"src": "4161:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4178:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4178:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4201:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4201:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4183:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "4183:17:13"
																		},
																		"nativeSrc": "4183:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4183:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4171:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4171:6:13"
																},
																"nativeSrc": "4171:37:13",
																"nodeType": "YulFunctionCall",
																"src": "4171:37:13"
															},
															"nativeSrc": "4171:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "4171:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4096:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4149:5:13",
														"nodeType": "YulTypedName",
														"src": "4149:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4156:3:13",
														"nodeType": "YulTypedName",
														"src": "4156:3:13",
														"type": ""
													}
												],
												"src": "4096:118:13"
											},
											{
												"body": {
													"nativeSrc": "4318:124:13",
													"nodeType": "YulBlock",
													"src": "4318:124:13",
													"statements": [
														{
															"nativeSrc": "4328:26:13",
															"nodeType": "YulAssignment",
															"src": "4328:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4340:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4340:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4351:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4351:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4336:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:13"
																},
																"nativeSrc": "4336:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4336:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4328:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4328:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4408:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4408:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4421:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4421:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4432:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4432:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4417:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4417:3:13"
																		},
																		"nativeSrc": "4417:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4417:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4364:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4364:43:13"
																},
																"nativeSrc": "4364:71:13",
																"nodeType": "YulFunctionCall",
																"src": "4364:71:13"
															},
															"nativeSrc": "4364:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "4364:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4220:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4290:9:13",
														"nodeType": "YulTypedName",
														"src": "4290:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4302:6:13",
														"nodeType": "YulTypedName",
														"src": "4302:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4313:4:13",
														"nodeType": "YulTypedName",
														"src": "4313:4:13",
														"type": ""
													}
												],
												"src": "4220:222:13"
											},
											{
												"body": {
													"nativeSrc": "4548:519:13",
													"nodeType": "YulBlock",
													"src": "4548:519:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4594:83:13",
																"nodeType": "YulBlock",
																"src": "4594:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4596:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4596:77:13"
																			},
																			"nativeSrc": "4596:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4596:79:13"
																		},
																		"nativeSrc": "4596:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4596:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4569:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4569:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4578:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4578:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4565:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4565:3:13"
																		},
																		"nativeSrc": "4565:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4565:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4590:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4590:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4561:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4561:3:13"
																},
																"nativeSrc": "4561:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4561:32:13"
															},
															"nativeSrc": "4558:119:13",
															"nodeType": "YulIf",
															"src": "4558:119:13"
														},
														{
															"nativeSrc": "4687:117:13",
															"nodeType": "YulBlock",
															"src": "4687:117:13",
															"statements": [
																{
																	"nativeSrc": "4702:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4702:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4716:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4716:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4706:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4706:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4731:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4731:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4766:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4766:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4777:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4777:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4762:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4762:3:13"
																				},
																				"nativeSrc": "4762:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4762:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4786:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4786:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4741:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4741:20:13"
																		},
																		"nativeSrc": "4741:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4741:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4731:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4731:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4814:118:13",
															"nodeType": "YulBlock",
															"src": "4814:118:13",
															"statements": [
																{
																	"nativeSrc": "4829:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4829:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4843:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4843:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4833:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4833:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4859:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4859:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4894:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4894:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4905:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4905:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4890:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4890:3:13"
																				},
																				"nativeSrc": "4890:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4890:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4914:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4914:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4869:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4869:20:13"
																		},
																		"nativeSrc": "4869:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4869:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4859:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4859:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4942:118:13",
															"nodeType": "YulBlock",
															"src": "4942:118:13",
															"statements": [
																{
																	"nativeSrc": "4957:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4957:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4971:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4971:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4961:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4961:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4987:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4987:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5022:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5022:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5033:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5033:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5018:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5018:3:13"
																				},
																				"nativeSrc": "5018:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5018:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5042:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5042:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4997:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4997:20:13"
																		},
																		"nativeSrc": "4997:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4997:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4987:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4987:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4448:619:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4502:9:13",
														"nodeType": "YulTypedName",
														"src": "4502:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4513:7:13",
														"nodeType": "YulTypedName",
														"src": "4513:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4525:6:13",
														"nodeType": "YulTypedName",
														"src": "4525:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4533:6:13",
														"nodeType": "YulTypedName",
														"src": "4533:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4541:6:13",
														"nodeType": "YulTypedName",
														"src": "4541:6:13",
														"type": ""
													}
												],
												"src": "4448:619:13"
											},
											{
												"body": {
													"nativeSrc": "5116:43:13",
													"nodeType": "YulBlock",
													"src": "5116:43:13",
													"statements": [
														{
															"nativeSrc": "5126:27:13",
															"nodeType": "YulAssignment",
															"src": "5126:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5141:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5141:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5148:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5148:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5137:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5137:3:13"
																},
																"nativeSrc": "5137:16:13",
																"nodeType": "YulFunctionCall",
																"src": "5137:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5126:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "5126:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5073:86:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5098:5:13",
														"nodeType": "YulTypedName",
														"src": "5098:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5108:7:13",
														"nodeType": "YulTypedName",
														"src": "5108:7:13",
														"type": ""
													}
												],
												"src": "5073:86:13"
											},
											{
												"body": {
													"nativeSrc": "5226:51:13",
													"nodeType": "YulBlock",
													"src": "5226:51:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5243:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5243:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5264:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5264:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5248:15:13",
																			"nodeType": "YulIdentifier",
																			"src": "5248:15:13"
																		},
																		"nativeSrc": "5248:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5248:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5236:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5236:6:13"
																},
																"nativeSrc": "5236:35:13",
																"nodeType": "YulFunctionCall",
																"src": "5236:35:13"
															},
															"nativeSrc": "5236:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "5236:35:13"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5165:112:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5214:5:13",
														"nodeType": "YulTypedName",
														"src": "5214:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5221:3:13",
														"nodeType": "YulTypedName",
														"src": "5221:3:13",
														"type": ""
													}
												],
												"src": "5165:112:13"
											},
											{
												"body": {
													"nativeSrc": "5377:120:13",
													"nodeType": "YulBlock",
													"src": "5377:120:13",
													"statements": [
														{
															"nativeSrc": "5387:26:13",
															"nodeType": "YulAssignment",
															"src": "5387:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5399:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5399:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5410:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5410:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5395:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5395:3:13"
																},
																"nativeSrc": "5395:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5395:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5387:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5387:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5463:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5463:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5476:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5476:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5487:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5487:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5472:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5472:3:13"
																		},
																		"nativeSrc": "5472:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5472:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5423:39:13",
																	"nodeType": "YulIdentifier",
																	"src": "5423:39:13"
																},
																"nativeSrc": "5423:67:13",
																"nodeType": "YulFunctionCall",
																"src": "5423:67:13"
															},
															"nativeSrc": "5423:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "5423:67:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5283:214:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5349:9:13",
														"nodeType": "YulTypedName",
														"src": "5349:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5361:6:13",
														"nodeType": "YulTypedName",
														"src": "5361:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5372:4:13",
														"nodeType": "YulTypedName",
														"src": "5372:4:13",
														"type": ""
													}
												],
												"src": "5283:214:13"
											},
											{
												"body": {
													"nativeSrc": "5592:28:13",
													"nodeType": "YulBlock",
													"src": "5592:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5609:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5609:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5612:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5612:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5602:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5602:6:13"
																},
																"nativeSrc": "5602:12:13",
																"nodeType": "YulFunctionCall",
																"src": "5602:12:13"
															},
															"nativeSrc": "5602:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "5602:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5503:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "5503:117:13"
											},
											{
												"body": {
													"nativeSrc": "5715:28:13",
													"nodeType": "YulBlock",
													"src": "5715:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5732:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5732:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5735:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5735:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5725:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5725:6:13"
																},
																"nativeSrc": "5725:12:13",
																"nodeType": "YulFunctionCall",
																"src": "5725:12:13"
															},
															"nativeSrc": "5725:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "5725:12:13"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "5626:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "5626:117:13"
											},
											{
												"body": {
													"nativeSrc": "5838:28:13",
													"nodeType": "YulBlock",
													"src": "5838:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5855:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5855:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5858:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5858:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5848:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5848:6:13"
																},
																"nativeSrc": "5848:12:13",
																"nodeType": "YulFunctionCall",
																"src": "5848:12:13"
															},
															"nativeSrc": "5848:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "5848:12:13"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "5749:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "5749:117:13"
											},
											{
												"body": {
													"nativeSrc": "5959:478:13",
													"nodeType": "YulBlock",
													"src": "5959:478:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6008:83:13",
																"nodeType": "YulBlock",
																"src": "6008:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6010:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6010:77:13"
																			},
																			"nativeSrc": "6010:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6010:79:13"
																		},
																		"nativeSrc": "6010:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6010:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5987:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5987:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5995:4:13",
																						"nodeType": "YulLiteral",
																						"src": "5995:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5983:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5983:3:13"
																				},
																				"nativeSrc": "5983:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5983:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6002:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6002:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5979:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5979:3:13"
																		},
																		"nativeSrc": "5979:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5979:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5972:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5972:6:13"
																},
																"nativeSrc": "5972:35:13",
																"nodeType": "YulFunctionCall",
																"src": "5972:35:13"
															},
															"nativeSrc": "5969:122:13",
															"nodeType": "YulIf",
															"src": "5969:122:13"
														},
														{
															"nativeSrc": "6100:30:13",
															"nodeType": "YulAssignment",
															"src": "6100:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6123:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6123:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6110:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "6110:12:13"
																},
																"nativeSrc": "6110:20:13",
																"nodeType": "YulFunctionCall",
																"src": "6110:20:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6100:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6100:6:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6173:83:13",
																"nodeType": "YulBlock",
																"src": "6173:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "6175:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6175:77:13"
																			},
																			"nativeSrc": "6175:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6175:79:13"
																		},
																		"nativeSrc": "6175:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6175:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6145:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6145:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6153:18:13",
																		"nodeType": "YulLiteral",
																		"src": "6153:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6142:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6142:2:13"
																},
																"nativeSrc": "6142:30:13",
																"nodeType": "YulFunctionCall",
																"src": "6142:30:13"
															},
															"nativeSrc": "6139:117:13",
															"nodeType": "YulIf",
															"src": "6139:117:13"
														},
														{
															"nativeSrc": "6265:29:13",
															"nodeType": "YulAssignment",
															"src": "6265:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6281:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6281:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6289:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6289:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6277:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6277:3:13"
																},
																"nativeSrc": "6277:17:13",
																"nodeType": "YulFunctionCall",
																"src": "6277:17:13"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "6265:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "6265:8:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6348:83:13",
																"nodeType": "YulBlock",
																"src": "6348:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "6350:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6350:77:13"
																			},
																			"nativeSrc": "6350:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6350:79:13"
																		},
																		"nativeSrc": "6350:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6350:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "6313:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "6313:8:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "6327:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6327:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6335:4:13",
																						"nodeType": "YulLiteral",
																						"src": "6335:4:13",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6323:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6323:3:13"
																				},
																				"nativeSrc": "6323:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6323:17:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6309:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6309:3:13"
																		},
																		"nativeSrc": "6309:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6309:32:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6343:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6343:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6306:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6306:2:13"
																},
																"nativeSrc": "6306:41:13",
																"nodeType": "YulFunctionCall",
																"src": "6306:41:13"
															},
															"nativeSrc": "6303:128:13",
															"nodeType": "YulIf",
															"src": "6303:128:13"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nativeSrc": "5885:552:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5926:6:13",
														"nodeType": "YulTypedName",
														"src": "5926:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5934:3:13",
														"nodeType": "YulTypedName",
														"src": "5934:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "5942:8:13",
														"nodeType": "YulTypedName",
														"src": "5942:8:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5952:6:13",
														"nodeType": "YulTypedName",
														"src": "5952:6:13",
														"type": ""
													}
												],
												"src": "5885:552:13"
											},
											{
												"body": {
													"nativeSrc": "6562:698:13",
													"nodeType": "YulBlock",
													"src": "6562:698:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6608:83:13",
																"nodeType": "YulBlock",
																"src": "6608:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6610:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6610:77:13"
																			},
																			"nativeSrc": "6610:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6610:79:13"
																		},
																		"nativeSrc": "6610:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6610:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6583:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6583:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6592:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6592:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6579:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6579:3:13"
																		},
																		"nativeSrc": "6579:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6579:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6604:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6604:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6575:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6575:3:13"
																},
																"nativeSrc": "6575:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6575:32:13"
															},
															"nativeSrc": "6572:119:13",
															"nodeType": "YulIf",
															"src": "6572:119:13"
														},
														{
															"nativeSrc": "6701:117:13",
															"nodeType": "YulBlock",
															"src": "6701:117:13",
															"statements": [
																{
																	"nativeSrc": "6716:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6716:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6730:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6730:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6720:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6720:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6745:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6745:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6780:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6780:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6791:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6791:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6776:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6776:3:13"
																				},
																				"nativeSrc": "6776:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6776:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6800:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6800:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6755:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6755:20:13"
																		},
																		"nativeSrc": "6755:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6755:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6745:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6745:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6828:118:13",
															"nodeType": "YulBlock",
															"src": "6828:118:13",
															"statements": [
																{
																	"nativeSrc": "6843:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6843:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6857:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6857:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6847:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6847:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6873:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6873:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6908:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6908:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6919:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6919:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6904:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6904:3:13"
																				},
																				"nativeSrc": "6904:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6904:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6928:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6928:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6883:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6883:20:13"
																		},
																		"nativeSrc": "6883:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6883:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6873:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6873:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6956:297:13",
															"nodeType": "YulBlock",
															"src": "6956:297:13",
															"statements": [
																{
																	"nativeSrc": "6971:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6971:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7002:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7002:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7013:2:13",
																						"nodeType": "YulLiteral",
																						"src": "7013:2:13",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6998:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6998:3:13"
																				},
																				"nativeSrc": "6998:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6998:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6985:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "6985:12:13"
																		},
																		"nativeSrc": "6985:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6985:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6975:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6975:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7064:83:13",
																		"nodeType": "YulBlock",
																		"src": "7064:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7066:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "7066:77:13"
																					},
																					"nativeSrc": "7066:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7066:79:13"
																				},
																				"nativeSrc": "7066:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "7066:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7036:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7036:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7044:18:13",
																				"nodeType": "YulLiteral",
																				"src": "7044:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7033:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "7033:2:13"
																		},
																		"nativeSrc": "7033:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7033:30:13"
																	},
																	"nativeSrc": "7030:117:13",
																	"nodeType": "YulIf",
																	"src": "7030:117:13"
																},
																{
																	"nativeSrc": "7161:82:13",
																	"nodeType": "YulAssignment",
																	"src": "7161:82:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7215:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7215:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7226:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7226:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7211:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7211:3:13"
																				},
																				"nativeSrc": "7211:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7211:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7235:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7235:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "7179:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "7179:31:13"
																		},
																		"nativeSrc": "7179:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7179:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7161:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7161:6:13"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "7169:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7169:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr",
												"nativeSrc": "6443:817:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6508:9:13",
														"nodeType": "YulTypedName",
														"src": "6508:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6519:7:13",
														"nodeType": "YulTypedName",
														"src": "6519:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6531:6:13",
														"nodeType": "YulTypedName",
														"src": "6531:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6539:6:13",
														"nodeType": "YulTypedName",
														"src": "6539:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6547:6:13",
														"nodeType": "YulTypedName",
														"src": "6547:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6555:6:13",
														"nodeType": "YulTypedName",
														"src": "6555:6:13",
														"type": ""
													}
												],
												"src": "6443:817:13"
											},
											{
												"body": {
													"nativeSrc": "7332:263:13",
													"nodeType": "YulBlock",
													"src": "7332:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7378:83:13",
																"nodeType": "YulBlock",
																"src": "7378:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7380:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "7380:77:13"
																			},
																			"nativeSrc": "7380:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7380:79:13"
																		},
																		"nativeSrc": "7380:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7380:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7353:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7353:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7362:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7362:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7349:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7349:3:13"
																		},
																		"nativeSrc": "7349:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7349:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7374:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7374:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7345:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7345:3:13"
																},
																"nativeSrc": "7345:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7345:32:13"
															},
															"nativeSrc": "7342:119:13",
															"nodeType": "YulIf",
															"src": "7342:119:13"
														},
														{
															"nativeSrc": "7471:117:13",
															"nodeType": "YulBlock",
															"src": "7471:117:13",
															"statements": [
																{
																	"nativeSrc": "7486:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7486:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7500:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7500:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7490:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7490:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7515:63:13",
																	"nodeType": "YulAssignment",
																	"src": "7515:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7550:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7550:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7561:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7561:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7546:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7546:3:13"
																				},
																				"nativeSrc": "7546:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7546:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7570:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7570:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7525:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "7525:20:13"
																		},
																		"nativeSrc": "7525:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7525:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7515:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7515:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7266:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7302:9:13",
														"nodeType": "YulTypedName",
														"src": "7302:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7313:7:13",
														"nodeType": "YulTypedName",
														"src": "7313:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7325:6:13",
														"nodeType": "YulTypedName",
														"src": "7325:6:13",
														"type": ""
													}
												],
												"src": "7266:329:13"
											},
											{
												"body": {
													"nativeSrc": "7737:827:13",
													"nodeType": "YulBlock",
													"src": "7737:827:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7784:83:13",
																"nodeType": "YulBlock",
																"src": "7784:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7786:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "7786:77:13"
																			},
																			"nativeSrc": "7786:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7786:79:13"
																		},
																		"nativeSrc": "7786:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7786:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7758:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7758:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7767:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7767:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7754:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7754:3:13"
																		},
																		"nativeSrc": "7754:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7754:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7779:3:13",
																		"nodeType": "YulLiteral",
																		"src": "7779:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7750:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7750:3:13"
																},
																"nativeSrc": "7750:33:13",
																"nodeType": "YulFunctionCall",
																"src": "7750:33:13"
															},
															"nativeSrc": "7747:120:13",
															"nodeType": "YulIf",
															"src": "7747:120:13"
														},
														{
															"nativeSrc": "7877:117:13",
															"nodeType": "YulBlock",
															"src": "7877:117:13",
															"statements": [
																{
																	"nativeSrc": "7892:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7892:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7906:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7906:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7896:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7896:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7921:63:13",
																	"nodeType": "YulAssignment",
																	"src": "7921:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7956:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7956:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7967:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7967:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7952:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7952:3:13"
																				},
																				"nativeSrc": "7952:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7952:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7976:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7976:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7931:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "7931:20:13"
																		},
																		"nativeSrc": "7931:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7931:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7921:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7921:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8004:118:13",
															"nodeType": "YulBlock",
															"src": "8004:118:13",
															"statements": [
																{
																	"nativeSrc": "8019:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8019:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8033:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8033:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8023:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8023:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8049:63:13",
																	"nodeType": "YulAssignment",
																	"src": "8049:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8084:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8084:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8095:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8095:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8080:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8080:3:13"
																				},
																				"nativeSrc": "8080:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8080:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8104:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8104:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8059:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "8059:20:13"
																		},
																		"nativeSrc": "8059:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8059:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8049:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8049:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8132:118:13",
															"nodeType": "YulBlock",
															"src": "8132:118:13",
															"statements": [
																{
																	"nativeSrc": "8147:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8147:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8161:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8161:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8151:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8151:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8177:63:13",
																	"nodeType": "YulAssignment",
																	"src": "8177:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8212:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8212:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8223:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8223:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8208:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8208:3:13"
																				},
																				"nativeSrc": "8208:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8208:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8232:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8232:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8187:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "8187:20:13"
																		},
																		"nativeSrc": "8187:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8187:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8177:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8177:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8260:297:13",
															"nodeType": "YulBlock",
															"src": "8260:297:13",
															"statements": [
																{
																	"nativeSrc": "8275:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8275:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8306:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8306:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8317:2:13",
																						"nodeType": "YulLiteral",
																						"src": "8317:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8302:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8302:3:13"
																				},
																				"nativeSrc": "8302:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8302:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8289:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "8289:12:13"
																		},
																		"nativeSrc": "8289:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8289:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8279:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8279:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8368:83:13",
																		"nodeType": "YulBlock",
																		"src": "8368:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8370:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "8370:77:13"
																					},
																					"nativeSrc": "8370:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8370:79:13"
																				},
																				"nativeSrc": "8370:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "8370:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8340:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8340:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8348:18:13",
																				"nodeType": "YulLiteral",
																				"src": "8348:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8337:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "8337:2:13"
																		},
																		"nativeSrc": "8337:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8337:30:13"
																	},
																	"nativeSrc": "8334:117:13",
																	"nodeType": "YulIf",
																	"src": "8334:117:13"
																},
																{
																	"nativeSrc": "8465:82:13",
																	"nodeType": "YulAssignment",
																	"src": "8465:82:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8519:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8519:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8530:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8530:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8515:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8515:3:13"
																				},
																				"nativeSrc": "8515:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8515:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8539:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8539:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "8483:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "8483:31:13"
																		},
																		"nativeSrc": "8483:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8483:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "8465:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8465:6:13"
																		},
																		{
																			"name": "value4",
																			"nativeSrc": "8473:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8473:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nativeSrc": "7601:963:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7675:9:13",
														"nodeType": "YulTypedName",
														"src": "7675:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7686:7:13",
														"nodeType": "YulTypedName",
														"src": "7686:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7698:6:13",
														"nodeType": "YulTypedName",
														"src": "7698:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7706:6:13",
														"nodeType": "YulTypedName",
														"src": "7706:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7714:6:13",
														"nodeType": "YulTypedName",
														"src": "7714:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7722:6:13",
														"nodeType": "YulTypedName",
														"src": "7722:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7730:6:13",
														"nodeType": "YulTypedName",
														"src": "7730:6:13",
														"type": ""
													}
												],
												"src": "7601:963:13"
											},
											{
												"body": {
													"nativeSrc": "8653:391:13",
													"nodeType": "YulBlock",
													"src": "8653:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8699:83:13",
																"nodeType": "YulBlock",
																"src": "8699:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8701:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8701:77:13"
																			},
																			"nativeSrc": "8701:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8701:79:13"
																		},
																		"nativeSrc": "8701:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8701:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8674:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8674:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8683:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8683:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8670:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8670:3:13"
																		},
																		"nativeSrc": "8670:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8670:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8695:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8695:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8666:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8666:3:13"
																},
																"nativeSrc": "8666:32:13",
																"nodeType": "YulFunctionCall",
																"src": "8666:32:13"
															},
															"nativeSrc": "8663:119:13",
															"nodeType": "YulIf",
															"src": "8663:119:13"
														},
														{
															"nativeSrc": "8792:117:13",
															"nodeType": "YulBlock",
															"src": "8792:117:13",
															"statements": [
																{
																	"nativeSrc": "8807:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8807:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8821:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8821:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8811:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8811:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8836:63:13",
																	"nodeType": "YulAssignment",
																	"src": "8836:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8871:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8871:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8882:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8882:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8867:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8867:3:13"
																				},
																				"nativeSrc": "8867:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8867:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8891:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8891:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8846:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "8846:20:13"
																		},
																		"nativeSrc": "8846:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8846:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8836:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8836:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8919:118:13",
															"nodeType": "YulBlock",
															"src": "8919:118:13",
															"statements": [
																{
																	"nativeSrc": "8934:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8934:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8948:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8948:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8938:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8938:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8964:63:13",
																	"nodeType": "YulAssignment",
																	"src": "8964:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8999:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8999:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9010:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9010:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8995:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8995:3:13"
																				},
																				"nativeSrc": "8995:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8995:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9019:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9019:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8974:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "8974:20:13"
																		},
																		"nativeSrc": "8974:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8974:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8964:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8964:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "8570:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8615:9:13",
														"nodeType": "YulTypedName",
														"src": "8615:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8626:7:13",
														"nodeType": "YulTypedName",
														"src": "8626:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8638:6:13",
														"nodeType": "YulTypedName",
														"src": "8638:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8646:6:13",
														"nodeType": "YulTypedName",
														"src": "8646:6:13",
														"type": ""
													}
												],
												"src": "8570:474:13"
											},
											{
												"body": {
													"nativeSrc": "9078:152:13",
													"nodeType": "YulBlock",
													"src": "9078:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9095:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9095:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9098:77:13",
																		"nodeType": "YulLiteral",
																		"src": "9098:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9088:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9088:6:13"
																},
																"nativeSrc": "9088:88:13",
																"nodeType": "YulFunctionCall",
																"src": "9088:88:13"
															},
															"nativeSrc": "9088:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "9088:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9192:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9192:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9195:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9195:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9185:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9185:6:13"
																},
																"nativeSrc": "9185:15:13",
																"nodeType": "YulFunctionCall",
																"src": "9185:15:13"
															},
															"nativeSrc": "9185:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "9185:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9216:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9216:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9219:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9219:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9209:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9209:6:13"
																},
																"nativeSrc": "9209:15:13",
																"nodeType": "YulFunctionCall",
																"src": "9209:15:13"
															},
															"nativeSrc": "9209:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "9209:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "9050:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "9050:180:13"
											},
											{
												"body": {
													"nativeSrc": "9287:269:13",
													"nodeType": "YulBlock",
													"src": "9287:269:13",
													"statements": [
														{
															"nativeSrc": "9297:22:13",
															"nodeType": "YulAssignment",
															"src": "9297:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9311:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9311:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9317:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9307:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9307:3:13"
																},
																"nativeSrc": "9307:12:13",
																"nodeType": "YulFunctionCall",
																"src": "9307:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9297:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9297:6:13"
																}
															]
														},
														{
															"nativeSrc": "9328:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "9328:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9358:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9358:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9364:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9364:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9354:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9354:3:13"
																},
																"nativeSrc": "9354:12:13",
																"nodeType": "YulFunctionCall",
																"src": "9354:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9332:18:13",
																	"nodeType": "YulTypedName",
																	"src": "9332:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9405:51:13",
																"nodeType": "YulBlock",
																"src": "9405:51:13",
																"statements": [
																	{
																		"nativeSrc": "9419:27:13",
																		"nodeType": "YulAssignment",
																		"src": "9419:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9433:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "9433:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9441:4:13",
																					"nodeType": "YulLiteral",
																					"src": "9441:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9429:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9429:3:13"
																			},
																			"nativeSrc": "9429:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9429:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9419:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9419:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9385:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "9385:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9378:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9378:6:13"
																},
																"nativeSrc": "9378:26:13",
																"nodeType": "YulFunctionCall",
																"src": "9378:26:13"
															},
															"nativeSrc": "9375:81:13",
															"nodeType": "YulIf",
															"src": "9375:81:13"
														},
														{
															"body": {
																"nativeSrc": "9508:42:13",
																"nodeType": "YulBlock",
																"src": "9508:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9522:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "9522:16:13"
																			},
																			"nativeSrc": "9522:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9522:18:13"
																		},
																		"nativeSrc": "9522:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9522:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9472:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "9472:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9495:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9495:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9503:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9503:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9492:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "9492:2:13"
																		},
																		"nativeSrc": "9492:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9492:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9469:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9469:2:13"
																},
																"nativeSrc": "9469:38:13",
																"nodeType": "YulFunctionCall",
																"src": "9469:38:13"
															},
															"nativeSrc": "9466:84:13",
															"nodeType": "YulIf",
															"src": "9466:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9236:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9271:4:13",
														"nodeType": "YulTypedName",
														"src": "9271:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9280:6:13",
														"nodeType": "YulTypedName",
														"src": "9280:6:13",
														"type": ""
													}
												],
												"src": "9236:320:13"
											},
											{
												"body": {
													"nativeSrc": "9668:118:13",
													"nodeType": "YulBlock",
													"src": "9668:118:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9690:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9690:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9698:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9698:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9686:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9686:3:13"
																		},
																		"nativeSrc": "9686:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9686:14:13"
																	},
																	{
																		"hexValue": "455243313336333a205f636865636b416e6443616c6c5472616e736665722066",
																		"kind": "string",
																		"nativeSrc": "9702:34:13",
																		"nodeType": "YulLiteral",
																		"src": "9702:34:13",
																		"type": "",
																		"value": "ERC1363: _checkAndCallTransfer f"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9679:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9679:6:13"
																},
																"nativeSrc": "9679:58:13",
																"nodeType": "YulFunctionCall",
																"src": "9679:58:13"
															},
															"nativeSrc": "9679:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "9679:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9758:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9758:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9766:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9766:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9754:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9754:3:13"
																		},
																		"nativeSrc": "9754:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9754:15:13"
																	},
																	{
																		"hexValue": "61696c6564",
																		"kind": "string",
																		"nativeSrc": "9771:7:13",
																		"nodeType": "YulLiteral",
																		"src": "9771:7:13",
																		"type": "",
																		"value": "ailed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9747:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9747:6:13"
																},
																"nativeSrc": "9747:32:13",
																"nodeType": "YulFunctionCall",
																"src": "9747:32:13"
															},
															"nativeSrc": "9747:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "9747:32:13"
														}
													]
												},
												"name": "store_literal_in_memory_767d08b4043dcc0a72fe6da23c3e15169075e0c3845c64dad35d2bf3849edad9",
												"nativeSrc": "9562:224:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9660:6:13",
														"nodeType": "YulTypedName",
														"src": "9660:6:13",
														"type": ""
													}
												],
												"src": "9562:224:13"
											},
											{
												"body": {
													"nativeSrc": "9938:220:13",
													"nodeType": "YulBlock",
													"src": "9938:220:13",
													"statements": [
														{
															"nativeSrc": "9948:74:13",
															"nodeType": "YulAssignment",
															"src": "9948:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10014:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10014:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10019:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10019:2:13",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9955:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "9955:58:13"
																},
																"nativeSrc": "9955:67:13",
																"nodeType": "YulFunctionCall",
																"src": "9955:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9948:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9948:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10120:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10120:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_767d08b4043dcc0a72fe6da23c3e15169075e0c3845c64dad35d2bf3849edad9",
																	"nativeSrc": "10031:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "10031:88:13"
																},
																"nativeSrc": "10031:93:13",
																"nodeType": "YulFunctionCall",
																"src": "10031:93:13"
															},
															"nativeSrc": "10031:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "10031:93:13"
														},
														{
															"nativeSrc": "10133:19:13",
															"nodeType": "YulAssignment",
															"src": "10133:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10144:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10144:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10149:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10149:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10140:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10140:3:13"
																},
																"nativeSrc": "10140:12:13",
																"nodeType": "YulFunctionCall",
																"src": "10140:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10133:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10133:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_767d08b4043dcc0a72fe6da23c3e15169075e0c3845c64dad35d2bf3849edad9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9792:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9926:3:13",
														"nodeType": "YulTypedName",
														"src": "9926:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9934:3:13",
														"nodeType": "YulTypedName",
														"src": "9934:3:13",
														"type": ""
													}
												],
												"src": "9792:366:13"
											},
											{
												"body": {
													"nativeSrc": "10335:248:13",
													"nodeType": "YulBlock",
													"src": "10335:248:13",
													"statements": [
														{
															"nativeSrc": "10345:26:13",
															"nodeType": "YulAssignment",
															"src": "10345:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10357:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10357:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10368:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10368:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10353:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10353:3:13"
																},
																"nativeSrc": "10353:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10353:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10345:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10345:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10392:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10392:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10403:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10403:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10388:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10388:3:13"
																		},
																		"nativeSrc": "10388:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10388:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10411:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "10411:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10417:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10417:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10407:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10407:3:13"
																		},
																		"nativeSrc": "10407:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10407:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10381:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10381:6:13"
																},
																"nativeSrc": "10381:47:13",
																"nodeType": "YulFunctionCall",
																"src": "10381:47:13"
															},
															"nativeSrc": "10381:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "10381:47:13"
														},
														{
															"nativeSrc": "10437:139:13",
															"nodeType": "YulAssignment",
															"src": "10437:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10571:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10571:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_767d08b4043dcc0a72fe6da23c3e15169075e0c3845c64dad35d2bf3849edad9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10445:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "10445:124:13"
																},
																"nativeSrc": "10445:131:13",
																"nodeType": "YulFunctionCall",
																"src": "10445:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10437:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10437:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_767d08b4043dcc0a72fe6da23c3e15169075e0c3845c64dad35d2bf3849edad9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10164:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10315:9:13",
														"nodeType": "YulTypedName",
														"src": "10315:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10330:4:13",
														"nodeType": "YulTypedName",
														"src": "10330:4:13",
														"type": ""
													}
												],
												"src": "10164:419:13"
											},
											{
												"body": {
													"nativeSrc": "10654:53:13",
													"nodeType": "YulBlock",
													"src": "10654:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10671:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10671:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10694:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "10694:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "10676:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "10676:17:13"
																		},
																		"nativeSrc": "10676:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10676:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10664:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10664:6:13"
																},
																"nativeSrc": "10664:37:13",
																"nodeType": "YulFunctionCall",
																"src": "10664:37:13"
															},
															"nativeSrc": "10664:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "10664:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "10589:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10642:5:13",
														"nodeType": "YulTypedName",
														"src": "10642:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10649:3:13",
														"nodeType": "YulTypedName",
														"src": "10649:3:13",
														"type": ""
													}
												],
												"src": "10589:118:13"
											},
											{
												"body": {
													"nativeSrc": "10867:288:13",
													"nodeType": "YulBlock",
													"src": "10867:288:13",
													"statements": [
														{
															"nativeSrc": "10877:26:13",
															"nodeType": "YulAssignment",
															"src": "10877:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10889:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10889:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10900:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10900:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10885:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10885:3:13"
																},
																"nativeSrc": "10885:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10885:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10877:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10877:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10957:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10957:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10970:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10970:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10981:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10981:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10966:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10966:3:13"
																		},
																		"nativeSrc": "10966:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10966:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10913:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "10913:43:13"
																},
																"nativeSrc": "10913:71:13",
																"nodeType": "YulFunctionCall",
																"src": "10913:71:13"
															},
															"nativeSrc": "10913:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "10913:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11038:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11038:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11051:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11051:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11062:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11062:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11047:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11047:3:13"
																		},
																		"nativeSrc": "11047:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11047:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10994:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "10994:43:13"
																},
																"nativeSrc": "10994:72:13",
																"nodeType": "YulFunctionCall",
																"src": "10994:72:13"
															},
															"nativeSrc": "10994:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "10994:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11120:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11120:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11133:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11133:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11144:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11144:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11129:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11129:3:13"
																		},
																		"nativeSrc": "11129:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11129:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11076:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "11076:43:13"
																},
																"nativeSrc": "11076:72:13",
																"nodeType": "YulFunctionCall",
																"src": "11076:72:13"
															},
															"nativeSrc": "11076:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "11076:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10713:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10823:9:13",
														"nodeType": "YulTypedName",
														"src": "10823:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10835:6:13",
														"nodeType": "YulTypedName",
														"src": "10835:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10843:6:13",
														"nodeType": "YulTypedName",
														"src": "10843:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10851:6:13",
														"nodeType": "YulTypedName",
														"src": "10851:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10862:4:13",
														"nodeType": "YulTypedName",
														"src": "10862:4:13",
														"type": ""
													}
												],
												"src": "10713:442:13"
											},
											{
												"body": {
													"nativeSrc": "11259:124:13",
													"nodeType": "YulBlock",
													"src": "11259:124:13",
													"statements": [
														{
															"nativeSrc": "11269:26:13",
															"nodeType": "YulAssignment",
															"src": "11269:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11281:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11281:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11292:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11292:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11277:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11277:3:13"
																},
																"nativeSrc": "11277:18:13",
																"nodeType": "YulFunctionCall",
																"src": "11277:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11269:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11269:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11349:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11349:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11362:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11362:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11373:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11373:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11358:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11358:3:13"
																		},
																		"nativeSrc": "11358:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11358:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11305:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "11305:43:13"
																},
																"nativeSrc": "11305:71:13",
																"nodeType": "YulFunctionCall",
																"src": "11305:71:13"
															},
															"nativeSrc": "11305:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "11305:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "11161:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11231:9:13",
														"nodeType": "YulTypedName",
														"src": "11231:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11243:6:13",
														"nodeType": "YulTypedName",
														"src": "11243:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11254:4:13",
														"nodeType": "YulTypedName",
														"src": "11254:4:13",
														"type": ""
													}
												],
												"src": "11161:222:13"
											},
											{
												"body": {
													"nativeSrc": "11447:40:13",
													"nodeType": "YulBlock",
													"src": "11447:40:13",
													"statements": [
														{
															"nativeSrc": "11458:22:13",
															"nodeType": "YulAssignment",
															"src": "11458:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11474:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "11474:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11468:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11468:5:13"
																},
																"nativeSrc": "11468:12:13",
																"nodeType": "YulFunctionCall",
																"src": "11468:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11458:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11458:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "11389:98:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11430:5:13",
														"nodeType": "YulTypedName",
														"src": "11430:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11440:6:13",
														"nodeType": "YulTypedName",
														"src": "11440:6:13",
														"type": ""
													}
												],
												"src": "11389:98:13"
											},
											{
												"body": {
													"nativeSrc": "11588:73:13",
													"nodeType": "YulBlock",
													"src": "11588:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11605:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11605:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11610:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11610:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11598:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11598:6:13"
																},
																"nativeSrc": "11598:19:13",
																"nodeType": "YulFunctionCall",
																"src": "11598:19:13"
															},
															"nativeSrc": "11598:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "11598:19:13"
														},
														{
															"nativeSrc": "11626:29:13",
															"nodeType": "YulAssignment",
															"src": "11626:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11645:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11645:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11650:4:13",
																		"nodeType": "YulLiteral",
																		"src": "11650:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11641:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11641:3:13"
																},
																"nativeSrc": "11641:14:13",
																"nodeType": "YulFunctionCall",
																"src": "11641:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11626:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "11626:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "11493:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11560:3:13",
														"nodeType": "YulTypedName",
														"src": "11560:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11565:6:13",
														"nodeType": "YulTypedName",
														"src": "11565:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11576:11:13",
														"nodeType": "YulTypedName",
														"src": "11576:11:13",
														"type": ""
													}
												],
												"src": "11493:168:13"
											},
											{
												"body": {
													"nativeSrc": "11757:283:13",
													"nodeType": "YulBlock",
													"src": "11757:283:13",
													"statements": [
														{
															"nativeSrc": "11767:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "11767:52:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11813:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "11813:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "11781:31:13",
																	"nodeType": "YulIdentifier",
																	"src": "11781:31:13"
																},
																"nativeSrc": "11781:38:13",
																"nodeType": "YulFunctionCall",
																"src": "11781:38:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11771:6:13",
																	"nodeType": "YulTypedName",
																	"src": "11771:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11828:77:13",
															"nodeType": "YulAssignment",
															"src": "11828:77:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11893:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11893:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11898:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11898:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "11835:57:13",
																	"nodeType": "YulIdentifier",
																	"src": "11835:57:13"
																},
																"nativeSrc": "11835:70:13",
																"nodeType": "YulFunctionCall",
																"src": "11835:70:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11828:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11828:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11953:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "11953:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11960:4:13",
																				"nodeType": "YulLiteral",
																				"src": "11960:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11949:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11949:3:13"
																		},
																		"nativeSrc": "11949:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11949:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11967:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11967:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11972:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11972:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "11914:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "11914:34:13"
																},
																"nativeSrc": "11914:65:13",
																"nodeType": "YulFunctionCall",
																"src": "11914:65:13"
															},
															"nativeSrc": "11914:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "11914:65:13"
														},
														{
															"nativeSrc": "11988:46:13",
															"nodeType": "YulAssignment",
															"src": "11988:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11999:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11999:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12026:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12026:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "12004:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "12004:21:13"
																		},
																		"nativeSrc": "12004:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12004:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11995:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11995:3:13"
																},
																"nativeSrc": "11995:39:13",
																"nodeType": "YulFunctionCall",
																"src": "11995:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11988:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11988:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "11667:373:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11738:5:13",
														"nodeType": "YulTypedName",
														"src": "11738:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11745:3:13",
														"nodeType": "YulTypedName",
														"src": "11745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11753:3:13",
														"nodeType": "YulTypedName",
														"src": "11753:3:13",
														"type": ""
													}
												],
												"src": "11667:373:13"
											},
											{
												"body": {
													"nativeSrc": "12246:440:13",
													"nodeType": "YulBlock",
													"src": "12246:440:13",
													"statements": [
														{
															"nativeSrc": "12256:27:13",
															"nodeType": "YulAssignment",
															"src": "12256:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12268:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12268:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12279:3:13",
																		"nodeType": "YulLiteral",
																		"src": "12279:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12264:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12264:3:13"
																},
																"nativeSrc": "12264:19:13",
																"nodeType": "YulFunctionCall",
																"src": "12264:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12256:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12256:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12337:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12337:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12350:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12350:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12361:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12361:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12346:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12346:3:13"
																		},
																		"nativeSrc": "12346:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12346:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12293:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12293:43:13"
																},
																"nativeSrc": "12293:71:13",
																"nodeType": "YulFunctionCall",
																"src": "12293:71:13"
															},
															"nativeSrc": "12293:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "12293:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12418:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12418:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12431:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12431:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12442:2:13",
																				"nodeType": "YulLiteral",
																				"src": "12442:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12427:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12427:3:13"
																		},
																		"nativeSrc": "12427:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12427:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12374:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12374:43:13"
																},
																"nativeSrc": "12374:72:13",
																"nodeType": "YulFunctionCall",
																"src": "12374:72:13"
															},
															"nativeSrc": "12374:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "12374:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12500:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12500:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12513:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12513:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12524:2:13",
																				"nodeType": "YulLiteral",
																				"src": "12524:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12509:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12509:3:13"
																		},
																		"nativeSrc": "12509:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12509:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12456:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12456:43:13"
																},
																"nativeSrc": "12456:72:13",
																"nodeType": "YulFunctionCall",
																"src": "12456:72:13"
															},
															"nativeSrc": "12456:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "12456:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12549:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12549:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12560:2:13",
																				"nodeType": "YulLiteral",
																				"src": "12560:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12545:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12545:3:13"
																		},
																		"nativeSrc": "12545:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12545:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12569:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "12569:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12575:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12575:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12565:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12565:3:13"
																		},
																		"nativeSrc": "12565:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12565:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12538:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12538:6:13"
																},
																"nativeSrc": "12538:48:13",
																"nodeType": "YulFunctionCall",
																"src": "12538:48:13"
															},
															"nativeSrc": "12538:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "12538:48:13"
														},
														{
															"nativeSrc": "12595:84:13",
															"nodeType": "YulAssignment",
															"src": "12595:84:13",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "12665:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12665:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "12674:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "12674:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "12603:61:13",
																	"nodeType": "YulIdentifier",
																	"src": "12603:61:13"
																},
																"nativeSrc": "12603:76:13",
																"nodeType": "YulFunctionCall",
																"src": "12603:76:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12595:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12595:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "12046:640:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12194:9:13",
														"nodeType": "YulTypedName",
														"src": "12194:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12206:6:13",
														"nodeType": "YulTypedName",
														"src": "12206:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12214:6:13",
														"nodeType": "YulTypedName",
														"src": "12214:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12222:6:13",
														"nodeType": "YulTypedName",
														"src": "12222:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12230:6:13",
														"nodeType": "YulTypedName",
														"src": "12230:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12241:4:13",
														"nodeType": "YulTypedName",
														"src": "12241:4:13",
														"type": ""
													}
												],
												"src": "12046:640:13"
											},
											{
												"body": {
													"nativeSrc": "12754:79:13",
													"nodeType": "YulBlock",
													"src": "12754:79:13",
													"statements": [
														{
															"nativeSrc": "12764:22:13",
															"nodeType": "YulAssignment",
															"src": "12764:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12779:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12779:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12773:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "12773:5:13"
																},
																"nativeSrc": "12773:13:13",
																"nodeType": "YulFunctionCall",
																"src": "12773:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12764:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "12764:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12821:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "12821:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "12795:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "12795:25:13"
																},
																"nativeSrc": "12795:32:13",
																"nodeType": "YulFunctionCall",
																"src": "12795:32:13"
															},
															"nativeSrc": "12795:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "12795:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "12692:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12732:6:13",
														"nodeType": "YulTypedName",
														"src": "12732:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12740:3:13",
														"nodeType": "YulTypedName",
														"src": "12740:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12748:5:13",
														"nodeType": "YulTypedName",
														"src": "12748:5:13",
														"type": ""
													}
												],
												"src": "12692:141:13"
											},
											{
												"body": {
													"nativeSrc": "12915:273:13",
													"nodeType": "YulBlock",
													"src": "12915:273:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "12961:83:13",
																"nodeType": "YulBlock",
																"src": "12961:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12963:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "12963:77:13"
																			},
																			"nativeSrc": "12963:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12963:79:13"
																		},
																		"nativeSrc": "12963:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12963:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12936:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12936:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12945:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12945:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12932:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12932:3:13"
																		},
																		"nativeSrc": "12932:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12932:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12957:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12957:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12928:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12928:3:13"
																},
																"nativeSrc": "12928:32:13",
																"nodeType": "YulFunctionCall",
																"src": "12928:32:13"
															},
															"nativeSrc": "12925:119:13",
															"nodeType": "YulIf",
															"src": "12925:119:13"
														},
														{
															"nativeSrc": "13054:127:13",
															"nodeType": "YulBlock",
															"src": "13054:127:13",
															"statements": [
																{
																	"nativeSrc": "13069:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13069:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13083:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13083:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13073:6:13",
																			"nodeType": "YulTypedName",
																			"src": "13073:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13098:73:13",
																	"nodeType": "YulAssignment",
																	"src": "13098:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13143:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "13143:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13154:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "13154:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13139:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "13139:3:13"
																				},
																				"nativeSrc": "13139:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "13139:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13163:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "13163:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "13108:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "13108:30:13"
																		},
																		"nativeSrc": "13108:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13108:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13098:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "13098:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "12839:349:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12885:9:13",
														"nodeType": "YulTypedName",
														"src": "12885:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12896:7:13",
														"nodeType": "YulTypedName",
														"src": "12896:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12908:6:13",
														"nodeType": "YulTypedName",
														"src": "12908:6:13",
														"type": ""
													}
												],
												"src": "12839:349:13"
											},
											{
												"body": {
													"nativeSrc": "13300:115:13",
													"nodeType": "YulBlock",
													"src": "13300:115:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13322:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13322:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13330:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13330:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13318:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13318:3:13"
																		},
																		"nativeSrc": "13318:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13318:14:13"
																	},
																	{
																		"hexValue": "455243313336333a206f6e5472616e736665725265636569766564206661696c",
																		"kind": "string",
																		"nativeSrc": "13334:34:13",
																		"nodeType": "YulLiteral",
																		"src": "13334:34:13",
																		"type": "",
																		"value": "ERC1363: onTransferReceived fail"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13311:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13311:6:13"
																},
																"nativeSrc": "13311:58:13",
																"nodeType": "YulFunctionCall",
																"src": "13311:58:13"
															},
															"nativeSrc": "13311:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "13311:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13390:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13390:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13398:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13398:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13386:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13386:3:13"
																		},
																		"nativeSrc": "13386:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13386:15:13"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nativeSrc": "13403:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13403:4:13",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13379:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13379:6:13"
																},
																"nativeSrc": "13379:29:13",
																"nodeType": "YulFunctionCall",
																"src": "13379:29:13"
															},
															"nativeSrc": "13379:29:13",
															"nodeType": "YulExpressionStatement",
															"src": "13379:29:13"
														}
													]
												},
												"name": "store_literal_in_memory_2d6ba6a21b441acbb28fc61d7d2718aa2ce0e43522a0a02e0ab6d7ec526529d5",
												"nativeSrc": "13194:221:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13292:6:13",
														"nodeType": "YulTypedName",
														"src": "13292:6:13",
														"type": ""
													}
												],
												"src": "13194:221:13"
											},
											{
												"body": {
													"nativeSrc": "13567:220:13",
													"nodeType": "YulBlock",
													"src": "13567:220:13",
													"statements": [
														{
															"nativeSrc": "13577:74:13",
															"nodeType": "YulAssignment",
															"src": "13577:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13643:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13643:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13648:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13648:2:13",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13584:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "13584:58:13"
																},
																"nativeSrc": "13584:67:13",
																"nodeType": "YulFunctionCall",
																"src": "13584:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13577:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13577:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13749:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13749:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2d6ba6a21b441acbb28fc61d7d2718aa2ce0e43522a0a02e0ab6d7ec526529d5",
																	"nativeSrc": "13660:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "13660:88:13"
																},
																"nativeSrc": "13660:93:13",
																"nodeType": "YulFunctionCall",
																"src": "13660:93:13"
															},
															"nativeSrc": "13660:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "13660:93:13"
														},
														{
															"nativeSrc": "13762:19:13",
															"nodeType": "YulAssignment",
															"src": "13762:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13773:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13773:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13778:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13778:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13769:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13769:3:13"
																},
																"nativeSrc": "13769:12:13",
																"nodeType": "YulFunctionCall",
																"src": "13769:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13762:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13762:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2d6ba6a21b441acbb28fc61d7d2718aa2ce0e43522a0a02e0ab6d7ec526529d5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13421:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13555:3:13",
														"nodeType": "YulTypedName",
														"src": "13555:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13563:3:13",
														"nodeType": "YulTypedName",
														"src": "13563:3:13",
														"type": ""
													}
												],
												"src": "13421:366:13"
											},
											{
												"body": {
													"nativeSrc": "13964:248:13",
													"nodeType": "YulBlock",
													"src": "13964:248:13",
													"statements": [
														{
															"nativeSrc": "13974:26:13",
															"nodeType": "YulAssignment",
															"src": "13974:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13986:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13986:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13997:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13997:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13982:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13982:3:13"
																},
																"nativeSrc": "13982:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13982:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13974:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13974:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14021:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14021:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14032:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14032:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14017:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14017:3:13"
																		},
																		"nativeSrc": "14017:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14017:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14040:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "14040:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14046:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14046:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14036:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14036:3:13"
																		},
																		"nativeSrc": "14036:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14036:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14010:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14010:6:13"
																},
																"nativeSrc": "14010:47:13",
																"nodeType": "YulFunctionCall",
																"src": "14010:47:13"
															},
															"nativeSrc": "14010:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "14010:47:13"
														},
														{
															"nativeSrc": "14066:139:13",
															"nodeType": "YulAssignment",
															"src": "14066:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14200:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "14200:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2d6ba6a21b441acbb28fc61d7d2718aa2ce0e43522a0a02e0ab6d7ec526529d5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14074:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "14074:124:13"
																},
																"nativeSrc": "14074:131:13",
																"nodeType": "YulFunctionCall",
																"src": "14074:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14066:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14066:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2d6ba6a21b441acbb28fc61d7d2718aa2ce0e43522a0a02e0ab6d7ec526529d5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13793:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13944:9:13",
														"nodeType": "YulTypedName",
														"src": "13944:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13959:4:13",
														"nodeType": "YulTypedName",
														"src": "13959:4:13",
														"type": ""
													}
												],
												"src": "13793:419:13"
											},
											{
												"body": {
													"nativeSrc": "14246:152:13",
													"nodeType": "YulBlock",
													"src": "14246:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14263:1:13",
																		"nodeType": "YulLiteral",
																		"src": "14263:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14266:77:13",
																		"nodeType": "YulLiteral",
																		"src": "14266:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14256:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14256:6:13"
																},
																"nativeSrc": "14256:88:13",
																"nodeType": "YulFunctionCall",
																"src": "14256:88:13"
															},
															"nativeSrc": "14256:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "14256:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14360:1:13",
																		"nodeType": "YulLiteral",
																		"src": "14360:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14363:4:13",
																		"nodeType": "YulLiteral",
																		"src": "14363:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14353:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14353:6:13"
																},
																"nativeSrc": "14353:15:13",
																"nodeType": "YulFunctionCall",
																"src": "14353:15:13"
															},
															"nativeSrc": "14353:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "14353:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14384:1:13",
																		"nodeType": "YulLiteral",
																		"src": "14384:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14387:4:13",
																		"nodeType": "YulLiteral",
																		"src": "14387:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14377:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14377:6:13"
																},
																"nativeSrc": "14377:15:13",
																"nodeType": "YulFunctionCall",
																"src": "14377:15:13"
															},
															"nativeSrc": "14377:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "14377:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "14218:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "14218:180:13"
											},
											{
												"body": {
													"nativeSrc": "14448:147:13",
													"nodeType": "YulBlock",
													"src": "14448:147:13",
													"statements": [
														{
															"nativeSrc": "14458:25:13",
															"nodeType": "YulAssignment",
															"src": "14458:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14481:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14481:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14463:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "14463:17:13"
																},
																"nativeSrc": "14463:20:13",
																"nodeType": "YulFunctionCall",
																"src": "14463:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14458:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "14458:1:13"
																}
															]
														},
														{
															"nativeSrc": "14492:25:13",
															"nodeType": "YulAssignment",
															"src": "14492:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14515:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14515:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14497:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "14497:17:13"
																},
																"nativeSrc": "14497:20:13",
																"nodeType": "YulFunctionCall",
																"src": "14497:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14492:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "14492:1:13"
																}
															]
														},
														{
															"nativeSrc": "14526:16:13",
															"nodeType": "YulAssignment",
															"src": "14526:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14537:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14537:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14540:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14540:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14533:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14533:3:13"
																},
																"nativeSrc": "14533:9:13",
																"nodeType": "YulFunctionCall",
																"src": "14533:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14526:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14526:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14566:22:13",
																"nodeType": "YulBlock",
																"src": "14566:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14568:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "14568:16:13"
																			},
																			"nativeSrc": "14568:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14568:18:13"
																		},
																		"nativeSrc": "14568:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "14568:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14558:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14558:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14561:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14561:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14555:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "14555:2:13"
																},
																"nativeSrc": "14555:10:13",
																"nodeType": "YulFunctionCall",
																"src": "14555:10:13"
															},
															"nativeSrc": "14552:36:13",
															"nodeType": "YulIf",
															"src": "14552:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14404:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14435:1:13",
														"nodeType": "YulTypedName",
														"src": "14435:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14438:1:13",
														"nodeType": "YulTypedName",
														"src": "14438:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14444:3:13",
														"nodeType": "YulTypedName",
														"src": "14444:3:13",
														"type": ""
													}
												],
												"src": "14404:191:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_767d08b4043dcc0a72fe6da23c3e15169075e0c3845c64dad35d2bf3849edad9(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1363: _checkAndCallTransfer f\")\n\n        mstore(add(memPtr, 32), \"ailed\")\n\n    }\n\n    function abi_encode_t_stringliteral_767d08b4043dcc0a72fe6da23c3e15169075e0c3845c64dad35d2bf3849edad9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_767d08b4043dcc0a72fe6da23c3e15169075e0c3845c64dad35d2bf3849edad9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_767d08b4043dcc0a72fe6da23c3e15169075e0c3845c64dad35d2bf3849edad9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_767d08b4043dcc0a72fe6da23c3e15169075e0c3845c64dad35d2bf3849edad9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_2d6ba6a21b441acbb28fc61d7d2718aa2ce0e43522a0a02e0ab6d7ec526529d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1363: onTransferReceived fail\")\n\n        mstore(add(memPtr, 32), \"ed\")\n\n    }\n\n    function abi_encode_t_stringliteral_2d6ba6a21b441acbb28fc61d7d2718aa2ce0e43522a0a02e0ab6d7ec526529d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_2d6ba6a21b441acbb28fc61d7d2718aa2ce0e43522a0a02e0ab6d7ec526529d5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2d6ba6a21b441acbb28fc61d7d2718aa2ce0e43522a0a02e0ab6d7ec526529d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2d6ba6a21b441acbb28fc61d7d2718aa2ce0e43522a0a02e0ab6d7ec526529d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4000AEA0 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC1D34B89 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC1D34B89 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0xD8FBE994 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x38A JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x4000AEA0 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2CA JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x3177029F EQ PUSH2 0x21C JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x1296EE62 EQ PUSH2 0x180 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xE28 JUMP JUMPDEST PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0xFF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x1009 JUMP JUMPDEST PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x1074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x236 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x10EE JUMP JUMPDEST PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x115F JUMP JUMPDEST PUSH2 0x571 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0xFF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B4 PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x118A JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x344 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x10EE JUMP JUMPDEST PUSH2 0x676 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x351 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x374 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x1009 JUMP JUMPDEST PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0xE6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x120E JUMP JUMPDEST PUSH2 0x68F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0xFF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3D3 SWAP1 PUSH2 0x1279 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3FF SWAP1 PUSH2 0x1279 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x44A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x421 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x44A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x42D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x45E PUSH2 0x711 JUMP JUMPDEST SWAP1 POP PUSH2 0x46B DUP2 DUP6 DUP6 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x494 PUSH2 0x711 JUMP JUMPDEST SWAP1 POP PUSH2 0x4A1 DUP6 DUP3 DUP6 PUSH2 0x72A JUMP JUMPDEST PUSH2 0x4AC DUP6 DUP6 DUP6 PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4D6 DUP6 DUP6 PUSH2 0x646 JUMP JUMPDEST POP PUSH2 0x526 CALLER DUP7 DUP7 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x8AD JUMP JUMPDEST PUSH2 0x565 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55C SWAP1 PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5C5 SWAP1 PUSH2 0x1279 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5F1 SWAP1 PUSH2 0x1279 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x63C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x613 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x63C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x61F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x650 PUSH2 0x711 JUMP JUMPDEST SWAP1 POP PUSH2 0x65D DUP2 DUP6 DUP6 PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x725 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x9E3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x735 DUP5 DUP5 PUSH2 0x68F JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x7B7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7A8 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B6 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x9E3 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x82D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x824 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x89D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x894 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A8 DUP4 DUP4 DUP4 PUSH2 0xBB2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x9D6 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x88A7CA5C CALLER DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x947 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x944 SWAP2 SWAP1 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x986 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97D SWAP1 PUSH2 0x14DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x88A7CA5C PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x9DB JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA53 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4A SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABA SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xBAC JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xBA3 SWAP2 SWAP1 PUSH2 0xFF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC02 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBF6 SWAP2 SWAP1 PUSH2 0x152A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCD0 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC8B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC82 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD17 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD61 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xDBE SWAP2 SWAP1 PUSH2 0xFF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE07 DUP2 PUSH2 0xDD3 JUMP JUMPDEST DUP2 EQ PUSH2 0xE11 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE22 DUP2 PUSH2 0xDFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE3D JUMPI PUSH2 0xE3C PUSH2 0xDCB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE4A DUP5 DUP3 DUP6 ADD PUSH2 0xE14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE67 DUP2 PUSH2 0xE53 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE80 PUSH0 DUP4 ADD DUP5 PUSH2 0xE5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEC8 DUP3 PUSH2 0xE86 JUMP JUMPDEST PUSH2 0xED2 DUP2 DUP6 PUSH2 0xE90 JUMP JUMPDEST SWAP4 POP PUSH2 0xEE2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEA0 JUMP JUMPDEST PUSH2 0xEEB DUP2 PUSH2 0xEAE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF0E DUP2 DUP5 PUSH2 0xEBE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF3F DUP3 PUSH2 0xF16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF4F DUP2 PUSH2 0xF35 JUMP JUMPDEST DUP2 EQ PUSH2 0xF59 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF6A DUP2 PUSH2 0xF46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF82 DUP2 PUSH2 0xF70 JUMP JUMPDEST DUP2 EQ PUSH2 0xF8C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF9D DUP2 PUSH2 0xF79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFB9 JUMPI PUSH2 0xFB8 PUSH2 0xDCB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFC6 DUP6 DUP3 DUP7 ADD PUSH2 0xF5C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFD7 DUP6 DUP3 DUP7 ADD PUSH2 0xF8F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xFEA DUP2 PUSH2 0xF70 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1003 PUSH0 DUP4 ADD DUP5 PUSH2 0xFE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1020 JUMPI PUSH2 0x101F PUSH2 0xDCB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x102D DUP7 DUP3 DUP8 ADD PUSH2 0xF5C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x103E DUP7 DUP3 DUP8 ADD PUSH2 0xF5C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x104F DUP7 DUP3 DUP8 ADD PUSH2 0xF8F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x106E DUP2 PUSH2 0x1059 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1087 PUSH0 DUP4 ADD DUP5 PUSH2 0x1065 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x10AE JUMPI PUSH2 0x10AD PUSH2 0x108D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10CB JUMPI PUSH2 0x10CA PUSH2 0x1091 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x10E7 JUMPI PUSH2 0x10E6 PUSH2 0x1095 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1106 JUMPI PUSH2 0x1105 PUSH2 0xDCB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1113 DUP8 DUP3 DUP9 ADD PUSH2 0xF5C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1124 DUP8 DUP3 DUP9 ADD PUSH2 0xF8F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1145 JUMPI PUSH2 0x1144 PUSH2 0xDCF JUMP JUMPDEST JUMPDEST PUSH2 0x1151 DUP8 DUP3 DUP9 ADD PUSH2 0x1099 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1174 JUMPI PUSH2 0x1173 PUSH2 0xDCB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1181 DUP5 DUP3 DUP6 ADD PUSH2 0xF5C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x11A3 JUMPI PUSH2 0x11A2 PUSH2 0xDCB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11B0 DUP9 DUP3 DUP10 ADD PUSH2 0xF5C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x11C1 DUP9 DUP3 DUP10 ADD PUSH2 0xF5C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x11D2 DUP9 DUP3 DUP10 ADD PUSH2 0xF8F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11F3 JUMPI PUSH2 0x11F2 PUSH2 0xDCF JUMP JUMPDEST JUMPDEST PUSH2 0x11FF DUP9 DUP3 DUP10 ADD PUSH2 0x1099 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1224 JUMPI PUSH2 0x1223 PUSH2 0xDCB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1231 DUP6 DUP3 DUP7 ADD PUSH2 0xF5C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1242 DUP6 DUP3 DUP7 ADD PUSH2 0xF5C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1290 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x12A3 JUMPI PUSH2 0x12A2 PUSH2 0x124C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313336333A205F636865636B416E6443616C6C5472616E736665722066 PUSH0 DUP3 ADD MSTORE PUSH32 0x61696C6564000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1303 PUSH1 0x25 DUP4 PUSH2 0xE90 JUMP JUMPDEST SWAP2 POP PUSH2 0x130E DUP3 PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1330 DUP2 PUSH2 0x12F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1340 DUP2 PUSH2 0xF35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1359 PUSH0 DUP4 ADD DUP7 PUSH2 0x1337 JUMP JUMPDEST PUSH2 0x1366 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xFE1 JUMP JUMPDEST PUSH2 0x1373 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xFE1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x138E PUSH0 DUP4 ADD DUP5 PUSH2 0x1337 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13B8 DUP3 PUSH2 0x1394 JUMP JUMPDEST PUSH2 0x13C2 DUP2 DUP6 PUSH2 0x139E JUMP JUMPDEST SWAP4 POP PUSH2 0x13D2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEA0 JUMP JUMPDEST PUSH2 0x13DB DUP2 PUSH2 0xEAE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x13F9 PUSH0 DUP4 ADD DUP8 PUSH2 0x1337 JUMP JUMPDEST PUSH2 0x1406 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1337 JUMP JUMPDEST PUSH2 0x1413 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xFE1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1425 DUP2 DUP5 PUSH2 0x13AE JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x143E DUP2 PUSH2 0xDFE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1459 JUMPI PUSH2 0x1458 PUSH2 0xDCB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1466 DUP5 DUP3 DUP6 ADD PUSH2 0x1430 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455243313336333A206F6E5472616E736665725265636569766564206661696C PUSH0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14C9 PUSH1 0x22 DUP4 PUSH2 0xE90 JUMP JUMPDEST SWAP2 POP PUSH2 0x14D4 DUP3 PUSH2 0x146F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14F6 DUP2 PUSH2 0x14BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1534 DUP3 PUSH2 0xF70 JUMP JUMPDEST SWAP2 POP PUSH2 0x153F DUP4 PUSH2 0xF70 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1557 JUMPI PUSH2 0x1556 PUSH2 0x14FD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xA6 0xDA 0xDE SWAP8 0xDE SWAP8 GT SWAP7 0xC3 JUMPDEST PUSH4 0xB5B7C13A 0xCB JUMP 0xC2 0xBC SWAP1 PUSH29 0xAEAB34061A7082E9A11E64736F6C634300081C00330000000000000000 ",
							"sourceMap": "387:2009:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2204:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;576:118:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1926:123:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;729:297;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:116:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3296:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1763:157:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2055:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1621:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2204:113:12;2283:4;2306;2299:11;;2204:113;;;:::o;1760:89:5:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;576:118:12:-;660:4;683;676:11;;576:118;;;;:::o;2830:97:5:-;2882:7;2908:12;;2901:19;;2830:97;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;1926:123:12:-;2015:4;2038;2031:11;;1926:123;;;;:::o;729:297::-;829:4;845:19;854:2;858:5;845:8;:19::i;:::-;;906:50;928:10;940:2;944:5;951:4;;906:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:21;:50::i;:::-;898:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;1015:4;1008:11;;729:297;;;;;;:::o;2985:116:5:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;1962:93::-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3296:178::-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;1763:157:12:-;1886:4;1909;1902:11;;1763:157;;;;;;;:::o;2055:143::-;2164:4;2187;2180:11;;2055:143;;;;;;:::o;1621:136::-;1723:4;1746;1739:11;;1621:136;;;;;:::o;3532:140:5:-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;8707:128:5:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;1082:533:12:-;1191:4;1228:1;1211:2;:14;;;:18;1207:381;;;1322:2;1305:39;;;1345:10;1357:4;1363:5;1370:4;1305:70;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1301:277;;1519:44;;;;;;;;;;:::i;:::-;;;;;;;;1301:277;1435:44;;;1425:54;;;:6;:54;;;;1418:61;;;;;1207:381;1604:4;1597:11;;1082:533;;;;;;;:::o;9682:432:5:-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;88:117:13:-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:126::-;2790:7;2830:42;2823:5;2819:54;2808:65;;2753:126;;;:::o;2885:96::-;2922:7;2951:24;2969:5;2951:24;:::i;:::-;2940:35;;2885:96;;;:::o;2987:122::-;3060:24;3078:5;3060:24;:::i;:::-;3053:5;3050:35;3040:63;;3099:1;3096;3089:12;3040:63;2987:122;:::o;3115:139::-;3161:5;3199:6;3186:20;3177:29;;3215:33;3242:5;3215:33;:::i;:::-;3115:139;;;;:::o;3260:77::-;3297:7;3326:5;3315:16;;3260:77;;;:::o;3343:122::-;3416:24;3434:5;3416:24;:::i;:::-;3409:5;3406:35;3396:63;;3455:1;3452;3445:12;3396:63;3343:122;:::o;3471:139::-;3517:5;3555:6;3542:20;3533:29;;3571:33;3598:5;3571:33;:::i;:::-;3471:139;;;;:::o;3616:474::-;3684:6;3692;3741:2;3729:9;3720:7;3716:23;3712:32;3709:119;;;3747:79;;:::i;:::-;3709:119;3867:1;3892:53;3937:7;3928:6;3917:9;3913:22;3892:53;:::i;:::-;3882:63;;3838:117;3994:2;4020:53;4065:7;4056:6;4045:9;4041:22;4020:53;:::i;:::-;4010:63;;3965:118;3616:474;;;;;:::o;4096:118::-;4183:24;4201:5;4183:24;:::i;:::-;4178:3;4171:37;4096:118;;:::o;4220:222::-;4313:4;4351:2;4340:9;4336:18;4328:26;;4364:71;4432:1;4421:9;4417:17;4408:6;4364:71;:::i;:::-;4220:222;;;;:::o;4448:619::-;4525:6;4533;4541;4590:2;4578:9;4569:7;4565:23;4561:32;4558:119;;;4596:79;;:::i;:::-;4558:119;4716:1;4741:53;4786:7;4777:6;4766:9;4762:22;4741:53;:::i;:::-;4731:63;;4687:117;4843:2;4869:53;4914:7;4905:6;4894:9;4890:22;4869:53;:::i;:::-;4859:63;;4814:118;4971:2;4997:53;5042:7;5033:6;5022:9;5018:22;4997:53;:::i;:::-;4987:63;;4942:118;4448:619;;;;;:::o;5073:86::-;5108:7;5148:4;5141:5;5137:16;5126:27;;5073:86;;;:::o;5165:112::-;5248:22;5264:5;5248:22;:::i;:::-;5243:3;5236:35;5165:112;;:::o;5283:214::-;5372:4;5410:2;5399:9;5395:18;5387:26;;5423:67;5487:1;5476:9;5472:17;5463:6;5423:67;:::i;:::-;5283:214;;;;:::o;5503:117::-;5612:1;5609;5602:12;5626:117;5735:1;5732;5725:12;5749:117;5858:1;5855;5848:12;5885:552;5942:8;5952:6;6002:3;5995:4;5987:6;5983:17;5979:27;5969:122;;6010:79;;:::i;:::-;5969:122;6123:6;6110:20;6100:30;;6153:18;6145:6;6142:30;6139:117;;;6175:79;;:::i;:::-;6139:117;6289:4;6281:6;6277:17;6265:29;;6343:3;6335:4;6327:6;6323:17;6313:8;6309:32;6306:41;6303:128;;;6350:79;;:::i;:::-;6303:128;5885:552;;;;;:::o;6443:817::-;6531:6;6539;6547;6555;6604:2;6592:9;6583:7;6579:23;6575:32;6572:119;;;6610:79;;:::i;:::-;6572:119;6730:1;6755:53;6800:7;6791:6;6780:9;6776:22;6755:53;:::i;:::-;6745:63;;6701:117;6857:2;6883:53;6928:7;6919:6;6908:9;6904:22;6883:53;:::i;:::-;6873:63;;6828:118;7013:2;7002:9;6998:18;6985:32;7044:18;7036:6;7033:30;7030:117;;;7066:79;;:::i;:::-;7030:117;7179:64;7235:7;7226:6;7215:9;7211:22;7179:64;:::i;:::-;7161:82;;;;6956:297;6443:817;;;;;;;:::o;7266:329::-;7325:6;7374:2;7362:9;7353:7;7349:23;7345:32;7342:119;;;7380:79;;:::i;:::-;7342:119;7500:1;7525:53;7570:7;7561:6;7550:9;7546:22;7525:53;:::i;:::-;7515:63;;7471:117;7266:329;;;;:::o;7601:963::-;7698:6;7706;7714;7722;7730;7779:3;7767:9;7758:7;7754:23;7750:33;7747:120;;;7786:79;;:::i;:::-;7747:120;7906:1;7931:53;7976:7;7967:6;7956:9;7952:22;7931:53;:::i;:::-;7921:63;;7877:117;8033:2;8059:53;8104:7;8095:6;8084:9;8080:22;8059:53;:::i;:::-;8049:63;;8004:118;8161:2;8187:53;8232:7;8223:6;8212:9;8208:22;8187:53;:::i;:::-;8177:63;;8132:118;8317:2;8306:9;8302:18;8289:32;8348:18;8340:6;8337:30;8334:117;;;8370:79;;:::i;:::-;8334:117;8483:64;8539:7;8530:6;8519:9;8515:22;8483:64;:::i;:::-;8465:82;;;;8260:297;7601:963;;;;;;;;:::o;8570:474::-;8638:6;8646;8695:2;8683:9;8674:7;8670:23;8666:32;8663:119;;;8701:79;;:::i;:::-;8663:119;8821:1;8846:53;8891:7;8882:6;8871:9;8867:22;8846:53;:::i;:::-;8836:63;;8792:117;8948:2;8974:53;9019:7;9010:6;8999:9;8995:22;8974:53;:::i;:::-;8964:63;;8919:118;8570:474;;;;;:::o;9050:180::-;9098:77;9095:1;9088:88;9195:4;9192:1;9185:15;9219:4;9216:1;9209:15;9236:320;9280:6;9317:1;9311:4;9307:12;9297:22;;9364:1;9358:4;9354:12;9385:18;9375:81;;9441:4;9433:6;9429:17;9419:27;;9375:81;9503:2;9495:6;9492:14;9472:18;9469:38;9466:84;;9522:18;;:::i;:::-;9466:84;9287:269;9236:320;;;:::o;9562:224::-;9702:34;9698:1;9690:6;9686:14;9679:58;9771:7;9766:2;9758:6;9754:15;9747:32;9562:224;:::o;9792:366::-;9934:3;9955:67;10019:2;10014:3;9955:67;:::i;:::-;9948:74;;10031:93;10120:3;10031:93;:::i;:::-;10149:2;10144:3;10140:12;10133:19;;9792:366;;;:::o;10164:419::-;10330:4;10368:2;10357:9;10353:18;10345:26;;10417:9;10411:4;10407:20;10403:1;10392:9;10388:17;10381:47;10445:131;10571:4;10445:131;:::i;:::-;10437:139;;10164:419;;;:::o;10589:118::-;10676:24;10694:5;10676:24;:::i;:::-;10671:3;10664:37;10589:118;;:::o;10713:442::-;10862:4;10900:2;10889:9;10885:18;10877:26;;10913:71;10981:1;10970:9;10966:17;10957:6;10913:71;:::i;:::-;10994:72;11062:2;11051:9;11047:18;11038:6;10994:72;:::i;:::-;11076;11144:2;11133:9;11129:18;11120:6;11076:72;:::i;:::-;10713:442;;;;;;:::o;11161:222::-;11254:4;11292:2;11281:9;11277:18;11269:26;;11305:71;11373:1;11362:9;11358:17;11349:6;11305:71;:::i;:::-;11161:222;;;;:::o;11389:98::-;11440:6;11474:5;11468:12;11458:22;;11389:98;;;:::o;11493:168::-;11576:11;11610:6;11605:3;11598:19;11650:4;11645:3;11641:14;11626:29;;11493:168;;;;:::o;11667:373::-;11753:3;11781:38;11813:5;11781:38;:::i;:::-;11835:70;11898:6;11893:3;11835:70;:::i;:::-;11828:77;;11914:65;11972:6;11967:3;11960:4;11953:5;11949:16;11914:65;:::i;:::-;12004:29;12026:6;12004:29;:::i;:::-;11999:3;11995:39;11988:46;;11757:283;11667:373;;;;:::o;12046:640::-;12241:4;12279:3;12268:9;12264:19;12256:27;;12293:71;12361:1;12350:9;12346:17;12337:6;12293:71;:::i;:::-;12374:72;12442:2;12431:9;12427:18;12418:6;12374:72;:::i;:::-;12456;12524:2;12513:9;12509:18;12500:6;12456:72;:::i;:::-;12575:9;12569:4;12565:20;12560:2;12549:9;12545:18;12538:48;12603:76;12674:4;12665:6;12603:76;:::i;:::-;12595:84;;12046:640;;;;;;;:::o;12692:141::-;12748:5;12779:6;12773:13;12764:22;;12795:32;12821:5;12795:32;:::i;:::-;12692:141;;;;:::o;12839:349::-;12908:6;12957:2;12945:9;12936:7;12932:23;12928:32;12925:119;;;12963:79;;:::i;:::-;12925:119;13083:1;13108:63;13163:7;13154:6;13143:9;13139:22;13108:63;:::i;:::-;13098:73;;13054:127;12839:349;;;;:::o;13194:221::-;13334:34;13330:1;13322:6;13318:14;13311:58;13403:4;13398:2;13390:6;13386:15;13379:29;13194:221;:::o;13421:366::-;13563:3;13584:67;13648:2;13643:3;13584:67;:::i;:::-;13577:74;;13660:93;13749:3;13660:93;:::i;:::-;13778:2;13773:3;13769:12;13762:19;;13421:366;;;:::o;13793:419::-;13959:4;13997:2;13986:9;13982:18;13974:26;;14046:9;14040:4;14036:20;14032:1;14021:9;14017:17;14010:47;14074:131;14200:4;14074:131;:::i;:::-;14066:139;;13793:419;;;:::o;14218:180::-;14266:77;14263:1;14256:88;14363:4;14360:1;14353:15;14387:4;14384:1;14377:15;14404:191;14444:3;14463:20;14481:1;14463:20;:::i;:::-;14458:25;;14497:20;14515:1;14497:20;:::i;:::-;14492:25;;14540:1;14537;14533:9;14526:16;;14561:3;14558:1;14555:10;14552:36;;;14568:18;;:::i;:::-;14552:36;14404:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1104600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"approveAndCall(address,uint256)": "906",
								"approveAndCall(address,uint256,bytes)": "1098",
								"balanceOf(address)": "2873",
								"decimals()": "405",
								"name()": "infinite",
								"supportsInterface(bytes4)": "629",
								"symbol()": "infinite",
								"totalSupply()": "2455",
								"transfer(address,uint256)": "infinite",
								"transferAndCall(address,uint256)": "907",
								"transferAndCall(address,uint256,bytes)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferFromAndCall(address,address,uint256)": "infinite",
								"transferFromAndCall(address,address,uint256,bytes)": "infinite"
							},
							"internal": {
								"_checkAndCallTransfer(address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 387,
									"end": 2396,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 387,
									"end": 2396,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 387,
									"end": 2396,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 461,
									"end": 569,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 461,
									"end": 569,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 461,
									"end": 569,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 461,
									"end": 569,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 461,
									"end": 569,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 461,
									"end": 569,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 461,
									"end": 569,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 461,
									"end": 569,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 461,
									"end": 569,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 461,
									"end": 569,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 461,
									"end": 569,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 461,
									"end": 569,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 461,
									"end": 569,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 461,
									"end": 569,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 461,
									"end": 569,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 461,
									"end": 569,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 461,
									"end": 569,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 461,
									"end": 569,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 461,
									"end": 569,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 461,
									"end": 569,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 461,
									"end": 569,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 461,
									"end": 569,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 461,
									"end": 569,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 461,
									"end": 569,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 461,
									"end": 569,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 461,
									"end": 569,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 461,
									"end": 569,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 461,
									"end": 569,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 461,
									"end": 569,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 461,
									"end": 569,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 461,
									"end": 569,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 461,
									"end": 569,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 461,
									"end": 569,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 461,
									"end": 569,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 461,
									"end": 569,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "4D79546F6B656E00000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 5,
									"value": "4D544B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 530,
									"end": 562,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 536,
									"end": 546,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 548,
									"end": 561,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 530,
									"end": 535,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 530,
									"end": 535,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 530,
									"end": 535,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 530,
									"end": 562,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 530,
									"end": 562,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 530,
									"end": 562,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 530,
									"end": 562,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 530,
									"end": 562,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 461,
									"end": 569,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 387,
									"end": 2396,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 387,
									"end": 2396,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7528,
									"end": 7529,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 7509,
									"end": 7516,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 5,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 7553,
									"end": 7585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 7621,
									"end": 7622,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7625,
									"end": 7632,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 7605,
									"end": 7640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7439,
									"end": 7647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6094,
									"end": 6095,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6078,
									"end": 6082,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6266,
									"end": 6285,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6335,
									"end": 6340,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 6392,
									"end": 6396,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6411,
									"end": 6416,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 5,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 6367,
									"end": 6417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6584,
									"end": 6589,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6570,
									"end": 6581,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 6552,
									"end": 6561,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6562,
									"end": 6566,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6252,
									"end": 6614,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6642,
									"end": 6643,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6628,
									"end": 6630,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 6807,
									"end": 6812,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7019,
									"end": 7024,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7002,
									"end": 7011,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7012,
									"end": 7014,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7079,
									"end": 7081,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 7073,
									"end": 7077,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 5,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7083,
									"end": 7088,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 7064,
									"end": 7089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "LOG3",
									"source": 5
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5989,
									"end": 7096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 819,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 964,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 694,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1103,
									"end": 1109,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1137,
									"end": 1142,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1131,
									"end": 1143,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1121,
									"end": 1143,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1121,
									"end": 1143,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1051,
									"end": 1150,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1156,
									"end": 1336,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 1156,
									"end": 1336,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1204,
									"end": 1281,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1201,
									"end": 1202,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1194,
									"end": 1282,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1301,
									"end": 1305,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1298,
									"end": 1299,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1291,
									"end": 1306,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1325,
									"end": 1329,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1322,
									"end": 1323,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1315,
									"end": 1330,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1342,
									"end": 1522,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1342,
									"end": 1522,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1390,
									"end": 1467,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1387,
									"end": 1388,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1380,
									"end": 1468,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1487,
									"end": 1491,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1477,
									"end": 1492,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1511,
									"end": 1515,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1516,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "tag",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1572,
									"end": 1578,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1609,
									"end": 1610,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 1603,
									"end": 1607,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1599,
									"end": 1611,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 1589,
									"end": 1611,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1589,
									"end": 1611,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1656,
									"end": 1657,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1650,
									"end": 1654,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1646,
									"end": 1658,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1677,
									"end": 1695,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1733,
									"end": 1737,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 1725,
									"end": 1731,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1721,
									"end": 1738,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1711,
									"end": 1738,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1711,
									"end": 1738,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "tag",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1795,
									"end": 1797,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1787,
									"end": 1793,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1784,
									"end": 1798,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1764,
									"end": 1782,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1761,
									"end": 1799,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1814,
									"end": 1832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "tag",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "tag",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1579,
									"end": 1848,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1528,
									"end": 1848,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "tag",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1903,
									"end": 1907,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1926,
									"end": 1929,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1918,
									"end": 1929,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1918,
									"end": 1929,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1949,
									"end": 1952,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 1947,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1939,
									"end": 1953,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1983,
									"end": 1987,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 1981,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 1962,
									"end": 1988,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1962,
									"end": 1988,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1854,
									"end": 1995,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2038,
									"end": 2044,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2085,
									"end": 2087,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2080,
									"end": 2082,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2073,
									"end": 2078,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2069,
									"end": 2083,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2065,
									"end": 2088,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 2055,
									"end": 2088,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2055,
									"end": 2088,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2001,
									"end": 2094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "tag",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2144,
									"end": 2152,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2194,
									"end": 2199,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2188,
									"end": 2192,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 2163,
									"end": 2200,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2163,
									"end": 2200,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2100,
									"end": 2207,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "tag",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2282,
									"end": 2288,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2332,
									"end": 2333,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 2320,
									"end": 2330,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2334,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 2385,
									"end": 2451,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2374,
									"end": 2383,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 2355,
									"end": 2452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "tag",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 2503,
									"end": 2511,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2492,
									"end": 2501,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 2473,
									"end": 2512,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "tag",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2461,
									"end": 2512,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 2461,
									"end": 2512,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2545,
									"end": 2549,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2541,
									"end": 2550,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 2534,
									"end": 2539,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2530,
									"end": 2551,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2521,
									"end": 2551,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 2521,
									"end": 2551,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2594,
									"end": 2598,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2584,
									"end": 2592,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2580,
									"end": 2599,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2573,
									"end": 2578,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2570,
									"end": 2600,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 2560,
									"end": 2600,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2560,
									"end": 2600,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2289,
									"end": 2606,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2289,
									"end": 2606,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2213,
									"end": 2606,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "tag",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2640,
									"end": 2643,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2661,
									"end": 2666,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2654,
									"end": 2666,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2654,
									"end": 2666,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2612,
									"end": 2672,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "tag",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2728,
									"end": 2737,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 2806,
									"end": 2811,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 2788,
									"end": 2812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "tag",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 2779,
									"end": 2813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "tag",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 2761,
									"end": 2814,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "tag",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2748,
									"end": 2814,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2748,
									"end": 2814,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2678,
									"end": 2820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "tag",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2869,
									"end": 2872,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2890,
									"end": 2895,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2883,
									"end": 2895,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2883,
									"end": 2895,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2826,
									"end": 2901,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "tag",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 3048,
									"end": 3055,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 3017,
									"end": 3056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "tag",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 3151,
									"end": 3167,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 3127,
									"end": 3168,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "tag",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3119,
									"end": 3125,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3112,
									"end": 3116,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3106,
									"end": 3117,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 3078,
									"end": 3169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "tag",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3072,
									"end": 3076,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3065,
									"end": 3170,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2983,
									"end": 3176,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2907,
									"end": 3176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "tag",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3227,
									"end": 3230,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3248,
									"end": 3249,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3241,
									"end": 3249,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3241,
									"end": 3249,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3182,
									"end": 3255,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "tag",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 3338,
									"end": 3370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "tag",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 3437,
									"end": 3443,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3429,
									"end": 3435,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3423,
									"end": 3427,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 3379,
									"end": 3444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "tag",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3314,
									"end": 3450,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3261,
									"end": 3450,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "tag",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "tag",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3536,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3526,
									"end": 3531,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3523,
									"end": 3537,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 3624,
									"end": 3625,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3617,
									"end": 3622,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 3587,
									"end": 3626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "tag",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3560,
									"end": 3561,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3553,
									"end": 3558,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3549,
									"end": 3562,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3540,
									"end": 3562,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3540,
									"end": 3562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "tag",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3456,
									"end": 3642,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "tag",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3749,
									"end": 3751,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 3744,
									"end": 3747,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3741,
									"end": 3752,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "109"
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "110"
								},
								{
									"begin": 3815,
									"end": 3820,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 3783,
									"end": 3821,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "tag",
									"source": 13,
									"value": "110"
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 3885,
									"end": 3895,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 3867,
									"end": 3896,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "tag",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3857,
									"end": 3865,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3853,
									"end": 3897,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4050,
									"end": 4052,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4038,
									"end": 4048,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4035,
									"end": 4053,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4071,
									"end": 4079,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4056,
									"end": 4079,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4056,
									"end": 4079,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "tag",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "113"
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 4168,
									"end": 4171,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 4150,
									"end": 4172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "tag",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4140,
									"end": 4148,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4136,
									"end": 4173,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4123,
									"end": 4134,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 4094,
									"end": 4174,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "tag",
									"source": 13,
									"value": "113"
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3753,
									"end": 4184,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3753,
									"end": 4184,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "tag",
									"source": 13,
									"value": "109"
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3648,
									"end": 4191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "tag",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4251,
									"end": 4259,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4301,
									"end": 4306,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4295,
									"end": 4299,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4291,
									"end": 4307,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 4270,
									"end": 4307,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4270,
									"end": 4307,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4197,
									"end": 4314,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "tag",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4364,
									"end": 4370,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 4445,
									"end": 4446,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4441,
									"end": 4447,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4433,
									"end": 4438,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4430,
									"end": 4431,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 4426,
									"end": 4439,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 4397,
									"end": 4448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "tag",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4393,
									"end": 4449,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4478,
									"end": 4482,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4472,
									"end": 4476,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4468,
									"end": 4483,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4371,
									"end": 4489,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4320,
									"end": 4489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "tag",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4570,
									"end": 4574,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 4741,
									"end": 4744,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4735,
									"end": 4739,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 4716,
									"end": 4745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "tag",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4708,
									"end": 4745,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4708,
									"end": 4745,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4778,
									"end": 4781,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4775,
									"end": 4776,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 4771,
									"end": 4782,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4765,
									"end": 4769,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4762,
									"end": 4783,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 4754,
									"end": 4783,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4754,
									"end": 4783,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4494,
									"end": 4789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "tag",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "121"
								},
								{
									"begin": 4944,
									"end": 4947,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 4911,
									"end": 4948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "tag",
									"source": 13,
									"value": "121"
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5013,
									"end": 5031,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5005,
									"end": 5011,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5002,
									"end": 5032,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 5035,
									"end": 5053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "tag",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "tag",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 5111,
									"end": 5115,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5105,
									"end": 5116,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 5079,
									"end": 5117,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "tag",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "125"
								},
								{
									"begin": 5224,
									"end": 5230,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5216,
									"end": 5222,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5210,
									"end": 5214,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 5164,
									"end": 5231,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "tag",
									"source": 13,
									"value": "125"
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5258,
									"end": 5259,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5282,
									"end": 5286,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5269,
									"end": 5286,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5269,
									"end": 5286,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5314,
									"end": 5316,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5306,
									"end": 5312,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5303,
									"end": 5317,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 5331,
									"end": 5332,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "127"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5988,
									"end": 5989,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6005,
									"end": 6011,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6054,
									"end": 6063,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6049,
									"end": 6052,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 6045,
									"end": 6064,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6039,
									"end": 6065,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 6030,
									"end": 6065,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6030,
									"end": 6065,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "tag",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 6165,
									"end": 6171,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 6158,
									"end": 6163,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 6105,
									"end": 6172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "tag",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6099,
									"end": 6103,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 6092,
									"end": 6173,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5961,
									"end": 6183,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "tag",
									"source": 13,
									"value": "127"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5378,
									"end": 5382,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5374,
									"end": 5383,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 5366,
									"end": 5372,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5362,
									"end": 5384,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 5412,
									"end": 5449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "tag",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5471,
									"end": 5472,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "tag",
									"source": 13,
									"value": "131"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5499,
									"end": 5506,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5496,
									"end": 5497,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5493,
									"end": 5507,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5578,
									"end": 5587,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5573,
									"end": 5576,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 5569,
									"end": 5588,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5563,
									"end": 5589,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5555,
									"end": 5561,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5548,
									"end": 5590,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5629,
									"end": 5630,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 5621,
									"end": 5627,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5617,
									"end": 5631,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5607,
									"end": 5631,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5607,
									"end": 5631,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5676,
									"end": 5678,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5665,
									"end": 5674,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5661,
									"end": 5679,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5648,
									"end": 5679,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 5648,
									"end": 5679,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5522,
									"end": 5526,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5519,
									"end": 5520,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5515,
									"end": 5527,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5510,
									"end": 5527,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5510,
									"end": 5527,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "131"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "tag",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5721,
									"end": 5727,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5712,
									"end": 5719,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5709,
									"end": 5728,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5779,
									"end": 5788,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5774,
									"end": 5777,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 5770,
									"end": 5789,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5764,
									"end": 5790,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "135"
								},
								{
									"begin": 5864,
									"end": 5868,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5856,
									"end": 5862,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 5852,
									"end": 5869,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5841,
									"end": 5850,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 5822,
									"end": 5870,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "tag",
									"source": 13,
									"value": "135"
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5814,
									"end": 5820,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5807,
									"end": 5871,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5729,
									"end": 5885,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "tag",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5931,
									"end": 5932,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 5927,
									"end": 5928,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 5919,
									"end": 5925,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 5915,
									"end": 5929,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 5911,
									"end": 5933,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5905,
									"end": 5909,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 5898,
									"end": 5934,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "tag",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4794,
									"end": 6189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "tag",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6232,
									"end": 6239,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6272,
									"end": 6314,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6265,
									"end": 6270,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6261,
									"end": 6315,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 6250,
									"end": 6315,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6250,
									"end": 6315,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6195,
									"end": 6321,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "tag",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6364,
									"end": 6371,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 6411,
									"end": 6416,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 6393,
									"end": 6417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "tag",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6382,
									"end": 6417,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6382,
									"end": 6417,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6327,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "140"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 13,
									"value": "140"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "142"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 13,
									"value": "142"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "tag",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6829,
									"end": 6906,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6826,
									"end": 6827,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6819,
									"end": 6907,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 6926,
									"end": 6930,
									"name": "PUSH",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 6923,
									"end": 6924,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 6916,
									"end": 6931,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 6950,
									"end": 6954,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 6947,
									"end": 6948,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6940,
									"end": 6955,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7007,
									"end": 7010,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "145"
								},
								{
									"begin": 7044,
									"end": 7045,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 7026,
									"end": 7046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "tag",
									"source": 13,
									"value": "145"
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7021,
									"end": 7046,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7021,
									"end": 7046,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "146"
								},
								{
									"begin": 7078,
									"end": 7079,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 7060,
									"end": 7080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "tag",
									"source": 13,
									"value": "146"
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7055,
									"end": 7080,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 7055,
									"end": 7080,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7103,
									"end": 7104,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7100,
									"end": 7101,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7096,
									"end": 7105,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7089,
									"end": 7105,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7089,
									"end": 7105,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7124,
									"end": 7127,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 7121,
									"end": 7122,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7118,
									"end": 7128,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "147"
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "148"
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 7131,
									"end": 7149,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "tag",
									"source": 13,
									"value": "148"
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "tag",
									"source": 13,
									"value": "147"
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6967,
									"end": 7158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "tag",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "150"
								},
								{
									"begin": 7269,
									"end": 7274,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 7251,
									"end": 7275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "tag",
									"source": 13,
									"value": "150"
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7246,
									"end": 7249,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7239,
									"end": 7276,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7164,
									"end": 7282,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7437,
									"end": 7441,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7475,
									"end": 7477,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 7464,
									"end": 7473,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7460,
									"end": 7478,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7452,
									"end": 7478,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7452,
									"end": 7478,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "152"
								},
								{
									"begin": 7556,
									"end": 7557,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7545,
									"end": 7554,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7541,
									"end": 7558,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7532,
									"end": 7538,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 7488,
									"end": 7559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "tag",
									"source": 13,
									"value": "152"
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "153"
								},
								{
									"begin": 7637,
									"end": 7639,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 7626,
									"end": 7635,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7622,
									"end": 7640,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7613,
									"end": 7619,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 7569,
									"end": 7641,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "tag",
									"source": 13,
									"value": "153"
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "154"
								},
								{
									"begin": 7719,
									"end": 7721,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 7708,
									"end": 7717,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7704,
									"end": 7722,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7695,
									"end": 7701,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 7651,
									"end": 7723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "tag",
									"source": 13,
									"value": "154"
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7288,
									"end": 7730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7829,
									"end": 7833,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 7869,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 7856,
									"end": 7865,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7852,
									"end": 7870,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7844,
									"end": 7870,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7844,
									"end": 7870,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "156"
								},
								{
									"begin": 7948,
									"end": 7949,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7937,
									"end": 7946,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7933,
									"end": 7950,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7924,
									"end": 7930,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 7880,
									"end": 7951,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "tag",
									"source": 13,
									"value": "156"
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7736,
									"end": 7958,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 387,
									"end": 2396,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 387,
									"end": 2396,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 387,
									"end": 2396,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 387,
									"end": 2396,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 387,
									"end": 2396,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 387,
									"end": 2396,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 387,
									"end": 2396,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 387,
									"end": 2396,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 387,
									"end": 2396,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cea6dade97de971196c35b63b5b7c13acb56c2bc907caeab34061a7082e9a11e64736f6c634300081c0033",
									".code": [
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "4000AEA0"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "C1D34B89"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "C1D34B89"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "CAE9CA51"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "D8FBE994"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "DD62ED3E"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "4000AEA0"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "18160DDD"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "18160DDD"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "313CE567"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "3177029F"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "6FDDE03"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "1296EE62"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 2396,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2204,
											"end": 2317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 2204,
											"end": 2317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 2204,
											"end": 2317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 576,
											"end": 694,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 576,
											"end": 694,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 576,
											"end": 694,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 576,
											"end": 694,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 576,
											"end": 694,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 576,
											"end": 694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 576,
											"end": 694,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 576,
											"end": 694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 576,
											"end": 694,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 576,
											"end": 694,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 576,
											"end": 694,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 576,
											"end": 694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 576,
											"end": 694,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 576,
											"end": 694,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 1926,
											"end": 2049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 1926,
											"end": 2049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 1926,
											"end": 2049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 729,
											"end": 1026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 729,
											"end": 1026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 729,
											"end": 1026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 1763,
											"end": 1920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 1763,
											"end": 1920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 1763,
											"end": 1920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2055,
											"end": 2198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 2055,
											"end": 2198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 2055,
											"end": 2198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "tag",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 1621,
											"end": 1757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 1621,
											"end": 1757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 1621,
											"end": 1757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2283,
											"end": 2287,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2310,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2299,
											"end": 2310,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2299,
											"end": 2310,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 576,
											"end": 694,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 576,
											"end": 694,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 664,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 683,
											"end": 687,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 676,
											"end": 687,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 687,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 576,
											"end": 694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2015,
											"end": 2019,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2042,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2031,
											"end": 2042,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2031,
											"end": 2042,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1926,
											"end": 2049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 829,
											"end": 833,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 854,
											"end": 856,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 858,
											"end": 863,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 845,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 845,
											"end": 864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 845,
											"end": 864,
											"name": "tag",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 845,
											"end": 864,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 845,
											"end": 864,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 928,
											"end": 938,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 940,
											"end": 942,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 944,
											"end": 949,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 951,
											"end": 955,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 951,
											"end": 955,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 906,
											"end": 956,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 906,
											"end": 956,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 906,
											"end": 956,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 906,
											"end": 956,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 906,
											"end": 956,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 906,
											"end": 956,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 956,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 906,
											"end": 956,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 906,
											"end": 956,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 906,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 906,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 906,
											"end": 956,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 906,
											"end": 956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 898,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 898,
											"end": 998,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 898,
											"end": 998,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 898,
											"end": 998,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 898,
											"end": 998,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 898,
											"end": 998,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 898,
											"end": 998,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 898,
											"end": 998,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 898,
											"end": 998,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 898,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 898,
											"end": 998,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 898,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 898,
											"end": 998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 898,
											"end": 998,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 898,
											"end": 998,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 898,
											"end": 998,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 898,
											"end": 998,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 898,
											"end": 998,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 898,
											"end": 998,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 898,
											"end": 998,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 898,
											"end": 998,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 898,
											"end": 998,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 898,
											"end": 998,
											"name": "tag",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 898,
											"end": 998,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1015,
											"end": 1019,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1008,
											"end": 1019,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1008,
											"end": 1019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 729,
											"end": 1026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1886,
											"end": 1890,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1913,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1902,
											"end": 1913,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1902,
											"end": 1913,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1763,
											"end": 1920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2164,
											"end": 2168,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2191,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2180,
											"end": 2191,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2180,
											"end": 2191,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2055,
											"end": 2198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1723,
											"end": 1727,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1750,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1739,
											"end": 1750,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1739,
											"end": 1750,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 5,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 5,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 5,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1082,
											"end": 1615,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 1082,
											"end": 1615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1191,
											"end": 1195,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1229,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1213,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1211,
											"end": 1225,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1211,
											"end": 1225,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1211,
											"end": 1225,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 1211,
											"end": 1229,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 1588,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 1207,
											"end": 1588,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1344,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1305,
											"end": 1344,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1344,
											"name": "PUSH",
											"source": 12,
											"value": "88A7CA5C"
										},
										{
											"begin": 1345,
											"end": 1355,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1357,
											"end": 1361,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1368,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1370,
											"end": 1374,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 1305,
											"end": 1375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 1305,
											"end": 1375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "tag",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 1305,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1301,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 1301,
											"end": 1578,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1563,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1519,
											"end": 1563,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1563,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1519,
											"end": 1563,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1563,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1563,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1519,
											"end": 1563,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 1519,
											"end": 1563,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 1519,
											"end": 1563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1563,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 1519,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1563,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1519,
											"end": 1563,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1563,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1563,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1563,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1563,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1563,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1301,
											"end": 1578,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 1301,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1435,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "88A7CA5C"
										},
										{
											"begin": 1435,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1435,
											"end": 1479,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1425,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1425,
											"end": 1479,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1425,
											"end": 1479,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1425,
											"end": 1431,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1425,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1425,
											"end": 1479,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1425,
											"end": 1479,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1425,
											"end": 1479,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1418,
											"end": 1479,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1418,
											"end": 1479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1418,
											"end": 1479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1418,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 1418,
											"end": 1479,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1207,
											"end": 1588,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 1207,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1604,
											"end": 1608,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1597,
											"end": 1608,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 1608,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1082,
											"end": 1615,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 1082,
											"end": 1615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1082,
											"end": 1615,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1082,
											"end": 1615,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1082,
											"end": 1615,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1082,
											"end": 1615,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1082,
											"end": 1615,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1082,
											"end": 1615,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1082,
											"end": 1615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 5,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 5,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 5,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2872,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2823,
											"end": 2828,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2819,
											"end": 2873,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2922,
											"end": 2929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 2951,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "tag",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "tag",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 3078,
											"end": 3083,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 3060,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3053,
											"end": 3058,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3050,
											"end": 3085,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3100,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3101,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2987,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "tag",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3205,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3186,
											"end": 3206,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 3242,
											"end": 3247,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 3215,
											"end": 3248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "tag",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3304,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3331,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "tag",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 3434,
											"end": 3439,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 3416,
											"end": 3440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3409,
											"end": 3414,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3406,
											"end": 3441,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3455,
											"end": 3456,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3457,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3517,
											"end": 3522,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3561,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3542,
											"end": 3562,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 3598,
											"end": 3603,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 3571,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3698,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3738,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3716,
											"end": 3739,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3744,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 3747,
											"end": 3826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3867,
											"end": 3868,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 3937,
											"end": 3944,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 3934,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3917,
											"end": 3926,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3913,
											"end": 3935,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 3892,
											"end": 3945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3838,
											"end": 3955,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4056,
											"end": 4062,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4045,
											"end": 4054,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4041,
											"end": 4063,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 4020,
											"end": 4073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3965,
											"end": 4083,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "tag",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 4201,
											"end": 4206,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 4183,
											"end": 4207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "tag",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4178,
											"end": 4181,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4171,
											"end": 4208,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4353,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4340,
											"end": 4349,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4328,
											"end": 4354,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4328,
											"end": 4354,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 4432,
											"end": 4433,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4421,
											"end": 4430,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4417,
											"end": 4434,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4408,
											"end": 4414,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 4364,
											"end": 4435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "tag",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4525,
											"end": 4531,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4533,
											"end": 4539,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4541,
											"end": 4547,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4590,
											"end": 4592,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4578,
											"end": 4587,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4569,
											"end": 4576,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4565,
											"end": 4588,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4561,
											"end": 4593,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 4596,
											"end": 4675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4716,
											"end": 4717,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 4786,
											"end": 4793,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4783,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4766,
											"end": 4775,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4784,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 4741,
											"end": 4794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4731,
											"end": 4794,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4731,
											"end": 4794,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4687,
											"end": 4804,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 4914,
											"end": 4921,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4894,
											"end": 4903,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 4869,
											"end": 4922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4859,
											"end": 4922,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4859,
											"end": 4922,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4932,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 4973,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 5042,
											"end": 5049,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5033,
											"end": 5039,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5031,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 4997,
											"end": 5050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4987,
											"end": 5050,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4987,
											"end": 5050,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4942,
											"end": 5060,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 5067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5073,
											"end": 5159,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 5073,
											"end": 5159,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5108,
											"end": 5115,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5148,
											"end": 5152,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 5141,
											"end": 5146,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5137,
											"end": 5153,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5126,
											"end": 5153,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5126,
											"end": 5153,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5073,
											"end": 5159,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5073,
											"end": 5159,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5073,
											"end": 5159,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5073,
											"end": 5159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5165,
											"end": 5277,
											"name": "tag",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 5165,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5248,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 5264,
											"end": 5269,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5248,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 5248,
											"end": 5270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5248,
											"end": 5270,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 5248,
											"end": 5270,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5243,
											"end": 5246,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5236,
											"end": 5271,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5165,
											"end": 5277,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5165,
											"end": 5277,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5165,
											"end": 5277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5283,
											"end": 5497,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 5283,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5410,
											"end": 5412,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5399,
											"end": 5408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5395,
											"end": 5413,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5387,
											"end": 5413,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5387,
											"end": 5413,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5423,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 5487,
											"end": 5488,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5485,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5472,
											"end": 5489,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5469,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5423,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 5423,
											"end": 5490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5423,
											"end": 5490,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 5423,
											"end": 5490,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5283,
											"end": 5497,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5283,
											"end": 5497,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5283,
											"end": 5497,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5283,
											"end": 5497,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5283,
											"end": 5497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5503,
											"end": 5620,
											"name": "tag",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 5503,
											"end": 5620,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5612,
											"end": 5613,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5609,
											"end": 5610,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5602,
											"end": 5614,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5626,
											"end": 5743,
											"name": "tag",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 5626,
											"end": 5743,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5735,
											"end": 5736,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5732,
											"end": 5733,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5737,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5749,
											"end": 5866,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 5749,
											"end": 5866,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5858,
											"end": 5859,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5855,
											"end": 5856,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5848,
											"end": 5860,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5885,
											"end": 6437,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 5885,
											"end": 6437,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5942,
											"end": 5950,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5952,
											"end": 5958,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6002,
											"end": 6005,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5995,
											"end": 5999,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5987,
											"end": 5993,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5983,
											"end": 6000,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5979,
											"end": 6006,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5969,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 5969,
											"end": 6091,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6010,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 6010,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 6010,
											"end": 6089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6010,
											"end": 6089,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 6010,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5969,
											"end": 6091,
											"name": "tag",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 5969,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6123,
											"end": 6129,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6110,
											"end": 6130,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6100,
											"end": 6130,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6100,
											"end": 6130,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6153,
											"end": 6171,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6145,
											"end": 6151,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6142,
											"end": 6172,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6139,
											"end": 6256,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6139,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 6139,
											"end": 6256,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6175,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 6175,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 6175,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6175,
											"end": 6254,
											"name": "tag",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 6175,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6139,
											"end": 6256,
											"name": "tag",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 6139,
											"end": 6256,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6289,
											"end": 6293,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6281,
											"end": 6287,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6277,
											"end": 6294,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6265,
											"end": 6294,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6265,
											"end": 6294,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6343,
											"end": 6346,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6335,
											"end": 6339,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6327,
											"end": 6333,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6323,
											"end": 6340,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6313,
											"end": 6321,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6309,
											"end": 6341,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6306,
											"end": 6347,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6303,
											"end": 6431,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6303,
											"end": 6431,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 6303,
											"end": 6431,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6350,
											"end": 6429,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 6350,
											"end": 6429,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 6350,
											"end": 6429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6350,
											"end": 6429,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 6350,
											"end": 6429,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6303,
											"end": 6431,
											"name": "tag",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 6303,
											"end": 6431,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5885,
											"end": 6437,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5885,
											"end": 6437,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5885,
											"end": 6437,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5885,
											"end": 6437,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5885,
											"end": 6437,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5885,
											"end": 6437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6443,
											"end": 7260,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6443,
											"end": 7260,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6531,
											"end": 6537,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6539,
											"end": 6545,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6547,
											"end": 6553,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6555,
											"end": 6561,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6604,
											"end": 6606,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6592,
											"end": 6601,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6583,
											"end": 6590,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6579,
											"end": 6602,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6575,
											"end": 6607,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6572,
											"end": 6691,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6572,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 6572,
											"end": 6691,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6610,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 6610,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 6610,
											"end": 6689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6610,
											"end": 6689,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 6610,
											"end": 6689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6572,
											"end": 6691,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 6572,
											"end": 6691,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6730,
											"end": 6731,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6755,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 6800,
											"end": 6807,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6791,
											"end": 6797,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6780,
											"end": 6789,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6776,
											"end": 6798,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6755,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 6755,
											"end": 6808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6755,
											"end": 6808,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 6755,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6745,
											"end": 6808,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6745,
											"end": 6808,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6701,
											"end": 6818,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6857,
											"end": 6859,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6883,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 6928,
											"end": 6935,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6919,
											"end": 6925,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6908,
											"end": 6917,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6904,
											"end": 6926,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6883,
											"end": 6936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 6883,
											"end": 6936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6883,
											"end": 6936,
											"name": "tag",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 6883,
											"end": 6936,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6873,
											"end": 6936,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6873,
											"end": 6936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6828,
											"end": 6946,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7013,
											"end": 7015,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6998,
											"end": 7016,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6985,
											"end": 7017,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7044,
											"end": 7062,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7036,
											"end": 7042,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7033,
											"end": 7063,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7030,
											"end": 7147,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7030,
											"end": 7147,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 7030,
											"end": 7147,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7066,
											"end": 7145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 7066,
											"end": 7145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 7066,
											"end": 7145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7066,
											"end": 7145,
											"name": "tag",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 7066,
											"end": 7145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7030,
											"end": 7147,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 7030,
											"end": 7147,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7179,
											"end": 7243,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 7235,
											"end": 7242,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 7226,
											"end": 7232,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7215,
											"end": 7224,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7211,
											"end": 7233,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7179,
											"end": 7243,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 7179,
											"end": 7243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7179,
											"end": 7243,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 7179,
											"end": 7243,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7161,
											"end": 7243,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7161,
											"end": 7243,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7161,
											"end": 7243,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7161,
											"end": 7243,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6956,
											"end": 7253,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6443,
											"end": 7260,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6443,
											"end": 7260,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 6443,
											"end": 7260,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6443,
											"end": 7260,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6443,
											"end": 7260,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6443,
											"end": 7260,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6443,
											"end": 7260,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6443,
											"end": 7260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7266,
											"end": 7595,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 7266,
											"end": 7595,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7325,
											"end": 7331,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7374,
											"end": 7376,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7362,
											"end": 7371,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7353,
											"end": 7360,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7349,
											"end": 7372,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7345,
											"end": 7377,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7342,
											"end": 7461,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7342,
											"end": 7461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 7342,
											"end": 7461,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7380,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 7380,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 7380,
											"end": 7459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7380,
											"end": 7459,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 7380,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7342,
											"end": 7461,
											"name": "tag",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 7342,
											"end": 7461,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7500,
											"end": 7501,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7525,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 7570,
											"end": 7577,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7561,
											"end": 7567,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7559,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7546,
											"end": 7568,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7525,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 7525,
											"end": 7578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7525,
											"end": 7578,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 7525,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7515,
											"end": 7578,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7515,
											"end": 7578,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7471,
											"end": 7588,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7266,
											"end": 7595,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7266,
											"end": 7595,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7266,
											"end": 7595,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7266,
											"end": 7595,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7266,
											"end": 7595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7601,
											"end": 8564,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 7601,
											"end": 8564,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7698,
											"end": 7704,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7706,
											"end": 7712,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7714,
											"end": 7720,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7722,
											"end": 7728,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7730,
											"end": 7736,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7779,
											"end": 7782,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 7767,
											"end": 7776,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7758,
											"end": 7765,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7754,
											"end": 7777,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7750,
											"end": 7783,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7747,
											"end": 7867,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7747,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 7747,
											"end": 7867,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7786,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 7786,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 7786,
											"end": 7865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7786,
											"end": 7865,
											"name": "tag",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 7786,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7747,
											"end": 7867,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 7747,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7906,
											"end": 7907,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7931,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 7976,
											"end": 7983,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7967,
											"end": 7973,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7956,
											"end": 7965,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 7952,
											"end": 7974,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7931,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 7931,
											"end": 7984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7931,
											"end": 7984,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 7931,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7921,
											"end": 7984,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 7921,
											"end": 7984,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7877,
											"end": 7994,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8033,
											"end": 8035,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8059,
											"end": 8112,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 8104,
											"end": 8111,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8095,
											"end": 8101,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8084,
											"end": 8093,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 8080,
											"end": 8102,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8059,
											"end": 8112,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 8059,
											"end": 8112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8059,
											"end": 8112,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 8059,
											"end": 8112,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8049,
											"end": 8112,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 8049,
											"end": 8112,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8004,
											"end": 8122,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8161,
											"end": 8163,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8187,
											"end": 8240,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 8232,
											"end": 8239,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8223,
											"end": 8229,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8212,
											"end": 8221,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 8208,
											"end": 8230,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8187,
											"end": 8240,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 8187,
											"end": 8240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8187,
											"end": 8240,
											"name": "tag",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 8187,
											"end": 8240,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8177,
											"end": 8240,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8177,
											"end": 8240,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8132,
											"end": 8250,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8317,
											"end": 8319,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8306,
											"end": 8315,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8302,
											"end": 8320,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8289,
											"end": 8321,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8348,
											"end": 8366,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8340,
											"end": 8346,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8337,
											"end": 8367,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8334,
											"end": 8451,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8334,
											"end": 8451,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 8334,
											"end": 8451,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8370,
											"end": 8449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 8370,
											"end": 8449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 8370,
											"end": 8449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8370,
											"end": 8449,
											"name": "tag",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 8370,
											"end": 8449,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8334,
											"end": 8451,
											"name": "tag",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 8334,
											"end": 8451,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8483,
											"end": 8547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 8539,
											"end": 8546,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8530,
											"end": 8536,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8519,
											"end": 8528,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 8515,
											"end": 8537,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8483,
											"end": 8547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 8483,
											"end": 8547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8483,
											"end": 8547,
											"name": "tag",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 8483,
											"end": 8547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8465,
											"end": 8547,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8465,
											"end": 8547,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8465,
											"end": 8547,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8465,
											"end": 8547,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8260,
											"end": 8557,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7601,
											"end": 8564,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7601,
											"end": 8564,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 7601,
											"end": 8564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7601,
											"end": 8564,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7601,
											"end": 8564,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 7601,
											"end": 8564,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7601,
											"end": 8564,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7601,
											"end": 8564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7601,
											"end": 8564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8570,
											"end": 9044,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 8570,
											"end": 9044,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8638,
											"end": 8644,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8646,
											"end": 8652,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8695,
											"end": 8697,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8683,
											"end": 8692,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8674,
											"end": 8681,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8670,
											"end": 8693,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8666,
											"end": 8698,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8663,
											"end": 8782,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8663,
											"end": 8782,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 8663,
											"end": 8782,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8701,
											"end": 8780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 8701,
											"end": 8780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 8701,
											"end": 8780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8701,
											"end": 8780,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 8701,
											"end": 8780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8663,
											"end": 8782,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 8663,
											"end": 8782,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8821,
											"end": 8822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8846,
											"end": 8899,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 8891,
											"end": 8898,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8882,
											"end": 8888,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8871,
											"end": 8880,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8867,
											"end": 8889,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8846,
											"end": 8899,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 8846,
											"end": 8899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8846,
											"end": 8899,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 8846,
											"end": 8899,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8836,
											"end": 8899,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8836,
											"end": 8899,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8792,
											"end": 8909,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8948,
											"end": 8950,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8974,
											"end": 9027,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 9019,
											"end": 9026,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9010,
											"end": 9016,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8999,
											"end": 9008,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8995,
											"end": 9017,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8974,
											"end": 9027,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 8974,
											"end": 9027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8974,
											"end": 9027,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 8974,
											"end": 9027,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8964,
											"end": 9027,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8964,
											"end": 9027,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8919,
											"end": 9037,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8570,
											"end": 9044,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8570,
											"end": 9044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8570,
											"end": 9044,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8570,
											"end": 9044,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8570,
											"end": 9044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8570,
											"end": 9044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9050,
											"end": 9230,
											"name": "tag",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 9050,
											"end": 9230,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9098,
											"end": 9175,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9095,
											"end": 9096,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9088,
											"end": 9176,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9195,
											"end": 9199,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 9192,
											"end": 9193,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9185,
											"end": 9200,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9219,
											"end": 9223,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9216,
											"end": 9217,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9209,
											"end": 9224,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9236,
											"end": 9556,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 9236,
											"end": 9556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9280,
											"end": 9286,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9317,
											"end": 9318,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 9311,
											"end": 9315,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9307,
											"end": 9319,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 9319,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 9319,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9364,
											"end": 9365,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 9358,
											"end": 9362,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9354,
											"end": 9366,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9385,
											"end": 9403,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9375,
											"end": 9456,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 9375,
											"end": 9456,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9441,
											"end": 9445,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 9433,
											"end": 9439,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9429,
											"end": 9446,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9419,
											"end": 9446,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9419,
											"end": 9446,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9375,
											"end": 9456,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 9375,
											"end": 9456,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9503,
											"end": 9505,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9495,
											"end": 9501,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9492,
											"end": 9506,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 9472,
											"end": 9490,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9469,
											"end": 9507,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9466,
											"end": 9550,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 9466,
											"end": 9550,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 9522,
											"end": 9540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9466,
											"end": 9550,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 9466,
											"end": 9550,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9287,
											"end": 9556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9236,
											"end": 9556,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9236,
											"end": 9556,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9236,
											"end": 9556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9236,
											"end": 9556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9562,
											"end": 9786,
											"name": "tag",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 9562,
											"end": 9786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9702,
											"end": 9736,
											"name": "PUSH",
											"source": 13,
											"value": "455243313336333A205F636865636B416E6443616C6C5472616E736665722066"
										},
										{
											"begin": 9698,
											"end": 9699,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9690,
											"end": 9696,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9686,
											"end": 9700,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9679,
											"end": 9737,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9771,
											"end": 9778,
											"name": "PUSH",
											"source": 13,
											"value": "61696C6564000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9766,
											"end": 9768,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9758,
											"end": 9764,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9754,
											"end": 9769,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9747,
											"end": 9779,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9562,
											"end": 9786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9562,
											"end": 9786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9792,
											"end": 10158,
											"name": "tag",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 9792,
											"end": 10158,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9934,
											"end": 9937,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 10019,
											"end": 10021,
											"name": "PUSH",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 10014,
											"end": 10017,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 9955,
											"end": 10022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9948,
											"end": 10022,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9948,
											"end": 10022,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10031,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 10120,
											"end": 10123,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10031,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 10031,
											"end": 10124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10031,
											"end": 10124,
											"name": "tag",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 10031,
											"end": 10124,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10149,
											"end": 10151,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10144,
											"end": 10147,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10140,
											"end": 10152,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10133,
											"end": 10152,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10133,
											"end": 10152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9792,
											"end": 10158,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9792,
											"end": 10158,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9792,
											"end": 10158,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9792,
											"end": 10158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10164,
											"end": 10583,
											"name": "tag",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 10164,
											"end": 10583,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10330,
											"end": 10334,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10368,
											"end": 10370,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10357,
											"end": 10366,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10353,
											"end": 10371,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10345,
											"end": 10371,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10345,
											"end": 10371,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10417,
											"end": 10426,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10411,
											"end": 10415,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10407,
											"end": 10427,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10403,
											"end": 10404,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10392,
											"end": 10401,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10388,
											"end": 10405,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10381,
											"end": 10428,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10445,
											"end": 10576,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 10571,
											"end": 10575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10445,
											"end": 10576,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 10445,
											"end": 10576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10445,
											"end": 10576,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 10445,
											"end": 10576,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10437,
											"end": 10576,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10437,
											"end": 10576,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10164,
											"end": 10583,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10164,
											"end": 10583,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10164,
											"end": 10583,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10164,
											"end": 10583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10589,
											"end": 10707,
											"name": "tag",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 10589,
											"end": 10707,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10676,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 10694,
											"end": 10699,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10676,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 10676,
											"end": 10700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10676,
											"end": 10700,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 10676,
											"end": 10700,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10671,
											"end": 10674,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10664,
											"end": 10701,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10589,
											"end": 10707,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10589,
											"end": 10707,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10589,
											"end": 10707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10713,
											"end": 11155,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 10713,
											"end": 11155,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10862,
											"end": 10866,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10900,
											"end": 10902,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 10889,
											"end": 10898,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10885,
											"end": 10903,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10877,
											"end": 10903,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10877,
											"end": 10903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10913,
											"end": 10984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 10981,
											"end": 10982,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10970,
											"end": 10979,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10966,
											"end": 10983,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10957,
											"end": 10963,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10913,
											"end": 10984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 10913,
											"end": 10984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10913,
											"end": 10984,
											"name": "tag",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 10913,
											"end": 10984,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10994,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 11062,
											"end": 11064,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11051,
											"end": 11060,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11047,
											"end": 11065,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11038,
											"end": 11044,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10994,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 10994,
											"end": 11066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10994,
											"end": 11066,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 10994,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11076,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 11144,
											"end": 11146,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11133,
											"end": 11142,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11129,
											"end": 11147,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11120,
											"end": 11126,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11076,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 11076,
											"end": 11148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11076,
											"end": 11148,
											"name": "tag",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 11076,
											"end": 11148,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10713,
											"end": 11155,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 10713,
											"end": 11155,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 10713,
											"end": 11155,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10713,
											"end": 11155,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10713,
											"end": 11155,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10713,
											"end": 11155,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10713,
											"end": 11155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11161,
											"end": 11383,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 11161,
											"end": 11383,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11254,
											"end": 11258,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11292,
											"end": 11294,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11281,
											"end": 11290,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11277,
											"end": 11295,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11269,
											"end": 11295,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11269,
											"end": 11295,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11305,
											"end": 11376,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 11373,
											"end": 11374,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11362,
											"end": 11371,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11358,
											"end": 11375,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11349,
											"end": 11355,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11305,
											"end": 11376,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 11305,
											"end": 11376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11305,
											"end": 11376,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 11305,
											"end": 11376,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11161,
											"end": 11383,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11161,
											"end": 11383,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11161,
											"end": 11383,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11161,
											"end": 11383,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11161,
											"end": 11383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11389,
											"end": 11487,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 11389,
											"end": 11487,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11440,
											"end": 11446,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11474,
											"end": 11479,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11468,
											"end": 11480,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11458,
											"end": 11480,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11458,
											"end": 11480,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11389,
											"end": 11487,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11389,
											"end": 11487,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11389,
											"end": 11487,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11389,
											"end": 11487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11493,
											"end": 11661,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 11493,
											"end": 11661,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11576,
											"end": 11587,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11610,
											"end": 11616,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11605,
											"end": 11608,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11598,
											"end": 11617,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11650,
											"end": 11654,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11645,
											"end": 11648,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11641,
											"end": 11655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11626,
											"end": 11655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11626,
											"end": 11655,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11493,
											"end": 11661,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11493,
											"end": 11661,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11493,
											"end": 11661,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11493,
											"end": 11661,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11493,
											"end": 11661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11667,
											"end": 12040,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 11667,
											"end": 12040,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11753,
											"end": 11756,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11781,
											"end": 11819,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 11813,
											"end": 11818,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11781,
											"end": 11819,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 11781,
											"end": 11819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11781,
											"end": 11819,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 11781,
											"end": 11819,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11835,
											"end": 11905,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 11898,
											"end": 11904,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11893,
											"end": 11896,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11835,
											"end": 11905,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 11835,
											"end": 11905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11835,
											"end": 11905,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 11835,
											"end": 11905,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11828,
											"end": 11905,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11828,
											"end": 11905,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11914,
											"end": 11979,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 11972,
											"end": 11978,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11967,
											"end": 11970,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11960,
											"end": 11964,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11953,
											"end": 11958,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11949,
											"end": 11965,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11914,
											"end": 11979,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 11914,
											"end": 11979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11914,
											"end": 11979,
											"name": "tag",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 11914,
											"end": 11979,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12004,
											"end": 12033,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 12026,
											"end": 12032,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12004,
											"end": 12033,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 12004,
											"end": 12033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12004,
											"end": 12033,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 12004,
											"end": 12033,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11999,
											"end": 12002,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11995,
											"end": 12034,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11988,
											"end": 12034,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11988,
											"end": 12034,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11757,
											"end": 12040,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11667,
											"end": 12040,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11667,
											"end": 12040,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11667,
											"end": 12040,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11667,
											"end": 12040,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11667,
											"end": 12040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12046,
											"end": 12686,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 12046,
											"end": 12686,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12241,
											"end": 12245,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12279,
											"end": 12282,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 12268,
											"end": 12277,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12264,
											"end": 12283,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12256,
											"end": 12283,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12256,
											"end": 12283,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12293,
											"end": 12364,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 12361,
											"end": 12362,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12350,
											"end": 12359,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12346,
											"end": 12363,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12337,
											"end": 12343,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 12293,
											"end": 12364,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 12293,
											"end": 12364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12293,
											"end": 12364,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 12293,
											"end": 12364,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 12442,
											"end": 12444,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12431,
											"end": 12440,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12427,
											"end": 12445,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12418,
											"end": 12424,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 12374,
											"end": 12446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12446,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 12374,
											"end": 12446,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12456,
											"end": 12528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 12524,
											"end": 12526,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12513,
											"end": 12522,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12509,
											"end": 12527,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12500,
											"end": 12506,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12456,
											"end": 12528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 12456,
											"end": 12528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12456,
											"end": 12528,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 12456,
											"end": 12528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12575,
											"end": 12584,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12569,
											"end": 12573,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12565,
											"end": 12585,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12560,
											"end": 12562,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 12549,
											"end": 12558,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12545,
											"end": 12563,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12538,
											"end": 12586,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12603,
											"end": 12679,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 12674,
											"end": 12678,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12665,
											"end": 12671,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12603,
											"end": 12679,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 12603,
											"end": 12679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12603,
											"end": 12679,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 12603,
											"end": 12679,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12595,
											"end": 12679,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12595,
											"end": 12679,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12046,
											"end": 12686,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 12046,
											"end": 12686,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 12046,
											"end": 12686,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12046,
											"end": 12686,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12046,
											"end": 12686,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12046,
											"end": 12686,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12046,
											"end": 12686,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12046,
											"end": 12686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12692,
											"end": 12833,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 12692,
											"end": 12833,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12748,
											"end": 12753,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12779,
											"end": 12785,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12773,
											"end": 12786,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12764,
											"end": 12786,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12764,
											"end": 12786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12795,
											"end": 12827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 12821,
											"end": 12826,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12795,
											"end": 12827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 12795,
											"end": 12827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12795,
											"end": 12827,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 12795,
											"end": 12827,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12692,
											"end": 12833,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12692,
											"end": 12833,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12692,
											"end": 12833,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12692,
											"end": 12833,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12692,
											"end": 12833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 13188,
											"name": "tag",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 12839,
											"end": 13188,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12908,
											"end": 12914,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12957,
											"end": 12959,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12945,
											"end": 12954,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12936,
											"end": 12943,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12932,
											"end": 12955,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12928,
											"end": 12960,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 12925,
											"end": 13044,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12925,
											"end": 13044,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 12925,
											"end": 13044,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12963,
											"end": 13042,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 12963,
											"end": 13042,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 12963,
											"end": 13042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12963,
											"end": 13042,
											"name": "tag",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 12963,
											"end": 13042,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12925,
											"end": 13044,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 12925,
											"end": 13044,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13083,
											"end": 13084,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13108,
											"end": 13171,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 13163,
											"end": 13170,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13154,
											"end": 13160,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13143,
											"end": 13152,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13139,
											"end": 13161,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13108,
											"end": 13171,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 13108,
											"end": 13171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13108,
											"end": 13171,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 13108,
											"end": 13171,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13098,
											"end": 13171,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13098,
											"end": 13171,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13054,
											"end": 13181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 13188,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 13188,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 13188,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 13188,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 13188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13194,
											"end": 13415,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 13194,
											"end": 13415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13334,
											"end": 13368,
											"name": "PUSH",
											"source": 13,
											"value": "455243313336333A206F6E5472616E736665725265636569766564206661696C"
										},
										{
											"begin": 13330,
											"end": 13331,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13322,
											"end": 13328,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13318,
											"end": 13332,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13311,
											"end": 13369,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13403,
											"end": 13407,
											"name": "PUSH",
											"source": 13,
											"value": "6564000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13398,
											"end": 13400,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13390,
											"end": 13396,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13386,
											"end": 13401,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13379,
											"end": 13408,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13194,
											"end": 13415,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13194,
											"end": 13415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13421,
											"end": 13787,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 13421,
											"end": 13787,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13563,
											"end": 13566,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13584,
											"end": 13651,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 13648,
											"end": 13650,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 13643,
											"end": 13646,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13584,
											"end": 13651,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 13584,
											"end": 13651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13584,
											"end": 13651,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 13584,
											"end": 13651,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13577,
											"end": 13651,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13577,
											"end": 13651,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13660,
											"end": 13753,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 13749,
											"end": 13752,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13660,
											"end": 13753,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 13660,
											"end": 13753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13660,
											"end": 13753,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 13660,
											"end": 13753,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13778,
											"end": 13780,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13773,
											"end": 13776,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13769,
											"end": 13781,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13762,
											"end": 13781,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13762,
											"end": 13781,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13421,
											"end": 13787,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13421,
											"end": 13787,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13421,
											"end": 13787,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13421,
											"end": 13787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13793,
											"end": 14212,
											"name": "tag",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 13793,
											"end": 14212,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13959,
											"end": 13963,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13997,
											"end": 13999,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13986,
											"end": 13995,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13982,
											"end": 14000,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13974,
											"end": 14000,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13974,
											"end": 14000,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14046,
											"end": 14055,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14040,
											"end": 14044,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14036,
											"end": 14056,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14032,
											"end": 14033,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14021,
											"end": 14030,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14017,
											"end": 14034,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14010,
											"end": 14057,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14074,
											"end": 14205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 14200,
											"end": 14204,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14074,
											"end": 14205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 14074,
											"end": 14205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14074,
											"end": 14205,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 14074,
											"end": 14205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14066,
											"end": 14205,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14066,
											"end": 14205,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13793,
											"end": 14212,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13793,
											"end": 14212,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13793,
											"end": 14212,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13793,
											"end": 14212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14218,
											"end": 14398,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 14218,
											"end": 14398,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14266,
											"end": 14343,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14263,
											"end": 14264,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14256,
											"end": 14344,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 14360,
											"end": 14361,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 14353,
											"end": 14368,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14387,
											"end": 14391,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14384,
											"end": 14385,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14377,
											"end": 14392,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14404,
											"end": 14595,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 14404,
											"end": 14595,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14444,
											"end": 14447,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14463,
											"end": 14483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 14481,
											"end": 14482,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14463,
											"end": 14483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 14463,
											"end": 14483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14463,
											"end": 14483,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 14463,
											"end": 14483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14458,
											"end": 14483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14458,
											"end": 14483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14497,
											"end": 14517,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 14515,
											"end": 14516,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14497,
											"end": 14517,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 14497,
											"end": 14517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14497,
											"end": 14517,
											"name": "tag",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 14497,
											"end": 14517,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14492,
											"end": 14517,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14492,
											"end": 14517,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14540,
											"end": 14541,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14537,
											"end": 14538,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14533,
											"end": 14542,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14526,
											"end": 14542,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14561,
											"end": 14564,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14558,
											"end": 14559,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14555,
											"end": 14565,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 14552,
											"end": 14588,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14552,
											"end": 14588,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 14552,
											"end": 14588,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14568,
											"end": 14586,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 14568,
											"end": 14586,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 14568,
											"end": 14586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14568,
											"end": 14586,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 14568,
											"end": 14586,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14552,
											"end": 14588,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 14552,
											"end": 14588,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14404,
											"end": 14595,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14404,
											"end": 14595,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14404,
											"end": 14595,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14404,
											"end": 14595,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14404,
											"end": 14595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/ERC20_Demo/ERC1363/erc1363.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20_Demo/ERC1363/erc1363.sol\":\"MyToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol\":{\"keccak256\":\"0xc988322f9ed15c95b435e5fbb51767b0bd8c19a4a57ca360af409122cede64c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://baf96a3317c8b2d14dd805833efca40c9a38cbf4e2a9c375d88f98b2f1ea5232\",\"dweb:/ipfs/QmTKbzuQBM62yERCNWtfoEK12cFj4sQcEFLLN64h6kEmXn\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/ERC20_Demo/ERC1363/erc1363.sol\":{\"keccak256\":\"0xb4d8e8fc081e2651b42c1550ba87f901184d7ff463e3c2910c39f74046d5202f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb4ec152590e2cb7072643150938f83d06398179badefa813890aef60d74e0ce\",\"dweb:/ipfs/QmVL1prNqBkBx2FZWtn6qXEZdETVQgeSAGPuaD4zhJdHKD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 267,
								"contract": "contracts/ERC20_Demo/ERC1363/erc1363.sol:MyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 273,
								"contract": "contracts/ERC20_Demo/ERC1363/erc1363.sol:MyToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 275,
								"contract": "contracts/ERC20_Demo/ERC1363/erc1363.sol:MyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 277,
								"contract": "contracts/ERC20_Demo/ERC1363/erc1363.sol:MyToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 279,
								"contract": "contracts/ERC20_Demo/ERC1363/erc1363.sol:MyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/ERC20_Demo/ERC1363/erc1363.sol:18:31:\n   |\n18 |      function transferAndCall(address to, uint256 value) external override pure returns (bool) {\n   |                               ^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 611,
					"file": "contracts/ERC20_Demo/ERC1363/erc1363.sol",
					"start": 601
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/ERC20_Demo/ERC1363/erc1363.sol:18:43:\n   |\n18 |      function transferAndCall(address to, uint256 value) external override pure returns (bool) {\n   |                                           ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 626,
					"file": "contracts/ERC20_Demo/ERC1363/erc1363.sol",
					"start": 613
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/ERC20_Demo/ERC1363/erc1363.sol:41:34:\n   |\n41 |     function transferFromAndCall(address from, address to, uint256 value) external override pure returns (bool) {\n   |                                  ^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1662,
					"file": "contracts/ERC20_Demo/ERC1363/erc1363.sol",
					"start": 1650
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/ERC20_Demo/ERC1363/erc1363.sol:41:48:\n   |\n41 |     function transferFromAndCall(address from, address to, uint256 value) external override pure returns (bool) {\n   |                                                ^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1674,
					"file": "contracts/ERC20_Demo/ERC1363/erc1363.sol",
					"start": 1664
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/ERC20_Demo/ERC1363/erc1363.sol:41:60:\n   |\n41 |     function transferFromAndCall(address from, address to, uint256 value) external override pure returns (bool) {\n   |                                                            ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1689,
					"file": "contracts/ERC20_Demo/ERC1363/erc1363.sol",
					"start": 1676
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/ERC20_Demo/ERC1363/erc1363.sol:45:34:\n   |\n45 |     function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) override pure external returns (bool) {\n   |                                  ^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1804,
					"file": "contracts/ERC20_Demo/ERC1363/erc1363.sol",
					"start": 1792
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/ERC20_Demo/ERC1363/erc1363.sol:45:48:\n   |\n45 |     function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) override pure external returns (bool) {\n   |                                                ^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1816,
					"file": "contracts/ERC20_Demo/ERC1363/erc1363.sol",
					"start": 1806
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/ERC20_Demo/ERC1363/erc1363.sol:45:60:\n   |\n45 |     function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) override pure external returns (bool) {\n   |                                                            ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1831,
					"file": "contracts/ERC20_Demo/ERC1363/erc1363.sol",
					"start": 1818
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/ERC20_Demo/ERC1363/erc1363.sol:45:75:\n   |\n45 |     function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) override pure external returns (bool) {\n   |                                                                           ^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1852,
					"file": "contracts/ERC20_Demo/ERC1363/erc1363.sol",
					"start": 1833
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/ERC20_Demo/ERC1363/erc1363.sol:49:29:\n   |\n49 |     function approveAndCall(address spender, uint256 value) external  pure override returns (bool) {\n   |                             ^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1965,
					"file": "contracts/ERC20_Demo/ERC1363/erc1363.sol",
					"start": 1950
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/ERC20_Demo/ERC1363/erc1363.sol:49:46:\n   |\n49 |     function approveAndCall(address spender, uint256 value) external  pure override returns (bool) {\n   |                                              ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1980,
					"file": "contracts/ERC20_Demo/ERC1363/erc1363.sol",
					"start": 1967
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/ERC20_Demo/ERC1363/erc1363.sol:53:29:\n   |\n53 |     function approveAndCall(address spender, uint256 value, bytes calldata data) override pure external returns (bool) {\n   |                             ^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2094,
					"file": "contracts/ERC20_Demo/ERC1363/erc1363.sol",
					"start": 2079
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/ERC20_Demo/ERC1363/erc1363.sol:53:46:\n   |\n53 |     function approveAndCall(address spender, uint256 value, bytes calldata data) override pure external returns (bool) {\n   |                                              ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2109,
					"file": "contracts/ERC20_Demo/ERC1363/erc1363.sol",
					"start": 2096
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/ERC20_Demo/ERC1363/erc1363.sol:53:61:\n   |\n53 |     function approveAndCall(address spender, uint256 value, bytes calldata data) override pure external returns (bool) {\n   |                                                             ^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2130,
					"file": "contracts/ERC20_Demo/ERC1363/erc1363.sol",
					"start": 2111
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/ERC20_Demo/ERC1363/erc1363.sol:57:32:\n   |\n57 |     function supportsInterface(bytes4 interfaceId) external override pure returns (bool) {\n   |                                ^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2249,
					"file": "contracts/ERC20_Demo/ERC1363/erc1363.sol",
					"start": 2231
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC165": [
							1187
						],
						"IERC20": [
							837
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 108,
							"src": "133:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 837,
										"src": "141:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 104,
							"src": "170:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1187,
										"src": "178:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"590:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 837,
										"src": "590:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC165",
										"nameLocations": [
											"598:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1187,
										"src": "598:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81,
								1187,
								837
							],
							"name": "IERC1363",
							"nameLocation": "578:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1593:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:0"
									},
									"scope": 81,
									"src": "1523:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2088:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2115:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2154:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:0"
									},
									"scope": 81,
									"src": "2063:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:0"
									},
									"scope": 81,
									"src": "2624:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3294:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3320:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3335:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:0"
									},
									"scope": 81,
									"src": "3265:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3855:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:0"
									},
									"scope": 81,
									"src": "3781:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4406:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4445:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:0"
									},
									"scope": 81,
									"src": "4350:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "568:3885:0",
							"usedErrors": [],
							"usedEvents": [
								771,
								780
							]
						}
					],
					"src": "107:4347:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363Receiver.sol",
					"exportedSymbols": {
						"IERC1363Receiver": [
							99
						]
					},
					"id": 100,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1363Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 84,
								"nodeType": "StructuredDocumentation",
								"src": "141:168:1",
								"text": " @title IERC1363Receiver\n @dev Interface for any contract that wants to support `transferAndCall` or `transferFromAndCall`\n from ERC-1363 token contracts."
							},
							"fullyImplemented": false,
							"id": 99,
							"linearizedBaseContracts": [
								99
							],
							"name": "IERC1363Receiver",
							"nameLocation": "320:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "343:805:1",
										"text": " @dev Whenever ERC-1363 tokens are transferred to this contract via `transferAndCall` or `transferFromAndCall`\n by `operator` from `from`, this function is called.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))`\n (i.e. 0x88a7ca5c, or its own function selector).\n @param operator The address which called `transferAndCall` or `transferFromAndCall` function.\n @param from The address which the tokens are transferred from.\n @param value The amount of tokens transferred.\n @param data Additional data with no specified format.\n @return `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` if transfer is allowed unless throwing."
									},
									"functionSelector": "88a7ca5c",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onTransferReceived",
									"nameLocation": "1162:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1198:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1190:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1190:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1224:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1216:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1216:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1246:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1238:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1276:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1261:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 92,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1261:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1180:106:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1305:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 95,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1305:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1304:8:1"
									},
									"scope": 99,
									"src": "1153:160:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 100,
							"src": "310:1005:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:1201:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1187
						]
					},
					"id": 104,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 103,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 104,
							"sourceUnit": 1188,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 102,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1187,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							837
						]
					},
					"id": 108,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 105,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 108,
							"sourceUnit": 838,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 106,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 837,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							244
						],
						"IERC20Errors": [
							149
						],
						"IERC721Errors": [
							197
						]
					},
					"id": 245,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 109,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 110,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:4",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 149,
							"linearizedBaseContracts": [
								149
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 119,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "654:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "670:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "687:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:4"
									},
									"src": "623:80:4"
								},
								{
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 124,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "891:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:4"
									},
									"src": "866:41:4"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 129,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "1104:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:4"
									},
									"src": "1077:45:4"
								},
								{
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 138,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "1511:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "1528:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "1547:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:4"
									},
									"src": "1478:85:4"
								},
								{
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 143,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1775:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:4"
									},
									"src": "1748:45:4"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 148,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "2025:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:4"
									},
									"src": "1999:43:4"
								}
							],
							"scope": 245,
							"src": "280:1764:4",
							"usedErrors": [
								119,
								124,
								129,
								138,
								143,
								148
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:4",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 197,
							"linearizedBaseContracts": [
								197
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 155,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "2469:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:4"
									},
									"src": "2444:40:4"
								},
								{
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 160,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2656:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:4"
									},
									"src": "2627:46:4"
								},
								{
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 169,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "3000:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "3016:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "3033:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:4"
									},
									"src": "2973:75:4"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 174,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "3237:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:4"
									},
									"src": "3211:42:4"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 179,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "3451:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:4"
									},
									"src": "3423:46:4"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 186,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "3760:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "3778:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:4"
									},
									"src": "3727:68:4"
								},
								{
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 191,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "4008:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:4"
									},
									"src": "3980:46:4"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 196,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "4262:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:4"
									},
									"src": "4234:46:4"
								}
							],
							"scope": 245,
							"src": "2190:2092:4",
							"usedErrors": [
								155,
								160,
								169,
								174,
								179,
								186,
								191,
								196
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 198,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:4",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 244,
							"linearizedBaseContracts": [
								244
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 209,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "4860:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "4876:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "4893:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "4909:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:4"
									},
									"src": "4827:99:4"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 214,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "5116:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:4"
									},
									"src": "5089:43:4"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 219,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "5331:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:4"
									},
									"src": "5302:47:4"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 226,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "5651:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "5669:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:4"
									},
									"src": "5616:68:4"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 231,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "5898:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:4"
									},
									"src": "5869:47:4"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 236,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "6153:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:4"
									},
									"src": "6124:47:4"
								},
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 243,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "6494:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "6513:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:4"
									},
									"src": "6462:73:4"
								}
							],
							"scope": 245,
							"src": "4430:2107:4",
							"usedErrors": [
								209,
								214,
								219,
								226,
								231,
								236,
								243
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1153
						],
						"ERC20": [
							759
						],
						"IERC20": [
							837
						],
						"IERC20Errors": [
							149
						],
						"IERC20Metadata": [
							863
						]
					},
					"id": 760,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 246,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 248,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 760,
							"sourceUnit": 838,
							"src": "131:36:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 247,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 837,
										"src": "139:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 250,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 760,
							"sourceUnit": 864,
							"src": "168:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 249,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 863,
										"src": "176:14:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 252,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 760,
							"sourceUnit": 1154,
							"src": "232:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 251,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1153,
										"src": "240:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 254,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 760,
							"sourceUnit": 245,
							"src": "281:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 253,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 149,
										"src": "289:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 256,
										"name": "Context",
										"nameLocations": [
											"1133:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1153,
										"src": "1133:7:5"
									},
									"id": 257,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:5"
								},
								{
									"baseName": {
										"id": 258,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 837,
										"src": "1142:6:5"
									},
									"id": 259,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:5"
								},
								{
									"baseName": {
										"id": 260,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 863,
										"src": "1150:14:5"
									},
									"id": 261,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:5"
								},
								{
									"baseName": {
										"id": 262,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 149,
										"src": "1166:12:5"
									},
									"id": 263,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:5"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 255,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:5",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 759,
							"linearizedBaseContracts": [
								759,
								149,
								863,
								837,
								1153
							],
							"name": "ERC20",
							"nameLocation": "1124:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 267,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 759,
									"src": "1185:53:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 266,
										"keyName": "account",
										"keyNameLocation": "1201:7:5",
										"keyType": {
											"id": 264,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 265,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 273,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 759,
									"src": "1245:83:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 272,
										"keyName": "account",
										"keyNameLocation": "1261:7:5",
										"keyType": {
											"id": 268,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 271,
											"keyName": "spender",
											"keyNameLocation": "1288:7:5",
											"keyType": {
												"id": 269,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 270,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 275,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 759,
									"src": "1335:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 274,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 277,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 759,
									"src": "1370:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 276,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 759,
									"src": "1396:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 278,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "1638:57:5",
										"statements": [
											{
												"expression": {
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 287,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "1648:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 288,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "1656:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:5"
											},
											{
												"expression": {
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 291,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "1671:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 292,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "1681:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:5"
											}
										]
									},
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:5",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 296,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "1594:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 281,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "1615:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 283,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:5"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:5"
									},
									"scope": 759,
									"src": "1582:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										850
									],
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "1820:29:5",
										"statements": [
											{
												"expression": {
													"id": 302,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 277,
													"src": "1837:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 301,
												"id": 303,
												"nodeType": "Return",
												"src": "1830:12:5"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:5"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1805:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 299,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:5"
									},
									"scope": 759,
									"src": "1760:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										856
									],
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "2024:31:5",
										"statements": [
											{
												"expression": {
													"id": 311,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 279,
													"src": "2041:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 310,
												"id": 312,
												"nodeType": "Return",
												"src": "2034:14:5"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:5",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:5"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2009:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 308,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:5"
									},
									"scope": 759,
									"src": "1962:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										862
									],
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "2744:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 319,
												"id": 321,
												"nodeType": "Return",
												"src": "2754:9:5"
											}
										]
									},
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:5",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:5"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "2737:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 317,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:5"
									},
									"scope": 759,
									"src": "2688:82:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										786
									],
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "2891:36:5",
										"statements": [
											{
												"expression": {
													"id": 329,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 275,
													"src": "2908:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 328,
												"id": 330,
												"nodeType": "Return",
												"src": "2901:19:5"
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:5",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "2882:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:5"
									},
									"scope": 759,
									"src": "2830:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										794
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "3059:42:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 340,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "3076:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 342,
													"indexExpression": {
														"id": 341,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "3086:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 339,
												"id": 343,
												"nodeType": "Return",
												"src": "3069:25:5"
											}
										]
									},
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:5",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "3004:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:5"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "3050:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:5"
									},
									"scope": 759,
									"src": "2985:116:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										804
									],
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "3371:103:5",
										"statements": [
											{
												"assignments": [
													356
												],
												"declarations": [
													{
														"constant": false,
														"id": 356,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 368,
														"src": "3381:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 355,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 359,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 357,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "3397:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 361,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "3429:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 362,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "3436:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 363,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "3440:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 360,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "3419:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 354,
												"id": 367,
												"nodeType": "Return",
												"src": "3456:11:5"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:5",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "3314:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "3326:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:5"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "3365:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:5"
									},
									"scope": 759,
									"src": "3296:178:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										814
									],
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "3621:51:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 379,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "3638:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 381,
														"indexExpression": {
															"id": 380,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "3650:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 383,
													"indexExpression": {
														"id": 382,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "3657:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 378,
												"id": 384,
												"nodeType": "Return",
												"src": "3631:34:5"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:5",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "3551:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "3566:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "3612:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:5"
									},
									"scope": 759,
									"src": "3532:140:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										824
									],
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "4058:107:5",
										"statements": [
											{
												"assignments": [
													397
												],
												"declarations": [
													{
														"constant": false,
														"id": 397,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 409,
														"src": "4068:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 396,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 400,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 398,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "4084:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 402,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "4115:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "4122:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 404,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "4131:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 401,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															650,
															710
														],
														"referencedDeclaration": 650,
														"src": "4106:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 395,
												"id": 408,
												"nodeType": "Return",
												"src": "4147:11:5"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:5",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "3996:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4013:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:5"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4052:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 393,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:5"
									},
									"scope": 759,
									"src": "3979:186:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										836
									],
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "4850:151:5",
										"statements": [
											{
												"assignments": [
													423
												],
												"declarations": [
													{
														"constant": false,
														"id": 423,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "4860:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 422,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 426,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 424,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "4878:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 428,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "4916:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 429,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "4922:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 430,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "4931:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 427,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "4900:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 434,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "4957:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 435,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "4963:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 436,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "4967:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 433,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "4947:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 421,
												"id": 440,
												"nodeType": "Return",
												"src": "4983:11:5"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:5",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "4779:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "4793:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "4805:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:5"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "4844:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:5"
									},
									"scope": 759,
									"src": "4757:244:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "5443:231:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 452,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "5457:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 453,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 466,
												"nodeType": "IfStatement",
												"src": "5453:86:5",
												"trueBody": {
													"id": 465,
													"nodeType": "Block",
													"src": "5477:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 461,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 459,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 458,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "5498:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 464,
															"nodeType": "RevertStatement",
															"src": "5491:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 467,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "5552:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 468,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 481,
												"nodeType": "IfStatement",
												"src": "5548:86:5",
												"trueBody": {
													"id": 480,
													"nodeType": "Block",
													"src": "5570:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 476,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 474,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 473,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "5591:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 479,
															"nodeType": "RevertStatement",
															"src": "5584:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 483,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "5651:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 484,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "5657:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "5661:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 482,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "5643:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:5"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5393:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5407:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5419:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:5"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:5"
									},
									"scope": 759,
									"src": "5374:300:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "6064:1032:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "6078:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 536,
													"nodeType": "Block",
													"src": "6252:362:5",
													"statements": [
														{
															"assignments": [
																511
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 511,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 536,
																	"src": "6266:19:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 510,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 515,
															"initialValue": {
																"baseExpression": {
																	"id": 512,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "6288:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 514,
																"indexExpression": {
																	"id": 513,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 492,
																	"src": "6298:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 516,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 511,
																	"src": "6321:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 517,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 496,
																	"src": "6335:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 526,
															"nodeType": "IfStatement",
															"src": "6317:115:5",
															"trueBody": {
																"id": 525,
																"nodeType": "Block",
																"src": "6342:90:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 520,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 492,
																					"src": "6392:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 521,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 511,
																					"src": "6398:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 522,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 496,
																					"src": "6411:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 519,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 119,
																				"src": "6367:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 524,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:5"
																	}
																]
															}
														},
														{
															"id": 535,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:5",
															"statements": [
																{
																	"expression": {
																		"id": 533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 527,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 267,
																				"src": "6552:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 529,
																			"indexExpression": {
																				"id": 528,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 492,
																				"src": "6562:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 530,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 511,
																				"src": "6570:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 531,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 496,
																				"src": "6584:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 534,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:5"
																}
															]
														}
													]
												},
												"id": 537,
												"nodeType": "IfStatement",
												"src": "6074:540:5",
												"trueBody": {
													"id": 509,
													"nodeType": "Block",
													"src": "6098:148:5",
													"statements": [
														{
															"expression": {
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 505,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 275,
																	"src": "6214:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 506,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 496,
																	"src": "6230:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 508,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 538,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "6628:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 539,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 557,
													"nodeType": "Block",
													"src": "6843:206:5",
													"statements": [
														{
															"id": 556,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:5",
															"statements": [
																{
																	"expression": {
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 550,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 267,
																				"src": "7002:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 552,
																			"indexExpression": {
																				"id": 551,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 494,
																				"src": "7012:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 553,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 496,
																			"src": "7019:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 555,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:5"
																}
															]
														}
													]
												},
												"id": 558,
												"nodeType": "IfStatement",
												"src": "6624:425:5",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6646:191:5",
													"statements": [
														{
															"id": 548,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:5",
															"statements": [
																{
																	"expression": {
																		"id": 546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 544,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 275,
																			"src": "6791:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 545,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 496,
																			"src": "6807:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 547,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:5"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 560,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "7073:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 561,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "7079:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 562,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "7083:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 559,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "7064:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 564,
												"nodeType": "EmitStatement",
												"src": "7059:30:5"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:5",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "6006:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "6020:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "6032:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:5"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:5"
									},
									"scope": 759,
									"src": "5989:1107:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "7495:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 574,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "7509:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 575,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 588,
												"nodeType": "IfStatement",
												"src": "7505:91:5",
												"trueBody": {
													"id": 587,
													"nodeType": "Block",
													"src": "7532:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 583,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 581,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 580,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "7553:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 586,
															"nodeType": "RevertStatement",
															"src": "7546:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 590,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 594,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "7625:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 595,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "7634:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 589,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "7605:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:5"
											}
										]
									},
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:5",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "7454:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "7471:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:5"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:5"
									},
									"scope": 759,
									"src": "7439:208:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "8021:150:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 607,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "8035:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 608,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 621,
												"nodeType": "IfStatement",
												"src": "8031:89:5",
												"trueBody": {
													"id": 620,
													"nodeType": "Block",
													"src": "8058:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 616,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 614,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 613,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "8079:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 619,
															"nodeType": "RevertStatement",
															"src": "8072:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 623,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "8137:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 624,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 628,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "8158:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 622,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "8129:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:5"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:5",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "7980:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "7997:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:5"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:5"
									},
									"scope": 759,
									"src": "7965:206:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "8781:54:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 643,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "8800:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 644,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "8807:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "8816:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 642,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															650,
															710
														],
														"referencedDeclaration": 710,
														"src": "8791:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:5"
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:5",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "8725:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "8740:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "8757:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:5"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:5"
									},
									"scope": 759,
									"src": "8707:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "9780:334:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 662,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "9794:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 663,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 666,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 676,
												"nodeType": "IfStatement",
												"src": "9790:89:5",
												"trueBody": {
													"id": 675,
													"nodeType": "Block",
													"src": "9815:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 671,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 669,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 668,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "9836:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 674,
															"nodeType": "RevertStatement",
															"src": "9829:39:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 677,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "9892:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 678,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 691,
												"nodeType": "IfStatement",
												"src": "9888:90:5",
												"trueBody": {
													"id": 690,
													"nodeType": "Block",
													"src": "9915:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 686,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 684,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 683,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "9936:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 689,
															"nodeType": "RevertStatement",
															"src": "9929:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 692,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "9987:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 695,
															"indexExpression": {
																"id": 693,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 653,
																"src": "9999:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 696,
														"indexExpression": {
															"id": 694,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "10006:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 697,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "10017:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:5"
											},
											{
												"condition": {
													"id": 700,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 659,
													"src": "10036:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 708,
												"nodeType": "IfStatement",
												"src": "10032:76:5",
												"trueBody": {
													"id": 707,
													"nodeType": "Block",
													"src": "10047:61:5",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 702,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 653,
																		"src": "10075:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 703,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 655,
																		"src": "10082:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 704,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 657,
																		"src": "10091:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 701,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "10066:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 706,
															"nodeType": "EmitStatement",
															"src": "10061:36:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:5",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "9700:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "9715:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "9732:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "9747:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 658,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:5"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:5"
									},
									"scope": 759,
									"src": "9682:432:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "10485:387:5",
										"statements": [
											{
												"assignments": [
													721
												],
												"declarations": [
													{
														"constant": false,
														"id": 721,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 757,
														"src": "10495:24:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 720,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 726,
												"initialValue": {
													"arguments": [
														{
															"id": 723,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "10532:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 724,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "10539:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 722,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "10522:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 727,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "10561:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 729,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 728,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 756,
												"nodeType": "IfStatement",
												"src": "10557:309:5",
												"trueBody": {
													"id": 755,
													"nodeType": "Block",
													"src": "10599:267:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 734,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 721,
																	"src": "10617:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 735,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 717,
																	"src": "10636:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 744,
															"nodeType": "IfStatement",
															"src": "10613:130:5",
															"trueBody": {
																"id": 743,
																"nodeType": "Block",
																"src": "10643:100:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 738,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 715,
																					"src": "10695:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 739,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 721,
																					"src": "10704:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 740,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 717,
																					"src": "10722:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 737,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 138,
																				"src": "10668:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 742,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:5"
																	}
																]
															}
														},
														{
															"id": 754,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:5",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 746,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 713,
																				"src": "10793:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 747,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 715,
																				"src": "10800:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 750,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 748,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 721,
																					"src": "10809:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 749,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 717,
																					"src": "10828:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 745,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				650,
																				710
																			],
																			"referencedDeclaration": 710,
																			"src": "10784:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 753,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:5"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:5",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "10421:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "10436:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "10453:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:5"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:5"
									},
									"scope": 759,
									"src": "10396:476:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 760,
							"src": "1106:9768:5",
							"usedErrors": [
								119,
								124,
								129,
								138,
								143,
								148
							],
							"usedEvents": [
								771,
								780
							]
						}
					],
					"src": "105:10770:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							837
						]
					},
					"id": 838,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 761,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 762,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:6",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 837,
							"linearizedBaseContracts": [
								837
							],
							"name": "IERC20",
							"nameLocation": "214:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 771,
									"name": "Transfer",
									"nameLocation": "396:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "405:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "427:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "447:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:6"
									},
									"src": "390:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 772,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 780,
									"name": "Approval",
									"nameLocation": "627:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "636:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "659:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:6"
									},
									"src": "621:78:6"
								},
								{
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 786,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:6"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "821:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:6"
									},
									"scope": 837,
									"src": "775:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 794,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "931:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:6"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "971:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:6"
									},
									"scope": 837,
									"src": "912:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 804,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "1222:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "1234:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:6"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "1267:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 801,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:6"
									},
									"scope": 837,
									"src": "1204:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 814,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "1567:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "1582:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:6"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "1622:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:6"
									},
									"scope": 837,
									"src": "1548:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 824,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "2326:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "2343:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:6"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "2376:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 821,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:6"
									},
									"scope": 837,
									"src": "2309:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 836,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "2712:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "2726:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "2738:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:6"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "2771:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 833,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:6"
									},
									"scope": 837,
									"src": "2690:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 838,
							"src": "204:2575:6",
							"usedErrors": [],
							"usedEvents": [
								771,
								780
							]
						}
					],
					"src": "106:2674:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							837
						],
						"IERC20Metadata": [
							863
						]
					},
					"id": 864,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 839,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 841,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 864,
							"sourceUnit": 838,
							"src": "151:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 840,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 837,
										"src": "159:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 843,
										"name": "IERC20",
										"nameLocations": [
											"306:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 837,
										"src": "306:6:7"
									},
									"id": 844,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:7"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 842,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:7",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 863,
							"linearizedBaseContracts": [
								863,
								837
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 850,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:7"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "417:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 847,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:7"
									},
									"scope": 863,
									"src": "378:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:7",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 856,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:7"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "540:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 853,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:7"
									},
									"scope": 863,
									"src": "499:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:7",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 862,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:7"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "674:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 859,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:7"
									},
									"scope": 863,
									"src": "631:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 864,
							"src": "278:405:7",
							"usedErrors": [],
							"usedEvents": [
								771,
								780
							]
						}
					],
					"src": "125:559:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1123
						],
						"Errors": [
							1175
						]
					},
					"id": 1124,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 865,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 867,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1124,
							"sourceUnit": 1176,
							"src": "127:36:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 866,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1175,
										"src": "135:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 868,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1123,
							"linearizedBaseContracts": [
								1123
							],
							"name": "Address",
							"nameLocation": "241:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:8",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 873,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "358:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:8"
									},
									"src": "335:39:8"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "1361:294:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 883,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1123",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1123",
																		"typeString": "library Address"
																	}
																],
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 881,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 886,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "1399:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 900,
												"nodeType": "IfStatement",
												"src": "1371:125:8",
												"trueBody": {
													"id": 899,
													"nodeType": "Block",
													"src": "1407:89:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 893,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1123",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1123",
																						"typeString": "library Address"
																					}
																				],
																				"id": 892,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 891,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:8",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 896,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 878,
																		"src": "1478:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 888,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1175,
																		"src": "1428:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1175_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:8",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1163,
																	"src": "1428:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 898,
															"nodeType": "RevertStatement",
															"src": "1421:64:8"
														}
													]
												}
											},
											{
												"assignments": [
													902,
													904
												],
												"declarations": [
													{
														"constant": false,
														"id": 902,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 920,
														"src": "1507:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 901,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 904,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "1534:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 920,
														"src": "1521:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 903,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1521:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 911,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1578:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 905,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "1548:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1558:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1548:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 908,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 907,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 878,
																"src": "1570:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1548:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:75:8"
											},
											{
												"condition": {
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1595:8:8",
													"subExpression": {
														"id": 912,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "1596:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 919,
												"nodeType": "IfStatement",
												"src": "1591:58:8",
												"trueBody": {
													"id": 918,
													"nodeType": "Block",
													"src": "1605:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 915,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 904,
																		"src": "1627:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 914,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1122,
																	"src": "1619:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1619:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 917,
															"nodeType": "ExpressionStatement",
															"src": "1619:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "1309:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "1336:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:8"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:8"
									},
									"scope": 1123,
									"src": "1290:365:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "2589:62:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 932,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "2628:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 933,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "2636:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2642:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 931,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "2606:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 930,
												"id": 936,
												"nodeType": "Return",
												"src": "2599:45:8"
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "1661:834:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2509:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2530:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "2522:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2551:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "2538:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 925,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2538:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:35:8"
									},
									"returnParameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "2575:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 928,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2575:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:14:8"
									},
									"scope": 1123,
									"src": "2500:151:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 987,
										"nodeType": "Block",
										"src": "3088:294:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 952,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3110:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1123",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1123",
																		"typeString": "library Address"
																	}
																],
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3102:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 950,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3102:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3102:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3116:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3102:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 955,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "3126:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3102:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 969,
												"nodeType": "IfStatement",
												"src": "3098:123:8",
												"trueBody": {
													"id": 968,
													"nodeType": "Block",
													"src": "3133:88:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 962,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3189:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1123",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1123",
																						"typeString": "library Address"
																					}
																				],
																				"id": 961,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3181:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 960,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3181:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 963,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3181:13:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3195:7:8",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3181:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 965,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 945,
																		"src": "3204:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 957,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1175,
																		"src": "3154:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1175_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3161:19:8",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1163,
																	"src": "3154:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3154:56:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 967,
															"nodeType": "RevertStatement",
															"src": "3147:63:8"
														}
													]
												}
											},
											{
												"assignments": [
													971,
													973
												],
												"declarations": [
													{
														"constant": false,
														"id": 971,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3236:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 987,
														"src": "3231:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 970,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3231:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 973,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3258:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 987,
														"src": "3245:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 972,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3245:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 980,
												"initialValue": {
													"arguments": [
														{
															"id": 978,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "3298:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 974,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "3272:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3279:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3272:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 976,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "3291:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3272:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3272:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3230:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 982,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "3347:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 983,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "3355:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 984,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "3364:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 981,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "3320:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3320:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 949,
												"id": 986,
												"nodeType": "Return",
												"src": "3313:62:8"
											}
										]
									},
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "2657:313:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2984:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3014:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "3006:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3035:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "3022:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 942,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3022:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3049:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "3041:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:50:8"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "3074:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 947,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3074:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:14:8"
									},
									"scope": 1123,
									"src": "2975:407:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "3621:154:8",
										"statements": [
											{
												"assignments": [
													999,
													1001
												],
												"declarations": [
													{
														"constant": false,
														"id": 999,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3637:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1013,
														"src": "3632:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 998,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3632:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1001,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3659:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1013,
														"src": "3646:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1000,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3646:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1006,
												"initialValue": {
													"arguments": [
														{
															"id": 1004,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "3691:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1002,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "3673:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3680:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3673:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3673:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3631:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1008,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "3740:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1009,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "3748:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1010,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "3757:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1007,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "3713:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3713:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 997,
												"id": 1012,
												"nodeType": "Return",
												"src": "3706:62:8"
											}
										]
									},
									"documentation": {
										"id": 989,
										"nodeType": "StructuredDocumentation",
										"src": "3388:128:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3530:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3557:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "3549:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3578:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "3565:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 992,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3565:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:35:8"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "3607:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 995,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3607:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3606:14:8"
									},
									"scope": 1123,
									"src": "3521:254:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "4013:156:8",
										"statements": [
											{
												"assignments": [
													1025,
													1027
												],
												"declarations": [
													{
														"constant": false,
														"id": 1025,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4029:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1039,
														"src": "4024:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1024,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4024:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1027,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4051:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1039,
														"src": "4038:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1026,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4038:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1032,
												"initialValue": {
													"arguments": [
														{
															"id": 1030,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "4085:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1028,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "4065:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4072:12:8",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4065:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4065:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4023:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1034,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "4134:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1035,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "4142:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1036,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "4151:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1033,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "4107:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4107:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1023,
												"id": 1038,
												"nodeType": "Return",
												"src": "4100:62:8"
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "3781:130:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3925:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3954:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3946:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3975:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3962:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1018,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3962:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:35:8"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "3999:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1021,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3999:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:14:8"
									},
									"scope": 1123,
									"src": "3916:253:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "4595:424:8",
										"statements": [
											{
												"condition": {
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4609:8:8",
													"subExpression": {
														"id": 1052,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "4610:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1077,
													"nodeType": "Block",
													"src": "4669:344:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1059,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1047,
																			"src": "4857:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4868:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4857:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4878:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4857:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1063,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1043,
																				"src": "4883:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4890:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4883:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4895:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4883:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4905:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4883:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4857:49:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1074,
															"nodeType": "IfStatement",
															"src": "4853:119:8",
															"trueBody": {
																"id": 1073,
																"nodeType": "Block",
																"src": "4908:64:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1070,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1043,
																					"src": "4950:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1069,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 873,
																				"src": "4933:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4933:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1072,
																		"nodeType": "RevertStatement",
																		"src": "4926:31:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1075,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1047,
																"src": "4992:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1051,
															"id": 1076,
															"nodeType": "Return",
															"src": "4985:17:8"
														}
													]
												},
												"id": 1078,
												"nodeType": "IfStatement",
												"src": "4605:408:8",
												"trueBody": {
													"id": 1058,
													"nodeType": "Block",
													"src": "4619:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1055,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1047,
																		"src": "4641:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1054,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1122,
																	"src": "4633:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4633:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1057,
															"nodeType": "ExpressionStatement",
															"src": "4633:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "4175:257:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4446:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4490:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "4482:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4511:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "4506:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1044,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4506:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4541:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "4528:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1046,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4528:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:85:8"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "4581:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1049,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4581:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4580:14:8"
									},
									"scope": 1123,
									"src": "4437:582:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1101,
										"nodeType": "Block",
										"src": "5323:122:8",
										"statements": [
											{
												"condition": {
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5337:8:8",
													"subExpression": {
														"id": 1090,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "5338:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1099,
													"nodeType": "Block",
													"src": "5397:42:8",
													"statements": [
														{
															"expression": {
																"id": 1097,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "5418:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1089,
															"id": 1098,
															"nodeType": "Return",
															"src": "5411:17:8"
														}
													]
												},
												"id": 1100,
												"nodeType": "IfStatement",
												"src": "5333:106:8",
												"trueBody": {
													"id": 1096,
													"nodeType": "Block",
													"src": "5347:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1093,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1085,
																		"src": "5369:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1092,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1122,
																	"src": "5361:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5361:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1095,
															"nodeType": "ExpressionStatement",
															"src": "5361:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "5025:191:8",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5230:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5252:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "5247:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1082,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5247:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5274:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "5261:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1084,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5261:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:39:8"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "5309:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1087,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5309:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:14:8"
									},
									"scope": 1123,
									"src": "5221:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1121,
										"nodeType": "Block",
										"src": "5614:432:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1108,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "5690:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5701:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5690:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5710:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5690:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1119,
													"nodeType": "Block",
													"src": "5989:51:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1114,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1175,
																		"src": "6010:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1175_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6017:10:8",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1166,
																	"src": "6010:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6010:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1118,
															"nodeType": "RevertStatement",
															"src": "6003:26:8"
														}
													]
												},
												"id": 1120,
												"nodeType": "IfStatement",
												"src": "5686:354:8",
												"trueBody": {
													"id": 1113,
													"nodeType": "Block",
													"src": "5713:270:8",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5840:133:8",
																"nodeType": "YulBlock",
																"src": "5840:133:8",
																"statements": [
																	{
																		"nativeSrc": "5858:40:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5858:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5887:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "5887:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5881:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5881:5:8"
																			},
																			"nativeSrc": "5881:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5881:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5862:15:8",
																				"nodeType": "YulTypedName",
																				"src": "5862:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5926:2:8",
																							"nodeType": "YulLiteral",
																							"src": "5926:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5930:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "5930:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5922:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "5922:3:8"
																					},
																					"nativeSrc": "5922:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5922:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5943:15:8",
																					"nodeType": "YulIdentifier",
																					"src": "5943:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5915:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5915:6:8"
																			},
																			"nativeSrc": "5915:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5915:44:8"
																		},
																		"nativeSrc": "5915:44:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5915:44:8"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1105,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5887:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1105,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5930:10:8",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1112,
															"nodeType": "InlineAssembly",
															"src": "5815:158:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1103,
										"nodeType": "StructuredDocumentation",
										"src": "5451:103:8",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5568:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5589:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "5576:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1104,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5576:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5575:25:8"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5614:0:8"
									},
									"scope": 1123,
									"src": "5559:487:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1124,
							"src": "233:5815:8",
							"usedErrors": [
								873
							],
							"usedEvents": []
						}
					],
					"src": "101:5948:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1153
						]
					},
					"id": 1154,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1125,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1126,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1153,
							"linearizedBaseContracts": [
								1153
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1134,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1131,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1130,
												"id": 1133,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 1135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 1153,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1140,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1139,
												"id": 1142,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1137,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 1153,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1148,
												"id": 1150,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 1153,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1154,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1175
						]
					},
					"id": 1176,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1155,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1156,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:10",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1175,
							"linearizedBaseContracts": [
								1175
							],
							"name": "Errors",
							"nameLocation": "419:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1157,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:10",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1163,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "557:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "574:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:10"
									},
									"src": "531:59:10"
								},
								{
									"documentation": {
										"id": 1164,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:10",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1166,
									"name": "FailedCall",
									"nameLocation": "696:10:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:10"
									},
									"src": "690:19:10"
								},
								{
									"documentation": {
										"id": 1167,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:10",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1169,
									"name": "FailedDeployment",
									"nameLocation": "772:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:10"
									},
									"src": "766:25:10"
								},
								{
									"documentation": {
										"id": 1170,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:10",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1174,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "884:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:10"
									},
									"src": "860:33:10"
								}
							],
							"scope": 1176,
							"src": "411:484:10",
							"usedErrors": [
								1163,
								1166,
								1169,
								1174
							],
							"usedEvents": []
						}
					],
					"src": "100:796:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1187
						]
					},
					"id": 1188,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1178,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:11",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1187,
							"linearizedBaseContracts": [
								1187
							],
							"name": "IERC165",
							"nameLocation": "432:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "818:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1180,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:11"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "861:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1183,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:11"
									},
									"scope": 1187,
									"src": "791:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1188,
							"src": "422:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:11"
				},
				"id": 11
			},
			"contracts/ERC20_Demo/ERC1363/erc1363.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20_Demo/ERC1363/erc1363.sol",
					"exportedSymbols": {
						"Address": [
							1123
						],
						"Context": [
							1153
						],
						"ERC20": [
							759
						],
						"Errors": [
							1175
						],
						"IERC1363": [
							81
						],
						"IERC1363Receiver": [
							99
						],
						"IERC165": [
							1187
						],
						"IERC20": [
							837
						],
						"IERC20Errors": [
							149
						],
						"IERC20Metadata": [
							863
						],
						"MyToken": [
							1384
						]
					},
					"id": 1385,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1189,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1190,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1385,
							"sourceUnit": 760,
							"src": "58:55:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"id": 1191,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1385,
							"sourceUnit": 82,
							"src": "114:57:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363Receiver.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC1363Receiver.sol",
							"id": 1193,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1385,
							"sourceUnit": 100,
							"src": "173:90:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1192,
										"name": "IERC1363Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 99,
										"src": "181:16:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 1194,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1385,
							"sourceUnit": 1124,
							"src": "264:51:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1195,
										"name": "ERC20",
										"nameLocations": [
											"407:5:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 759,
										"src": "407:5:12"
									},
									"id": 1196,
									"nodeType": "InheritanceSpecifier",
									"src": "407:5:12"
								},
								{
									"baseName": {
										"id": 1197,
										"name": "IERC1363",
										"nameLocations": [
											"414:8:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 81,
										"src": "414:8:12"
									},
									"id": 1198,
									"nodeType": "InheritanceSpecifier",
									"src": "414:8:12"
								}
							],
							"canonicalName": "MyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1384,
							"linearizedBaseContracts": [
								1384,
								81,
								1187,
								759,
								149,
								863,
								837,
								1153
							],
							"name": "MyToken",
							"nameLocation": "396:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1201,
									"libraryName": {
										"id": 1199,
										"name": "Address",
										"nameLocations": [
											"435:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1123,
										"src": "435:7:12"
									},
									"nodeType": "UsingForDirective",
									"src": "429:26:12",
									"typeName": {
										"id": 1200,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "447:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1216,
										"nodeType": "Block",
										"src": "520:49:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1211,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "536:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "540:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "536:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1213,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "548:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1210,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "530:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "530:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "530:32:12"
											}
										]
									},
									"id": 1217,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d79546f6b656e",
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "502:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
														"typeString": "literal_string \"MyToken\""
													},
													"value": "MyToken"
												},
												{
													"hexValue": "4d544b",
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "513:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
														"typeString": "literal_string \"MTK\""
													},
													"value": "MTK"
												}
											],
											"id": 1208,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1205,
												"name": "ERC20",
												"nameLocations": [
													"496:5:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 759,
												"src": "496:5:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "496:23:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "481:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "473:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:23:12"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "520:0:12"
									},
									"scope": 1384,
									"src": "461:108:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										20
									],
									"body": {
										"id": 1229,
										"nodeType": "Block",
										"src": "666:28:12",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "683:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1226,
												"id": 1228,
												"nodeType": "Return",
												"src": "676:11:12"
											}
										]
									},
									"functionSelector": "1296ee62",
									"id": 1230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "585:15:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1223,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "637:8:12"
									},
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "609:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "601:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "621:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "613:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:27:12"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "660:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "660:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "659:6:12"
									},
									"scope": 1384,
									"src": "576:118:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										32
									],
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "835:191:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1243,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "854:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1244,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "858:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1242,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "845:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "845:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1246,
												"nodeType": "ExpressionStatement",
												"src": "845:19:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1249,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "928:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "932:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "928:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1251,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1232,
																	"src": "940:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1252,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1234,
																	"src": "944:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1253,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1236,
																	"src": "951:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																],
																"id": 1248,
																"name": "_checkAndCallTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1312,
																"src": "906:21:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "906:50:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313336333a205f636865636b416e6443616c6c5472616e73666572206661696c6564",
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "958:39:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_767d08b4043dcc0a72fe6da23c3e15169075e0c3845c64dad35d2bf3849edad9",
																"typeString": "literal_string \"ERC1363: _checkAndCallTransfer failed\""
															},
															"value": "ERC1363: _checkAndCallTransfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_767d08b4043dcc0a72fe6da23c3e15169075e0c3845c64dad35d2bf3849edad9",
																"typeString": "literal_string \"ERC1363: _checkAndCallTransfer failed\""
															}
														],
														"id": 1247,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "898:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "898:100:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "898:100:12"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1015:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1241,
												"id": 1259,
												"nodeType": "Return",
												"src": "1008:11:12"
											}
										]
									},
									"functionSelector": "4000aea0",
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "738:15:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1238,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "811:8:12"
									},
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "762:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "754:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "774:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "766:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "796:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "781:19:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1235,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "781:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "753:48:12"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "829:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1239,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "829:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:6:12"
									},
									"scope": 1384,
									"src": "729:297:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "1197:418:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1274,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "1211:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1214:4:12",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1211:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1219:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1211:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1277,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1228:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1211:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1308,
												"nodeType": "IfStatement",
												"src": "1207:381:12",
												"trueBody": {
													"id": 1307,
													"nodeType": "Block",
													"src": "1231:357:12",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1298,
																		"nodeType": "Block",
																		"src": "1400:94:12",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1296,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1292,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1290,
																						"src": "1425:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1293,
																								"name": "IERC1363Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 99,
																								"src": "1435:16:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1363Receiver_$99_$",
																									"typeString": "type(contract IERC1363Receiver)"
																								}
																							},
																							"id": 1294,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "1452:18:12",
																							"memberName": "onTransferReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 98,
																							"src": "1435:35:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1363Receiver.onTransferReceived(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1295,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "1471:8:12",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "1435:44:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "1425:54:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 1273,
																				"id": 1297,
																				"nodeType": "Return",
																				"src": "1418:61:12"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1299,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1291,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1290,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "1392:6:12",
																				"nodeType": "VariableDeclaration",
																				"scope": 1299,
																				"src": "1385:13:12",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1289,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "1385:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "1384:15:12"
																	},
																	"src": "1376:118:12"
																},
																{
																	"block": {
																		"id": 1304,
																		"nodeType": "Block",
																		"src": "1501:77:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313336333a206f6e5472616e736665725265636569766564206661696c6564",
																							"id": 1301,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1526:36:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_2d6ba6a21b441acbb28fc61d7d2718aa2ce0e43522a0a02e0ab6d7ec526529d5",
																								"typeString": "literal_string \"ERC1363: onTransferReceived failed\""
																							},
																							"value": "ERC1363: onTransferReceived failed"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_2d6ba6a21b441acbb28fc61d7d2718aa2ce0e43522a0a02e0ab6d7ec526529d5",
																								"typeString": "literal_string \"ERC1363: onTransferReceived failed\""
																							}
																						],
																						"id": 1300,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "1519:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1302,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1519:44:12",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1303,
																				"nodeType": "ExpressionStatement",
																				"src": "1519:44:12"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1305,
																	"nodeType": "TryCatchClause",
																	"src": "1495:83:12"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1283,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1345:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1349:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1345:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1285,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "1357:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1286,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1267,
																		"src": "1363:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1287,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1269,
																		"src": "1370:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1280,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1265,
																				"src": "1322:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1279,
																			"name": "IERC1363Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 99,
																			"src": "1305:16:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1363Receiver_$99_$",
																				"typeString": "type(contract IERC1363Receiver)"
																			}
																		},
																		"id": 1281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1305:20:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363Receiver_$99",
																			"typeString": "contract IERC1363Receiver"
																		}
																	},
																	"id": 1282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1326:18:12",
																	"memberName": "onTransferReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 98,
																	"src": "1305:39:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1305:70:12",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1306,
															"nodeType": "TryStatement",
															"src": "1301:277:12"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1604:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1273,
												"id": 1310,
												"nodeType": "Return",
												"src": "1597:11:12"
											}
										]
									},
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAndCallTransfer",
									"nameLocation": "1091:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1121:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "1113:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1135:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "1127:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1127:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1147:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "1139:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1167:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "1154:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1154:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1112:60:12"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "1191:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1191:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1190:6:12"
									},
									"scope": 1384,
									"src": "1082:533:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 1326,
										"nodeType": "Block",
										"src": "1729:28:12",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1746:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1323,
												"id": 1325,
												"nodeType": "Return",
												"src": "1739:11:12"
											}
										]
									},
									"functionSelector": "d8fbe994",
									"id": 1327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "1630:19:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1320,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1700:8:12"
									},
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1658:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1650:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1650:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1672:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1664:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1684:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1676:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1676:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1649:41:12"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1723:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1321,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1723:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1722:6:12"
									},
									"scope": 1384,
									"src": "1621:136:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										58
									],
									"body": {
										"id": 1343,
										"nodeType": "Block",
										"src": "1892:28:12",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1909:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1340,
												"id": 1342,
												"nodeType": "Return",
												"src": "1902:11:12"
											}
										]
									},
									"functionSelector": "c1d34b89",
									"id": 1344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "1772:19:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1337,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1854:8:12"
									},
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1800:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "1792:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1792:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1814:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "1806:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1806:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1826:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "1818:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1848:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "1833:19:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1334,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1833:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1791:62:12"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "1886:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1338,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1886:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1885:6:12"
									},
									"scope": 1384,
									"src": "1763:157:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										68
									],
									"body": {
										"id": 1356,
										"nodeType": "Block",
										"src": "2021:28:12",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2038:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1353,
												"id": 1355,
												"nodeType": "Return",
												"src": "2031:11:12"
											}
										]
									},
									"functionSelector": "3177029f",
									"id": 1357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "1935:14:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1350,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1997:8:12"
									},
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1958:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "1950:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1975:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "1967:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1967:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:32:12"
									},
									"returnParameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "2015:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1351,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2015:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2014:6:12"
									},
									"scope": 1384,
									"src": "1926:123:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										80
									],
									"body": {
										"id": 1371,
										"nodeType": "Block",
										"src": "2170:28:12",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2187:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1368,
												"id": 1370,
												"nodeType": "Return",
												"src": "2180:11:12"
											}
										]
									},
									"functionSelector": "cae9ca51",
									"id": 1372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "2064:14:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1365,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2132:8:12"
									},
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2087:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2079:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2079:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2104:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2096:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2096:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2126:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2111:19:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1362,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2111:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2078:53:12"
									},
									"returnParameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2164:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1366,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2164:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2163:6:12"
									},
									"scope": 1384,
									"src": "2055:143:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1186
									],
									"body": {
										"id": 1382,
										"nodeType": "Block",
										"src": "2289:28:12",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2306:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1379,
												"id": 1381,
												"nodeType": "Return",
												"src": "2299:11:12"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 1383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2213:17:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1376,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2260:8:12"
									},
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2238:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "2231:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1373,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2231:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2230:20:12"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "2283:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1377,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2283:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2282:6:12"
									},
									"scope": 1384,
									"src": "2204:113:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1385,
							"src": "387:2009:12",
							"usedErrors": [
								119,
								124,
								129,
								138,
								143,
								148
							],
							"usedEvents": [
								771,
								780
							]
						}
					],
					"src": "32:2364:12"
				},
				"id": 12
			}
		}
	}
}