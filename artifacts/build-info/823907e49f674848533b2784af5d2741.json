{
	"id": "823907e49f674848533b2784af5d2741",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Ddfi_lpl/valut/vault02.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.27;\n\nimport {IERC4626} from \"@openzeppelin/contracts/interfaces/IERC4626.sol\";\n\nimport {ERC20, IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract ERC4626 is ERC20, IERC4626 {\n    // 金库的基础资产代币\n    ERC20 private immutable _asset;\n    constructor(\n        ERC20 asset_,\n        string memory name_,\n        string memory symbol_\n    ) ERC20(name_, symbol_) {\n        _asset = asset_;\n    }\n    // 返回基础代币的地址\n    function asset() public view virtual override returns (address) {\n        return address(_asset);\n    }\n    // 就买1块钱，不管返回多少的shares\n    function deposit(\n        uint256 assets,\n        address receiver\n    ) public virtual returns (uint256 shares) {\n        // receiver 可以充值给另外地址\n        // 利用 previewDeposit() 计算将获得的金库份额\n        shares = previewDeposit(assets);\n\n        // 先 transfer 后 mint，防止重入\n        _asset.transferFrom(msg.sender, address(this), assets);\n        _mint(receiver, shares);\n\n        // 释放 Deposit 事件\n        emit Deposit(msg.sender, receiver, assets, shares);\n    }\n\n    // 用户就买多少shares，然后看要充多少基础代币\n    function mint(\n        uint256 shares,\n        address receiver\n    ) public virtual returns (uint256 assets) {\n        // 利用 previewMint() 计算需要存款的基础资产数额\n        assets = previewMint(shares);\n\n        // 先 transfer 后 mint，防止重入\n        _asset.transferFrom(msg.sender, address(this), assets);\n        _mint(receiver, shares);\n\n        // 释放 Deposit 事件\n        emit Deposit(msg.sender, receiver, assets, shares);\n    }\n\n    // \n    function withdraw(\n        uint256 assets,\n        address receiver,\n        address owner\n    ) public virtual returns (uint256 shares) {\n        // 利用 previewWithdraw() 计算将销毁的金库份额\n        shares = previewWithdraw(assets);\n\n        // 如果调用者不是 owner，则检查并更新授权\n        if (msg.sender != owner) {\n            _spendAllowance(owner, msg.sender, shares);\n        }\n\n        // 先销毁后 transfer，防止重入，一般 owner 等于操作者自己\n        _burn(owner, shares);\n        // 从合约valut02 转入 = assets 的基础代币给 receiver\n        _asset.transfer(receiver, assets);\n\n        // 释放 Withdraw 事件\n        emit Withdraw(msg.sender, receiver, owner, assets, shares);\n    }\n\n    // C把A的share给兑出来，冲给receiver \n    // 通过shares,返回要赎回的基础代币资产\n    function redeem(\n        uint256 shares,\n        address receiver,\n        address owner\n    ) public virtual returns (uint256 assets) {\n        // 利用 previewRedeem() 计算能赎回的基础资产数额\n        assets = previewRedeem(shares);\n\n        // 如果调用者不是 owner，则检查并更新授权\n        if (msg.sender != owner) {\n            _spendAllowance(owner, msg.sender, shares);\n        }\n\n        // 先销毁后 transfer，防止重入\n        _burn(owner, shares);\n        _asset.transfer(receiver, assets);\n\n        // 释放 Withdraw 事件\n        emit Withdraw(msg.sender, receiver, owner, assets, shares);\n    }\n    // 返回金库管理的基础代币总额\n    function totalAssets() public view virtual returns (uint256) {\n        // 返回合约中基础资产持仓\n        return _asset.balanceOf(address(this));\n    }\n\n    //核心方法 assets -> shares 数量估计\n    function convertToShares(\n        uint256 assets\n    ) public view virtual returns (uint256) {\n        uint256 supply = totalSupply();\n        // 如果 supply 为 0，那么 1:1 铸造金库份额\n        // 如果 supply 不为0，那么按比例铸造\n        return supply == 0 ? assets : (assets * supply) / totalAssets();\n    }\n\n    // 核心方法  shares -> assets 数量估计，我要拿到这么多的shares,然后要充多少钱进来\n    function convertToAssets(\n        uint256 shares\n    ) public view virtual returns (uint256) {\n        uint256 supply = totalSupply();\n        // 如果 supply 为 0，那么 1:1 赎回基础资产\n        // 如果 supply 不为0，那么按比例赎回\n        return supply == 0 ? shares : (shares * totalAssets()) / supply;\n    }\n\n    // 通过输入基础代币，看可以获得多少shares\n    function previewDeposit(\n        uint256 assets\n    ) public view virtual returns (uint256) {\n        return convertToShares(assets);\n    }\n\n    // 通过输入shares, 看可以返回多少基础代币\n    function previewMint(uint256 shares) public view virtual returns (uint256) {\n        return convertToAssets(shares);\n    }\n\n    // 通过输入基础代币，看可以获得多少shares\n    function previewWithdraw(\n        uint256 assets\n    ) public view virtual returns (uint256) {\n        return convertToShares(assets);\n    }\n\n    // 通过输入shares, 看可以返回多少基础代币\n    function previewRedeem(\n        uint256 shares\n    ) public view virtual returns (uint256) {\n        return convertToAssets(shares);\n    }\n\n    //最大的充值量，充多少基础代币，获得多少的shares \n    function maxDeposit(address) public view virtual returns (uint256) {\n        return type(uint256).max;\n    }\n\n    // 最大的可获得shares量\n    function maxMint(address) public view virtual returns (uint256) {\n        return type(uint256).max;\n    }\n    \n    // 最大的可以取回的基础金币总量\n    function maxWithdraw(address owner) public view virtual returns (uint256) {\n        return convertToAssets(balanceOf(owner));\n    }\n\n    // 最大的可以获得的shares总量\n    function maxRedeem(address owner) public view virtual returns (uint256) {\n        return balanceOf(owner);\n    }\n}\n\n// slippage 滑点～～～"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC4626.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC4626.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"../token/ERC20/extensions/IERC20Metadata.sol\";\n\n/**\n * @dev Interface of the ERC-4626 \"Tokenized Vault Standard\", as defined in\n * https://eips.ethereum.org/EIPS/eip-4626[ERC-4626].\n */\ninterface IERC4626 is IERC20, IERC20Metadata {\n    event Deposit(address indexed sender, address indexed owner, uint256 assets, uint256 shares);\n\n    event Withdraw(\n        address indexed sender,\n        address indexed receiver,\n        address indexed owner,\n        uint256 assets,\n        uint256 shares\n    );\n\n    /**\n     * @dev Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing.\n     *\n     * - MUST be an ERC-20 token contract.\n     * - MUST NOT revert.\n     */\n    function asset() external view returns (address assetTokenAddress);\n\n    /**\n     * @dev Returns the total amount of the underlying asset that is “managed” by Vault.\n     *\n     * - SHOULD include any compounding that occurs from yield.\n     * - MUST be inclusive of any fees that are charged against assets in the Vault.\n     * - MUST NOT revert.\n     */\n    function totalAssets() external view returns (uint256 totalManagedAssets);\n\n    /**\n     * @dev Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal\n     * scenario where all the conditions are met.\n     *\n     * - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n     * - MUST NOT show any variations depending on the caller.\n     * - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n     * - MUST NOT revert.\n     *\n     * NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n     * “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n     * from.\n     */\n    function convertToShares(uint256 assets) external view returns (uint256 shares);\n\n    /**\n     * @dev Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal\n     * scenario where all the conditions are met.\n     *\n     * - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n     * - MUST NOT show any variations depending on the caller.\n     * - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n     * - MUST NOT revert.\n     *\n     * NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n     * “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n     * from.\n     */\n    function convertToAssets(uint256 shares) external view returns (uint256 assets);\n\n    /**\n     * @dev Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver,\n     * through a deposit call.\n     *\n     * - MUST return a limited value if receiver is subject to some deposit limit.\n     * - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited.\n     * - MUST NOT revert.\n     */\n    function maxDeposit(address receiver) external view returns (uint256 maxAssets);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given\n     * current on-chain conditions.\n     *\n     * - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit\n     *   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called\n     *   in the same transaction.\n     * - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the\n     *   deposit would be accepted, regardless if the user has enough tokens approved, etc.\n     * - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by depositing.\n     */\n    function previewDeposit(uint256 assets) external view returns (uint256 shares);\n\n    /**\n     * @dev Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens.\n     *\n     * - MUST emit the Deposit event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n     *   deposit execution, and are accounted for during deposit.\n     * - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not\n     *   approving enough underlying tokens to the Vault contract, etc).\n     *\n     * NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token.\n     */\n    function deposit(uint256 assets, address receiver) external returns (uint256 shares);\n\n    /**\n     * @dev Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call.\n     * - MUST return a limited value if receiver is subject to some mint limit.\n     * - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted.\n     * - MUST NOT revert.\n     */\n    function maxMint(address receiver) external view returns (uint256 maxShares);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given\n     * current on-chain conditions.\n     *\n     * - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call\n     *   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the\n     *   same transaction.\n     * - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint\n     *   would be accepted, regardless if the user has enough tokens approved, etc.\n     * - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by minting.\n     */\n    function previewMint(uint256 shares) external view returns (uint256 assets);\n\n    /**\n     * @dev Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens.\n     *\n     * - MUST emit the Deposit event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint\n     *   execution, and are accounted for during mint.\n     * - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not\n     *   approving enough underlying tokens to the Vault contract, etc).\n     *\n     * NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token.\n     */\n    function mint(uint256 shares, address receiver) external returns (uint256 assets);\n\n    /**\n     * @dev Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the\n     * Vault, through a withdraw call.\n     *\n     * - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n     * - MUST NOT revert.\n     */\n    function maxWithdraw(address owner) external view returns (uint256 maxAssets);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block,\n     * given current on-chain conditions.\n     *\n     * - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw\n     *   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if\n     *   called\n     *   in the same transaction.\n     * - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though\n     *   the withdrawal would be accepted, regardless if the user has enough shares, etc.\n     * - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by depositing.\n     */\n    function previewWithdraw(uint256 assets) external view returns (uint256 shares);\n\n    /**\n     * @dev Burns shares from owner and sends exactly assets of underlying tokens to receiver.\n     *\n     * - MUST emit the Withdraw event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n     *   withdraw execution, and are accounted for during withdraw.\n     * - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner\n     *   not having enough shares, etc).\n     *\n     * Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n     * Those methods should be performed separately.\n     */\n    function withdraw(uint256 assets, address receiver, address owner) external returns (uint256 shares);\n\n    /**\n     * @dev Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault,\n     * through a redeem call.\n     *\n     * - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n     * - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock.\n     * - MUST NOT revert.\n     */\n    function maxRedeem(address owner) external view returns (uint256 maxShares);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their redemption at the current block,\n     * given current on-chain conditions.\n     *\n     * - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call\n     *   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the\n     *   same transaction.\n     * - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the\n     *   redemption would be accepted, regardless if the user has enough shares, etc.\n     * - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by redeeming.\n     */\n    function previewRedeem(uint256 shares) external view returns (uint256 assets);\n\n    /**\n     * @dev Burns exactly shares from owner and sends assets of underlying tokens to receiver.\n     *\n     * - MUST emit the Withdraw event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n     *   redeem execution, and are accounted for during redeem.\n     * - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner\n     *   not having enough shares, etc).\n     *\n     * NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n     * Those methods should be performed separately.\n     */\n    function redeem(uint256 shares, address receiver, address owner) external returns (uint256 assets);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC4626.sol": {
				"IERC4626": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "asset",
							"outputs": [
								{
									"internalType": "address",
									"name": "assetTokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "convertToAssets",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"name": "convertToShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "maxDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "maxAssets",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "maxMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "maxShares",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "maxRedeem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "maxShares",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "maxWithdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "maxAssets",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"name": "previewDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "previewMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "previewRedeem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"name": "previewWithdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "redeem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAssets",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalManagedAssets",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-4626 \"Tokenized Vault Standard\", as defined in https://eips.ethereum.org/EIPS/eip-4626[ERC-4626].",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"asset()": {
								"details": "Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"convertToAssets(uint256)": {
								"details": "Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and from."
							},
							"convertToShares(uint256)": {
								"details": "Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and from."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"deposit(uint256,address)": {
								"details": "Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."
							},
							"maxDeposit(address)": {
								"details": "Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver, through a deposit call. - MUST return a limited value if receiver is subject to some deposit limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited. - MUST NOT revert."
							},
							"maxMint(address)": {
								"details": "Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call. - MUST return a limited value if receiver is subject to some mint limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted. - MUST NOT revert."
							},
							"maxRedeem(address)": {
								"details": "Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault, through a redeem call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock. - MUST NOT revert."
							},
							"maxWithdraw(address)": {
								"details": "Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the Vault, through a withdraw call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST NOT revert."
							},
							"mint(uint256,address)": {
								"details": "Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"previewDeposit(uint256)": {
								"details": "Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing."
							},
							"previewMint(uint256)": {
								"details": "Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting."
							},
							"previewRedeem(uint256)": {
								"details": "Allows an on-chain or off-chain user to simulate the effects of their redemption at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the   same transaction. - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the   redemption would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by redeeming."
							},
							"previewWithdraw(uint256)": {
								"details": "Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if   called   in the same transaction. - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though   the withdrawal would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing."
							},
							"redeem(uint256,address,address)": {
								"details": "Burns exactly shares from owner and sends assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   redeem execution, and are accounted for during redeem. - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalAssets()": {
								"details": "Returns the total amount of the underlying asset that is “managed” by Vault. - SHOULD include any compounding that occurs from yield. - MUST be inclusive of any fees that are charged against assets in the Vault. - MUST NOT revert."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"withdraw(uint256,address,address)": {
								"details": "Burns shares from owner and sends exactly assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   withdraw execution, and are accounted for during withdraw. - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"asset()": "38d52e0f",
							"balanceOf(address)": "70a08231",
							"convertToAssets(uint256)": "07a2d13a",
							"convertToShares(uint256)": "c6e6f592",
							"decimals()": "313ce567",
							"deposit(uint256,address)": "6e553f65",
							"maxDeposit(address)": "402d267d",
							"maxMint(address)": "c63d75b6",
							"maxRedeem(address)": "d905777e",
							"maxWithdraw(address)": "ce96cb77",
							"mint(uint256,address)": "94bf804d",
							"name()": "06fdde03",
							"previewDeposit(uint256)": "ef8b30f7",
							"previewMint(uint256)": "b3d7f6b9",
							"previewRedeem(uint256)": "4cdad506",
							"previewWithdraw(uint256)": "0a28a477",
							"redeem(uint256,address,address)": "ba087652",
							"symbol()": "95d89b41",
							"totalAssets()": "01e1d114",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256,address,address)": "b460af94"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"assetTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalManagedAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-4626 \\\"Tokenized Vault Standard\\\", as defined in https://eips.ethereum.org/EIPS/eip-4626[ERC-4626].\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"asset()\":{\"details\":\"Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"convertToAssets(uint256)\":{\"details\":\"Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"convertToShares(uint256)\":{\"details\":\"Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"deposit(uint256,address)\":{\"details\":\"Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"maxDeposit(address)\":{\"details\":\"Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver, through a deposit call. - MUST return a limited value if receiver is subject to some deposit limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited. - MUST NOT revert.\"},\"maxMint(address)\":{\"details\":\"Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call. - MUST return a limited value if receiver is subject to some mint limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted. - MUST NOT revert.\"},\"maxRedeem(address)\":{\"details\":\"Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault, through a redeem call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock. - MUST NOT revert.\"},\"maxWithdraw(address)\":{\"details\":\"Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the Vault, through a withdraw call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST NOT revert.\"},\"mint(uint256,address)\":{\"details\":\"Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"previewDeposit(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"previewMint(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting.\"},\"previewRedeem(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their redemption at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the   same transaction. - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the   redemption would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by redeeming.\"},\"previewWithdraw(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if   called   in the same transaction. - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though   the withdrawal would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"redeem(uint256,address,address)\":{\"details\":\"Burns exactly shares from owner and sends assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   redeem execution, and are accounted for during redeem. - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalAssets()\":{\"details\":\"Returns the total amount of the underlying asset that is \\u201cmanaged\\u201d by Vault. - SHOULD include any compounding that occurs from yield. - MUST be inclusive of any fees that are charged against assets in the Vault. - MUST NOT revert.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"withdraw(uint256,address,address)\":{\"details\":\"Burns shares from owner and sends exactly assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   withdraw execution, and are accounted for during withdraw. - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":\"IERC4626\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x23460d4a98e568bde8b7ecaa2316853778032106b489c03be29db1abb0e712c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47b8be8c67117387069c0880d69b8df0bef52b54ba01a7f4b90c04f50655bd30\",\"dweb:/ipfs/QmNNpBXysQBbF3GSNTDsP39VBnFEBYUVeg1EWDaHzSsWSz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 329,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 335,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 337,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 339,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 341,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Ddfi_lpl/valut/vault02.sol": {
				"ERC4626": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ERC20",
									"name": "asset_",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "asset",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "convertToAssets",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"name": "convertToShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "maxDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "maxMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "maxRedeem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "maxWithdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"name": "previewDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "previewMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "previewRedeem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"name": "previewWithdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "redeem",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAssets",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"asset()": {
								"details": "Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"convertToAssets(uint256)": {
								"details": "Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and from."
							},
							"convertToShares(uint256)": {
								"details": "Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and from."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"deposit(uint256,address)": {
								"details": "Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."
							},
							"maxRedeem(address)": {
								"details": "Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault, through a redeem call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock. - MUST NOT revert."
							},
							"maxWithdraw(address)": {
								"details": "Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the Vault, through a withdraw call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST NOT revert."
							},
							"mint(uint256,address)": {
								"details": "Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"previewDeposit(uint256)": {
								"details": "Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing."
							},
							"previewMint(uint256)": {
								"details": "Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting."
							},
							"previewRedeem(uint256)": {
								"details": "Allows an on-chain or off-chain user to simulate the effects of their redemption at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the   same transaction. - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the   redemption would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by redeeming."
							},
							"previewWithdraw(uint256)": {
								"details": "Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if   called   in the same transaction. - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though   the withdrawal would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing."
							},
							"redeem(uint256,address,address)": {
								"details": "Burns exactly shares from owner and sends assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   redeem execution, and are accounted for during redeem. - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalAssets()": {
								"details": "Returns the total amount of the underlying asset that is “managed” by Vault. - SHOULD include any compounding that occurs from yield. - MUST be inclusive of any fees that are charged against assets in the Vault. - MUST NOT revert."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"withdraw(uint256,address,address)": {
								"details": "Burns shares from owner and sends exactly assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   withdraw execution, and are accounted for during withdraw. - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Ddfi_lpl/valut/vault02.sol\":219:5820  contract ERC4626 is ERC20, IERC4626 {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/Ddfi_lpl/valut/vault02.sol\":332:486  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Ddfi_lpl/valut/vault02.sol\":438:443  name_ */\n  dup2\n    /* \"contracts/Ddfi_lpl/valut/vault02.sol\":445:452  symbol_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/Ddfi_lpl/valut/vault02.sol\":473:479  asset_ */\n  dup3\n    /* \"contracts/Ddfi_lpl/valut/vault02.sol\":464:479  _asset = asset_ */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/Ddfi_lpl/valut/vault02.sol\":332:486  constructor(... */\n  pop\n  pop\n  pop\n    /* \"contracts/Ddfi_lpl/valut/vault02.sol\":219:5820  contract ERC4626 is ERC20, IERC4626 {... */\n  jump(tag_11)\n    /* \"#utility.yul\":7:82   */\ntag_12:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_14:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_15:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_16:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_55\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_15\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:677   */\ntag_17:\n    /* \"#utility.yul\":618:625   */\n  0x00\n    /* \"#utility.yul\":647:671   */\n  tag_57\n    /* \"#utility.yul\":665:670   */\n  dup3\n    /* \"#utility.yul\":647:671   */\n  tag_16\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":636:671   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:677   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":683:831   */\ntag_18:\n    /* \"#utility.yul\":769:806   */\n  tag_59\n    /* \"#utility.yul\":800:805   */\n  dup2\n    /* \"#utility.yul\":769:806   */\n  tag_17\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":762:767   */\n  dup2\n    /* \"#utility.yul\":759:807   */\n  eq\n    /* \"#utility.yul\":749:825   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":821:822   */\n  0x00\n    /* \"#utility.yul\":818:819   */\n  0x00\n    /* \"#utility.yul\":811:823   */\n  revert\n    /* \"#utility.yul\":749:825   */\ntag_60:\n    /* \"#utility.yul\":683:831   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":837:1006   */\ntag_19:\n    /* \"#utility.yul\":907:912   */\n  0x00\n    /* \"#utility.yul\":938:944   */\n  dup2\n    /* \"#utility.yul\":932:945   */\n  mload\n    /* \"#utility.yul\":923:945   */\n  swap1\n  pop\n    /* \"#utility.yul\":954:1000   */\n  tag_62\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":954:1000   */\n  tag_18\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":837:1006   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1012:1129   */\ntag_20:\n    /* \"#utility.yul\":1121:1122   */\n  0x00\n    /* \"#utility.yul\":1118:1119   */\n  0x00\n    /* \"#utility.yul\":1111:1123   */\n  revert\n    /* \"#utility.yul\":1135:1252   */\ntag_21:\n    /* \"#utility.yul\":1244:1245   */\n  0x00\n    /* \"#utility.yul\":1241:1242   */\n  0x00\n    /* \"#utility.yul\":1234:1246   */\n  revert\n    /* \"#utility.yul\":1258:1360   */\ntag_22:\n    /* \"#utility.yul\":1299:1305   */\n  0x00\n    /* \"#utility.yul\":1350:1352   */\n  0x1f\n    /* \"#utility.yul\":1346:1353   */\n  not\n    /* \"#utility.yul\":1341:1343   */\n  0x1f\n    /* \"#utility.yul\":1334:1339   */\n  dup4\n    /* \"#utility.yul\":1330:1344   */\n  add\n    /* \"#utility.yul\":1326:1354   */\n  and\n    /* \"#utility.yul\":1316:1354   */\n  swap1\n  pop\n    /* \"#utility.yul\":1258:1360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1366:1546   */\ntag_23:\n    /* \"#utility.yul\":1414:1491   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1411:1412   */\n  0x00\n    /* \"#utility.yul\":1404:1492   */\n  mstore\n    /* \"#utility.yul\":1511:1515   */\n  0x41\n    /* \"#utility.yul\":1508:1509   */\n  0x04\n    /* \"#utility.yul\":1501:1516   */\n  mstore\n    /* \"#utility.yul\":1535:1539   */\n  0x24\n    /* \"#utility.yul\":1532:1533   */\n  0x00\n    /* \"#utility.yul\":1525:1540   */\n  revert\n    /* \"#utility.yul\":1552:1833   */\ntag_24:\n    /* \"#utility.yul\":1635:1662   */\n  tag_68\n    /* \"#utility.yul\":1657:1661   */\n  dup3\n    /* \"#utility.yul\":1635:1662   */\n  tag_22\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1627:1633   */\n  dup2\n    /* \"#utility.yul\":1623:1663   */\n  add\n    /* \"#utility.yul\":1765:1771   */\n  dup2\n    /* \"#utility.yul\":1753:1763   */\n  dup2\n    /* \"#utility.yul\":1750:1772   */\n  lt\n    /* \"#utility.yul\":1729:1747   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1717:1727   */\n  dup3\n    /* \"#utility.yul\":1714:1748   */\n  gt\n    /* \"#utility.yul\":1711:1773   */\n  or\n    /* \"#utility.yul\":1708:1796   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1776:1794   */\n  tag_70\n  tag_23\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1708:1796   */\ntag_69:\n    /* \"#utility.yul\":1816:1826   */\n  dup1\n    /* \"#utility.yul\":1812:1814   */\n  0x40\n    /* \"#utility.yul\":1805:1827   */\n  mstore\n    /* \"#utility.yul\":1595:1833   */\n  pop\n    /* \"#utility.yul\":1552:1833   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1839:1968   */\ntag_25:\n    /* \"#utility.yul\":1873:1879   */\n  0x00\n    /* \"#utility.yul\":1900:1920   */\n  tag_72\n  tag_12\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1890:1920   */\n  swap1\n  pop\n    /* \"#utility.yul\":1929:1962   */\n  tag_73\n    /* \"#utility.yul\":1957:1961   */\n  dup3\n    /* \"#utility.yul\":1949:1955   */\n  dup3\n    /* \"#utility.yul\":1929:1962   */\n  tag_24\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1839:1968   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1974:2282   */\ntag_26:\n    /* \"#utility.yul\":2036:2040   */\n  0x00\n    /* \"#utility.yul\":2126:2144   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2118:2124   */\n  dup3\n    /* \"#utility.yul\":2115:2145   */\n  gt\n    /* \"#utility.yul\":2112:2168   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2148:2166   */\n  tag_76\n  tag_23\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2112:2168   */\ntag_75:\n    /* \"#utility.yul\":2186:2215   */\n  tag_77\n    /* \"#utility.yul\":2208:2214   */\n  dup3\n    /* \"#utility.yul\":2186:2215   */\n  tag_22\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2178:2215   */\n  swap1\n  pop\n    /* \"#utility.yul\":2270:2274   */\n  0x20\n    /* \"#utility.yul\":2264:2268   */\n  dup2\n    /* \"#utility.yul\":2260:2275   */\n  add\n    /* \"#utility.yul\":2252:2275   */\n  swap1\n  pop\n    /* \"#utility.yul\":1974:2282   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2288:2427   */\ntag_27:\n    /* \"#utility.yul\":2377:2383   */\n  dup3\n    /* \"#utility.yul\":2372:2375   */\n  dup2\n    /* \"#utility.yul\":2367:2370   */\n  dup4\n    /* \"#utility.yul\":2361:2384   */\n  mcopy\n    /* \"#utility.yul\":2418:2419   */\n  0x00\n    /* \"#utility.yul\":2409:2415   */\n  dup4\n    /* \"#utility.yul\":2404:2407   */\n  dup4\n    /* \"#utility.yul\":2400:2416   */\n  add\n    /* \"#utility.yul\":2393:2420   */\n  mstore\n    /* \"#utility.yul\":2288:2427   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2433:2867   */\ntag_28:\n    /* \"#utility.yul\":2522:2527   */\n  0x00\n    /* \"#utility.yul\":2547:2613   */\n  tag_80\n    /* \"#utility.yul\":2563:2612   */\n  tag_81\n    /* \"#utility.yul\":2605:2611   */\n  dup5\n    /* \"#utility.yul\":2563:2612   */\n  tag_26\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2547:2613   */\n  tag_25\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2538:2613   */\n  swap1\n  pop\n    /* \"#utility.yul\":2636:2642   */\n  dup3\n    /* \"#utility.yul\":2629:2634   */\n  dup2\n    /* \"#utility.yul\":2622:2643   */\n  mstore\n    /* \"#utility.yul\":2674:2678   */\n  0x20\n    /* \"#utility.yul\":2667:2672   */\n  dup2\n    /* \"#utility.yul\":2663:2679   */\n  add\n    /* \"#utility.yul\":2712:2715   */\n  dup5\n    /* \"#utility.yul\":2703:2709   */\n  dup5\n    /* \"#utility.yul\":2698:2701   */\n  dup5\n    /* \"#utility.yul\":2694:2710   */\n  add\n    /* \"#utility.yul\":2691:2716   */\n  gt\n    /* \"#utility.yul\":2688:2800   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":2719:2798   */\n  tag_83\n  tag_21\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2688:2800   */\ntag_82:\n    /* \"#utility.yul\":2809:2861   */\n  tag_84\n    /* \"#utility.yul\":2854:2860   */\n  dup5\n    /* \"#utility.yul\":2849:2852   */\n  dup3\n    /* \"#utility.yul\":2844:2847   */\n  dup6\n    /* \"#utility.yul\":2809:2861   */\n  tag_27\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2528:2867   */\n  pop\n    /* \"#utility.yul\":2433:2867   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2887:3242   */\ntag_29:\n    /* \"#utility.yul\":2954:2959   */\n  0x00\n    /* \"#utility.yul\":3003:3006   */\n  dup3\n    /* \"#utility.yul\":2996:3000   */\n  0x1f\n    /* \"#utility.yul\":2988:2994   */\n  dup4\n    /* \"#utility.yul\":2984:3001   */\n  add\n    /* \"#utility.yul\":2980:3007   */\n  slt\n    /* \"#utility.yul\":2970:3092   */\n  tag_86\n  jumpi\n    /* \"#utility.yul\":3011:3090   */\n  tag_87\n  tag_20\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":2970:3092   */\ntag_86:\n    /* \"#utility.yul\":3121:3127   */\n  dup2\n    /* \"#utility.yul\":3115:3128   */\n  mload\n    /* \"#utility.yul\":3146:3236   */\n  tag_88\n    /* \"#utility.yul\":3232:3235   */\n  dup5\n    /* \"#utility.yul\":3224:3230   */\n  dup3\n    /* \"#utility.yul\":3217:3221   */\n  0x20\n    /* \"#utility.yul\":3209:3215   */\n  dup7\n    /* \"#utility.yul\":3205:3222   */\n  add\n    /* \"#utility.yul\":3146:3236   */\n  tag_28\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3137:3236   */\n  swap2\n  pop\n    /* \"#utility.yul\":2960:3242   */\n  pop\n    /* \"#utility.yul\":2887:3242   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3248:4283   */\ntag_3:\n    /* \"#utility.yul\":3369:3375   */\n  0x00\n    /* \"#utility.yul\":3377:3383   */\n  0x00\n    /* \"#utility.yul\":3385:3391   */\n  0x00\n    /* \"#utility.yul\":3434:3436   */\n  0x60\n    /* \"#utility.yul\":3422:3431   */\n  dup5\n    /* \"#utility.yul\":3413:3420   */\n  dup7\n    /* \"#utility.yul\":3409:3432   */\n  sub\n    /* \"#utility.yul\":3405:3437   */\n  slt\n    /* \"#utility.yul\":3402:3521   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":3440:3519   */\n  tag_91\n  tag_13\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3402:3521   */\ntag_90:\n    /* \"#utility.yul\":3560:3561   */\n  0x00\n    /* \"#utility.yul\":3585:3662   */\n  tag_92\n    /* \"#utility.yul\":3654:3661   */\n  dup7\n    /* \"#utility.yul\":3645:3651   */\n  dup3\n    /* \"#utility.yul\":3634:3643   */\n  dup8\n    /* \"#utility.yul\":3630:3652   */\n  add\n    /* \"#utility.yul\":3585:3662   */\n  tag_19\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3575:3662   */\n  swap4\n  pop\n    /* \"#utility.yul\":3531:3672   */\n  pop\n    /* \"#utility.yul\":3732:3734   */\n  0x20\n    /* \"#utility.yul\":3721:3730   */\n  dup5\n    /* \"#utility.yul\":3717:3735   */\n  add\n    /* \"#utility.yul\":3711:3736   */\n  mload\n    /* \"#utility.yul\":3763:3781   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3755:3761   */\n  dup2\n    /* \"#utility.yul\":3752:3782   */\n  gt\n    /* \"#utility.yul\":3749:3866   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":3785:3864   */\n  tag_94\n  tag_14\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":3749:3866   */\ntag_93:\n    /* \"#utility.yul\":3890:3964   */\n  tag_95\n    /* \"#utility.yul\":3956:3963   */\n  dup7\n    /* \"#utility.yul\":3947:3953   */\n  dup3\n    /* \"#utility.yul\":3936:3945   */\n  dup8\n    /* \"#utility.yul\":3932:3954   */\n  add\n    /* \"#utility.yul\":3890:3964   */\n  tag_29\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":3880:3964   */\n  swap3\n  pop\n    /* \"#utility.yul\":3682:3974   */\n  pop\n    /* \"#utility.yul\":4034:4036   */\n  0x40\n    /* \"#utility.yul\":4023:4032   */\n  dup5\n    /* \"#utility.yul\":4019:4037   */\n  add\n    /* \"#utility.yul\":4013:4038   */\n  mload\n    /* \"#utility.yul\":4065:4083   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4057:4063   */\n  dup2\n    /* \"#utility.yul\":4054:4084   */\n  gt\n    /* \"#utility.yul\":4051:4168   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":4087:4166   */\n  tag_97\n  tag_14\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4051:4168   */\ntag_96:\n    /* \"#utility.yul\":4192:4266   */\n  tag_98\n    /* \"#utility.yul\":4258:4265   */\n  dup7\n    /* \"#utility.yul\":4249:4255   */\n  dup3\n    /* \"#utility.yul\":4238:4247   */\n  dup8\n    /* \"#utility.yul\":4234:4256   */\n  add\n    /* \"#utility.yul\":4192:4266   */\n  tag_29\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4182:4266   */\n  swap2\n  pop\n    /* \"#utility.yul\":3984:4276   */\n  pop\n    /* \"#utility.yul\":3248:4283   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":4289:4388   */\ntag_30:\n    /* \"#utility.yul\":4341:4347   */\n  0x00\n    /* \"#utility.yul\":4375:4380   */\n  dup2\n    /* \"#utility.yul\":4369:4381   */\n  mload\n    /* \"#utility.yul\":4359:4381   */\n  swap1\n  pop\n    /* \"#utility.yul\":4289:4388   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4394:4574   */\ntag_31:\n    /* \"#utility.yul\":4442:4519   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4439:4440   */\n  0x00\n    /* \"#utility.yul\":4432:4520   */\n  mstore\n    /* \"#utility.yul\":4539:4543   */\n  0x22\n    /* \"#utility.yul\":4536:4537   */\n  0x04\n    /* \"#utility.yul\":4529:4544   */\n  mstore\n    /* \"#utility.yul\":4563:4567   */\n  0x24\n    /* \"#utility.yul\":4560:4561   */\n  0x00\n    /* \"#utility.yul\":4553:4568   */\n  revert\n    /* \"#utility.yul\":4580:4900   */\ntag_32:\n    /* \"#utility.yul\":4624:4630   */\n  0x00\n    /* \"#utility.yul\":4661:4662   */\n  0x02\n    /* \"#utility.yul\":4655:4659   */\n  dup3\n    /* \"#utility.yul\":4651:4663   */\n  div\n    /* \"#utility.yul\":4641:4663   */\n  swap1\n  pop\n    /* \"#utility.yul\":4708:4709   */\n  0x01\n    /* \"#utility.yul\":4702:4706   */\n  dup3\n    /* \"#utility.yul\":4698:4710   */\n  and\n    /* \"#utility.yul\":4729:4747   */\n  dup1\n    /* \"#utility.yul\":4719:4800   */\n  tag_102\n  jumpi\n    /* \"#utility.yul\":4785:4789   */\n  0x7f\n    /* \"#utility.yul\":4777:4783   */\n  dup3\n    /* \"#utility.yul\":4773:4790   */\n  and\n    /* \"#utility.yul\":4763:4790   */\n  swap2\n  pop\n    /* \"#utility.yul\":4719:4800   */\ntag_102:\n    /* \"#utility.yul\":4847:4849   */\n  0x20\n    /* \"#utility.yul\":4839:4845   */\n  dup3\n    /* \"#utility.yul\":4836:4850   */\n  lt\n    /* \"#utility.yul\":4816:4834   */\n  dup2\n    /* \"#utility.yul\":4813:4851   */\n  sub\n    /* \"#utility.yul\":4810:4894   */\n  tag_103\n  jumpi\n    /* \"#utility.yul\":4866:4884   */\n  tag_104\n  tag_31\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":4810:4894   */\ntag_103:\n    /* \"#utility.yul\":4631:4900   */\n  pop\n    /* \"#utility.yul\":4580:4900   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4906:5047   */\ntag_33:\n    /* \"#utility.yul\":4955:4959   */\n  0x00\n    /* \"#utility.yul\":4978:4981   */\n  dup2\n    /* \"#utility.yul\":4970:4981   */\n  swap1\n  pop\n    /* \"#utility.yul\":5001:5004   */\n  dup2\n    /* \"#utility.yul\":4998:4999   */\n  0x00\n    /* \"#utility.yul\":4991:5005   */\n  mstore\n    /* \"#utility.yul\":5035:5039   */\n  0x20\n    /* \"#utility.yul\":5032:5033   */\n  0x00\n    /* \"#utility.yul\":5022:5040   */\n  keccak256\n    /* \"#utility.yul\":5014:5040   */\n  swap1\n  pop\n    /* \"#utility.yul\":4906:5047   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5053:5146   */\ntag_34:\n    /* \"#utility.yul\":5090:5096   */\n  0x00\n    /* \"#utility.yul\":5137:5139   */\n  0x20\n    /* \"#utility.yul\":5132:5134   */\n  0x1f\n    /* \"#utility.yul\":5125:5130   */\n  dup4\n    /* \"#utility.yul\":5121:5135   */\n  add\n    /* \"#utility.yul\":5117:5140   */\n  div\n    /* \"#utility.yul\":5107:5140   */\n  swap1\n  pop\n    /* \"#utility.yul\":5053:5146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5152:5259   */\ntag_35:\n    /* \"#utility.yul\":5196:5204   */\n  0x00\n    /* \"#utility.yul\":5246:5251   */\n  dup3\n    /* \"#utility.yul\":5240:5244   */\n  dup3\n    /* \"#utility.yul\":5236:5252   */\n  shl\n    /* \"#utility.yul\":5215:5252   */\n  swap1\n  pop\n    /* \"#utility.yul\":5152:5259   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5265:5658   */\ntag_36:\n    /* \"#utility.yul\":5334:5340   */\n  0x00\n    /* \"#utility.yul\":5384:5385   */\n  0x08\n    /* \"#utility.yul\":5372:5382   */\n  dup4\n    /* \"#utility.yul\":5368:5386   */\n  mul\n    /* \"#utility.yul\":5407:5504   */\n  tag_109\n    /* \"#utility.yul\":5437:5503   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5426:5435   */\n  dup3\n    /* \"#utility.yul\":5407:5504   */\n  tag_35\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5525:5564   */\n  tag_110\n    /* \"#utility.yul\":5555:5563   */\n  dup7\n    /* \"#utility.yul\":5544:5553   */\n  dup4\n    /* \"#utility.yul\":5525:5564   */\n  tag_35\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5513:5564   */\n  swap6\n  pop\n    /* \"#utility.yul\":5597:5601   */\n  dup1\n    /* \"#utility.yul\":5593:5602   */\n  not\n    /* \"#utility.yul\":5586:5591   */\n  dup5\n    /* \"#utility.yul\":5582:5603   */\n  and\n    /* \"#utility.yul\":5573:5603   */\n  swap4\n  pop\n    /* \"#utility.yul\":5646:5650   */\n  dup1\n    /* \"#utility.yul\":5636:5644   */\n  dup7\n    /* \"#utility.yul\":5632:5651   */\n  and\n    /* \"#utility.yul\":5625:5630   */\n  dup5\n    /* \"#utility.yul\":5622:5652   */\n  or\n    /* \"#utility.yul\":5612:5652   */\n  swap3\n  pop\n    /* \"#utility.yul\":5341:5658   */\n  pop\n  pop\n    /* \"#utility.yul\":5265:5658   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5664:5741   */\ntag_37:\n    /* \"#utility.yul\":5701:5708   */\n  0x00\n    /* \"#utility.yul\":5730:5735   */\n  dup2\n    /* \"#utility.yul\":5719:5735   */\n  swap1\n  pop\n    /* \"#utility.yul\":5664:5741   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5747:5807   */\ntag_38:\n    /* \"#utility.yul\":5775:5778   */\n  0x00\n    /* \"#utility.yul\":5796:5801   */\n  dup2\n    /* \"#utility.yul\":5789:5801   */\n  swap1\n  pop\n    /* \"#utility.yul\":5747:5807   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5813:5955   */\ntag_39:\n    /* \"#utility.yul\":5863:5872   */\n  0x00\n    /* \"#utility.yul\":5896:5949   */\n  tag_114\n    /* \"#utility.yul\":5914:5948   */\n  tag_115\n    /* \"#utility.yul\":5923:5947   */\n  tag_116\n    /* \"#utility.yul\":5941:5946   */\n  dup5\n    /* \"#utility.yul\":5923:5947   */\n  tag_37\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":5914:5948   */\n  tag_38\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5896:5949   */\n  tag_37\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5883:5949   */\n  swap1\n  pop\n    /* \"#utility.yul\":5813:5955   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5961:6036   */\ntag_40:\n    /* \"#utility.yul\":6004:6007   */\n  0x00\n    /* \"#utility.yul\":6025:6030   */\n  dup2\n    /* \"#utility.yul\":6018:6030   */\n  swap1\n  pop\n    /* \"#utility.yul\":5961:6036   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6042:6311   */\ntag_41:\n    /* \"#utility.yul\":6152:6191   */\n  tag_119\n    /* \"#utility.yul\":6183:6190   */\n  dup4\n    /* \"#utility.yul\":6152:6191   */\n  tag_39\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6213:6304   */\n  tag_120\n    /* \"#utility.yul\":6262:6303   */\n  tag_121\n    /* \"#utility.yul\":6286:6302   */\n  dup3\n    /* \"#utility.yul\":6262:6303   */\n  tag_40\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6254:6260   */\n  dup5\n    /* \"#utility.yul\":6247:6251   */\n  dup5\n    /* \"#utility.yul\":6241:6252   */\n  sload\n    /* \"#utility.yul\":6213:6304   */\n  tag_36\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":6207:6211   */\n  dup3\n    /* \"#utility.yul\":6200:6305   */\n  sstore\n    /* \"#utility.yul\":6118:6311   */\n  pop\n    /* \"#utility.yul\":6042:6311   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6317:6390   */\ntag_42:\n    /* \"#utility.yul\":6362:6365   */\n  0x00\n    /* \"#utility.yul\":6383:6384   */\n  0x00\n    /* \"#utility.yul\":6376:6384   */\n  swap1\n  pop\n    /* \"#utility.yul\":6317:6390   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6396:6585   */\ntag_43:\n    /* \"#utility.yul\":6473:6505   */\n  tag_124\n  tag_42\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6514:6579   */\n  tag_125\n    /* \"#utility.yul\":6572:6578   */\n  dup2\n    /* \"#utility.yul\":6564:6570   */\n  dup5\n    /* \"#utility.yul\":6558:6562   */\n  dup5\n    /* \"#utility.yul\":6514:6579   */\n  tag_41\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6449:6585   */\n  pop\n    /* \"#utility.yul\":6396:6585   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6591:6777   */\ntag_44:\n    /* \"#utility.yul\":6651:6771   */\ntag_127:\n    /* \"#utility.yul\":6668:6671   */\n  dup2\n    /* \"#utility.yul\":6661:6666   */\n  dup2\n    /* \"#utility.yul\":6658:6672   */\n  lt\n    /* \"#utility.yul\":6651:6771   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":6722:6761   */\n  tag_130\n    /* \"#utility.yul\":6759:6760   */\n  0x00\n    /* \"#utility.yul\":6752:6757   */\n  dup3\n    /* \"#utility.yul\":6722:6761   */\n  tag_43\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":6695:6696   */\n  0x01\n    /* \"#utility.yul\":6688:6693   */\n  dup2\n    /* \"#utility.yul\":6684:6697   */\n  add\n    /* \"#utility.yul\":6675:6697   */\n  swap1\n  pop\n    /* \"#utility.yul\":6651:6771   */\n  jump(tag_127)\ntag_129:\n    /* \"#utility.yul\":6591:6777   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6783:7326   */\ntag_45:\n    /* \"#utility.yul\":6884:6886   */\n  0x1f\n    /* \"#utility.yul\":6879:6882   */\n  dup3\n    /* \"#utility.yul\":6876:6887   */\n  gt\n    /* \"#utility.yul\":6873:7319   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":6918:6956   */\n  tag_133\n    /* \"#utility.yul\":6950:6955   */\n  dup2\n    /* \"#utility.yul\":6918:6956   */\n  tag_33\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7002:7031   */\n  tag_134\n    /* \"#utility.yul\":7020:7030   */\n  dup5\n    /* \"#utility.yul\":7002:7031   */\n  tag_34\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":6992:7000   */\n  dup2\n    /* \"#utility.yul\":6988:7032   */\n  add\n    /* \"#utility.yul\":7185:7187   */\n  0x20\n    /* \"#utility.yul\":7173:7183   */\n  dup6\n    /* \"#utility.yul\":7170:7188   */\n  lt\n    /* \"#utility.yul\":7167:7216   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":7206:7214   */\n  dup2\n    /* \"#utility.yul\":7191:7214   */\n  swap1\n  pop\n    /* \"#utility.yul\":7167:7216   */\ntag_135:\n    /* \"#utility.yul\":7229:7309   */\n  tag_136\n    /* \"#utility.yul\":7285:7307   */\n  tag_137\n    /* \"#utility.yul\":7303:7306   */\n  dup6\n    /* \"#utility.yul\":7285:7307   */\n  tag_34\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":7275:7283   */\n  dup4\n    /* \"#utility.yul\":7271:7308   */\n  add\n    /* \"#utility.yul\":7258:7269   */\n  dup3\n    /* \"#utility.yul\":7229:7309   */\n  tag_44\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":6888:7319   */\n  pop\n  pop\n    /* \"#utility.yul\":6873:7319   */\ntag_132:\n    /* \"#utility.yul\":6783:7326   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7332:7449   */\ntag_46:\n    /* \"#utility.yul\":7386:7394   */\n  0x00\n    /* \"#utility.yul\":7436:7441   */\n  dup3\n    /* \"#utility.yul\":7430:7434   */\n  dup3\n    /* \"#utility.yul\":7426:7442   */\n  shr\n    /* \"#utility.yul\":7405:7442   */\n  swap1\n  pop\n    /* \"#utility.yul\":7332:7449   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7455:7624   */\ntag_47:\n    /* \"#utility.yul\":7499:7505   */\n  0x00\n    /* \"#utility.yul\":7532:7583   */\n  tag_140\n    /* \"#utility.yul\":7580:7581   */\n  0x00\n    /* \"#utility.yul\":7576:7582   */\n  not\n    /* \"#utility.yul\":7568:7573   */\n  dup5\n    /* \"#utility.yul\":7565:7566   */\n  0x08\n    /* \"#utility.yul\":7561:7574   */\n  mul\n    /* \"#utility.yul\":7532:7583   */\n  tag_46\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":7528:7584   */\n  not\n    /* \"#utility.yul\":7613:7617   */\n  dup1\n    /* \"#utility.yul\":7607:7611   */\n  dup4\n    /* \"#utility.yul\":7603:7618   */\n  and\n    /* \"#utility.yul\":7593:7618   */\n  swap2\n  pop\n    /* \"#utility.yul\":7506:7624   */\n  pop\n    /* \"#utility.yul\":7455:7624   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7629:7924   */\ntag_48:\n    /* \"#utility.yul\":7705:7709   */\n  0x00\n    /* \"#utility.yul\":7851:7880   */\n  tag_142\n    /* \"#utility.yul\":7876:7879   */\n  dup4\n    /* \"#utility.yul\":7870:7874   */\n  dup4\n    /* \"#utility.yul\":7851:7880   */\n  tag_47\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":7843:7880   */\n  swap2\n  pop\n    /* \"#utility.yul\":7913:7916   */\n  dup3\n    /* \"#utility.yul\":7910:7911   */\n  0x02\n    /* \"#utility.yul\":7906:7917   */\n  mul\n    /* \"#utility.yul\":7900:7904   */\n  dup3\n    /* \"#utility.yul\":7897:7918   */\n  or\n    /* \"#utility.yul\":7889:7918   */\n  swap1\n  pop\n    /* \"#utility.yul\":7629:7924   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7929:9324   */\ntag_8:\n    /* \"#utility.yul\":8046:8083   */\n  tag_144\n    /* \"#utility.yul\":8079:8082   */\n  dup3\n    /* \"#utility.yul\":8046:8083   */\n  tag_30\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":8148:8166   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8140:8146   */\n  dup2\n    /* \"#utility.yul\":8137:8167   */\n  gt\n    /* \"#utility.yul\":8134:8190   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":8170:8188   */\n  tag_146\n  tag_23\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":8134:8190   */\ntag_145:\n    /* \"#utility.yul\":8214:8252   */\n  tag_147\n    /* \"#utility.yul\":8246:8250   */\n  dup3\n    /* \"#utility.yul\":8240:8251   */\n  sload\n    /* \"#utility.yul\":8214:8252   */\n  tag_32\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":8299:8366   */\n  tag_148\n    /* \"#utility.yul\":8359:8365   */\n  dup3\n    /* \"#utility.yul\":8351:8357   */\n  dup3\n    /* \"#utility.yul\":8345:8349   */\n  dup6\n    /* \"#utility.yul\":8299:8366   */\n  tag_45\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":8393:8394   */\n  0x00\n    /* \"#utility.yul\":8417:8421   */\n  0x20\n    /* \"#utility.yul\":8404:8421   */\n  swap1\n  pop\n    /* \"#utility.yul\":8449:8451   */\n  0x1f\n    /* \"#utility.yul\":8441:8447   */\n  dup4\n    /* \"#utility.yul\":8438:8452   */\n  gt\n    /* \"#utility.yul\":8466:8467   */\n  0x01\n    /* \"#utility.yul\":8461:9079   */\n  dup2\n  eq\n  tag_150\n  jumpi\n    /* \"#utility.yul\":9123:9124   */\n  0x00\n    /* \"#utility.yul\":9140:9146   */\n  dup5\n    /* \"#utility.yul\":9137:9214   */\n  iszero\n  tag_151\n  jumpi\n    /* \"#utility.yul\":9189:9198   */\n  dup3\n    /* \"#utility.yul\":9184:9187   */\n  dup8\n    /* \"#utility.yul\":9180:9199   */\n  add\n    /* \"#utility.yul\":9174:9200   */\n  mload\n    /* \"#utility.yul\":9165:9200   */\n  swap1\n  pop\n    /* \"#utility.yul\":9137:9214   */\ntag_151:\n    /* \"#utility.yul\":9240:9307   */\n  tag_152\n    /* \"#utility.yul\":9300:9306   */\n  dup6\n    /* \"#utility.yul\":9293:9298   */\n  dup3\n    /* \"#utility.yul\":9240:9307   */\n  tag_48\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":9234:9238   */\n  dup7\n    /* \"#utility.yul\":9227:9308   */\n  sstore\n    /* \"#utility.yul\":9096:9318   */\n  pop\n    /* \"#utility.yul\":8431:9318   */\n  jump(tag_149)\n    /* \"#utility.yul\":8461:9079   */\ntag_150:\n    /* \"#utility.yul\":8513:8517   */\n  0x1f\n    /* \"#utility.yul\":8509:8518   */\n  not\n    /* \"#utility.yul\":8501:8507   */\n  dup5\n    /* \"#utility.yul\":8497:8519   */\n  and\n    /* \"#utility.yul\":8547:8584   */\n  tag_153\n    /* \"#utility.yul\":8579:8583   */\n  dup7\n    /* \"#utility.yul\":8547:8584   */\n  tag_33\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":8606:8607   */\n  0x00\n    /* \"#utility.yul\":8620:8828   */\ntag_154:\n    /* \"#utility.yul\":8634:8641   */\n  dup3\n    /* \"#utility.yul\":8631:8632   */\n  dup2\n    /* \"#utility.yul\":8628:8642   */\n  lt\n    /* \"#utility.yul\":8620:8828   */\n  iszero\n  tag_156\n  jumpi\n    /* \"#utility.yul\":8713:8722   */\n  dup5\n    /* \"#utility.yul\":8708:8711   */\n  dup10\n    /* \"#utility.yul\":8704:8723   */\n  add\n    /* \"#utility.yul\":8698:8724   */\n  mload\n    /* \"#utility.yul\":8690:8696   */\n  dup3\n    /* \"#utility.yul\":8683:8725   */\n  sstore\n    /* \"#utility.yul\":8764:8765   */\n  0x01\n    /* \"#utility.yul\":8756:8762   */\n  dup3\n    /* \"#utility.yul\":8752:8766   */\n  add\n    /* \"#utility.yul\":8742:8766   */\n  swap2\n  pop\n    /* \"#utility.yul\":8811:8813   */\n  0x20\n    /* \"#utility.yul\":8800:8809   */\n  dup6\n    /* \"#utility.yul\":8796:8814   */\n  add\n    /* \"#utility.yul\":8783:8814   */\n  swap5\n  pop\n    /* \"#utility.yul\":8657:8661   */\n  0x20\n    /* \"#utility.yul\":8654:8655   */\n  dup2\n    /* \"#utility.yul\":8650:8662   */\n  add\n    /* \"#utility.yul\":8645:8662   */\n  swap1\n  pop\n    /* \"#utility.yul\":8620:8828   */\n  jump(tag_154)\ntag_156:\n    /* \"#utility.yul\":8856:8862   */\n  dup7\n    /* \"#utility.yul\":8847:8854   */\n  dup4\n    /* \"#utility.yul\":8844:8863   */\n  lt\n    /* \"#utility.yul\":8841:9020   */\n  iszero\n  tag_157\n  jumpi\n    /* \"#utility.yul\":8914:8923   */\n  dup5\n    /* \"#utility.yul\":8909:8912   */\n  dup10\n    /* \"#utility.yul\":8905:8924   */\n  add\n    /* \"#utility.yul\":8899:8925   */\n  mload\n    /* \"#utility.yul\":8957:9005   */\n  tag_158\n    /* \"#utility.yul\":8999:9003   */\n  0x1f\n    /* \"#utility.yul\":8991:8997   */\n  dup10\n    /* \"#utility.yul\":8987:9004   */\n  and\n    /* \"#utility.yul\":8976:8985   */\n  dup3\n    /* \"#utility.yul\":8957:9005   */\n  tag_47\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":8949:8955   */\n  dup4\n    /* \"#utility.yul\":8942:9006   */\n  sstore\n    /* \"#utility.yul\":8864:9020   */\n  pop\n    /* \"#utility.yul\":8841:9020   */\ntag_157:\n    /* \"#utility.yul\":9066:9067   */\n  0x01\n    /* \"#utility.yul\":9062:9063   */\n  0x02\n    /* \"#utility.yul\":9054:9060   */\n  dup9\n    /* \"#utility.yul\":9050:9064   */\n  mul\n    /* \"#utility.yul\":9046:9068   */\n  add\n    /* \"#utility.yul\":9040:9044   */\n  dup9\n    /* \"#utility.yul\":9033:9069   */\n  sstore\n    /* \"#utility.yul\":8468:9079   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8431:9318   */\ntag_149:\n  pop\n    /* \"#utility.yul\":8021:9324   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7929:9324   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Ddfi_lpl/valut/vault02.sol\":219:5820  contract ERC4626 is ERC20, IERC4626 {... */\ntag_11:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xd74e387d4432eb204e29b4c33d69dbbd245bbe36fa789e0c9387d7c3d660708c\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":219:5820  contract ERC4626 is ERC20, IERC4626 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xba087652\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xce96cb77\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xce96cb77\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd905777e\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xef8b30f7\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0xba087652\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc63d75b6\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc6e6f592\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x94bf804d\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb3d7f6b9\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb460af94\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x23b872dd\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x38d52e0f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x402d267d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4cdad506\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6e553f65\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x01e1d114\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x07a2d13a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0a28a477\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3322:3483  function totalAssets() public view virtual returns (uint256) {... */\n    tag_3:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3989:4322  function convertToAssets(... */\n    tag_5:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4786:4926  function previewWithdraw(... */\n    tag_7:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_8:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_9:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":526:629  function asset() public view virtual override returns (address) {... */\n    tag_11:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5211:5319  function maxDeposit(address) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4993:5131  function previewRedeem(... */\n    tag_13:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":685:1200  function deposit(... */\n    tag_14:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1274:1741  function mint(... */\n    tag_16:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_17:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_18:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4596:4718  function previewMint(uint256 shares) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1755:2510  function withdraw(... */\n    tag_20:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      tag_107\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2624:3270  function redeem(... */\n    tag_21:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5360:5465  function maxMint(address) public view virtual returns (uint256) {... */\n    tag_22:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3538:3871  function convertToShares(... */\n    tag_23:\n      tag_117\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5525:5656  function maxWithdraw(address owner) public view virtual returns (uint256) {... */\n    tag_24:\n      tag_121\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5706:5818  function maxRedeem(address owner) public view virtual returns (uint256) {... */\n    tag_25:\n      tag_125\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_26:\n      tag_129\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      tag_132\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      tag_133\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4390:4529  function previewDeposit(... */\n    tag_27:\n      tag_134\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_135:\n      tag_136\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3322:3483  function totalAssets() public view virtual returns (uint256) {... */\n    tag_33:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3374:3381  uint256 */\n      0x00\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3445:3451  _asset */\n      immutable(\"0xd74e387d4432eb204e29b4c33d69dbbd245bbe36fa789e0c9387d7c3d660708c\")\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3445:3461  _asset.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3470:3474  this */\n      address\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3445:3476  _asset.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_139:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3438:3476  return _asset.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3322:3483  function totalAssets() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_145\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_147\n      swap1\n      tag_146\n      jump\t// in\n    tag_147:\n      dup1\n      iszero\n      tag_148\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_149\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_148)\n    tag_149:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_150:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_150\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3989:4322  function convertToAssets(... */\n    tag_43:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4073:4080  uint256 */\n      0x00\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4092:4106  uint256 supply */\n      0x00\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4109:4122  totalSupply() */\n      tag_152\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4109:4120  totalSupply */\n      tag_56\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4109:4122  totalSupply() */\n      jump\t// in\n    tag_152:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4092:4122  uint256 supply = totalSupply() */\n      swap1\n      pop\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4269:4270  0 */\n      0x00\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4259:4265  supply */\n      dup2\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4259:4270  supply == 0 */\n      eq\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4259:4315  supply == 0 ? shares : (shares * totalAssets()) / supply */\n      tag_153\n      jumpi\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4309:4315  supply */\n      dup1\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4292:4305  totalAssets() */\n      tag_154\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4292:4303  totalAssets */\n      tag_33\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4292:4305  totalAssets() */\n      jump\t// in\n    tag_154:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4283:4289  shares */\n      dup5\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4283:4305  shares * totalAssets() */\n      tag_155\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4282:4315  (shares * totalAssets()) / supply */\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4259:4315  supply == 0 ? shares : (shares * totalAssets()) / supply */\n      jump(tag_159)\n    tag_153:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4273:4279  shares */\n      dup3\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4259:4315  supply == 0 ? shares : (shares * totalAssets()) / supply */\n    tag_159:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4252:4315  return supply == 0 ? shares : (shares * totalAssets()) / supply */\n      swap2\n      pop\n      pop\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3989:4322  function convertToAssets(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4786:4926  function previewWithdraw(... */\n    tag_53:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4870:4877  uint256 */\n      0x00\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4896:4919  convertToShares(assets) */\n      tag_166\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4912:4918  assets */\n      dup3\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4896:4911  convertToShares */\n      tag_119\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4896:4919  convertToShares(assets) */\n      jump\t// in\n    tag_166:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4889:4919  return convertToShares(assets) */\n      swap1\n      pop\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4786:4926  function previewWithdraw(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":526:629  function asset() public view virtual override returns (address) {... */\n    tag_68:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":581:588  address */\n      0x00\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":615:621  _asset */\n      immutable(\"0xd74e387d4432eb204e29b4c33d69dbbd245bbe36fa789e0c9387d7c3d660708c\")\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":600:622  return address(_asset) */\n      swap1\n      pop\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":526:629  function asset() public view virtual override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5211:5319  function maxDeposit(address) public view virtual returns (uint256) {... */\n    tag_74:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5269:5276  uint256 */\n      0x00\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5295:5312  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5288:5312  return type(uint256).max */\n      swap1\n      pop\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5211:5319  function maxDeposit(address) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4993:5131  function previewRedeem(... */\n    tag_78:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5075:5082  uint256 */\n      0x00\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5101:5124  convertToAssets(shares) */\n      tag_178\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5117:5123  shares */\n      dup3\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5101:5116  convertToAssets */\n      tag_43\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5101:5124  convertToAssets(shares) */\n      jump\t// in\n    tag_178:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5094:5124  return convertToAssets(shares) */\n      swap1\n      pop\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4993:5131  function previewRedeem(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":685:1200  function deposit(... */\n    tag_83:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":782:796  uint256 shares */\n      0x00\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":931:953  previewDeposit(assets) */\n      tag_180\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":946:952  assets */\n      dup4\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":931:945  previewDeposit */\n      tag_136\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":931:953  previewDeposit(assets) */\n      jump\t// in\n    tag_180:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":922:953  shares = previewDeposit(assets) */\n      swap1\n      pop\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1012:1018  _asset */\n      immutable(\"0xd74e387d4432eb204e29b4c33d69dbbd245bbe36fa789e0c9387d7c3d660708c\")\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1012:1031  _asset.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1032:1042  msg.sender */\n      caller\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1052:1056  this */\n      address\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1059:1065  assets */\n      dup7\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1012:1066  _asset.transferFrom(msg.sender, address(this), assets) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_184:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_185\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      pop\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1076:1099  _mint(receiver, shares) */\n      tag_187\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1082:1090  receiver */\n      dup3\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1092:1098  shares */\n      dup3\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1076:1081  _mint */\n      tag_188\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1076:1099  _mint(receiver, shares) */\n      jump\t// in\n    tag_187:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1168:1176  receiver */\n      dup2\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1148:1193  Deposit(msg.sender, receiver, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1156:1166  msg.sender */\n      caller\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1148:1193  Deposit(msg.sender, receiver, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1178:1184  assets */\n      dup6\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1186:1192  shares */\n      dup5\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1148:1193  Deposit(msg.sender, receiver, assets, shares) */\n      mload(0x40)\n      tag_189\n      swap3\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":685:1200  function deposit(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1274:1741  function mint(... */\n    tag_91:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1368:1382  uint256 assets */\n      0x00\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1475:1494  previewMint(shares) */\n      tag_193\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1487:1493  shares */\n      dup4\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1475:1486  previewMint */\n      tag_102\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1475:1494  previewMint(shares) */\n      jump\t// in\n    tag_193:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1466:1494  assets = previewMint(shares) */\n      swap1\n      pop\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1553:1559  _asset */\n      immutable(\"0xd74e387d4432eb204e29b4c33d69dbbd245bbe36fa789e0c9387d7c3d660708c\")\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1553:1572  _asset.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1573:1583  msg.sender */\n      caller\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1593:1597  this */\n      address\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1600:1606  assets */\n      dup5\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1553:1607  _asset.transferFrom(msg.sender, address(this), assets) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_194:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_196\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_196:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_197\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_197:\n      pop\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1617:1640  _mint(receiver, shares) */\n      tag_198\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1623:1631  receiver */\n      dup3\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1633:1639  shares */\n      dup5\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1617:1622  _mint */\n      tag_188\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1617:1640  _mint(receiver, shares) */\n      jump\t// in\n    tag_198:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1709:1717  receiver */\n      dup2\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1689:1734  Deposit(msg.sender, receiver, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1697:1707  msg.sender */\n      caller\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1689:1734  Deposit(msg.sender, receiver, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1719:1725  assets */\n      dup4\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1727:1733  shares */\n      dup7\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1689:1734  Deposit(msg.sender, receiver, assets, shares) */\n      mload(0x40)\n      tag_199\n      swap3\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1274:1741  function mint(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_201\n      swap1\n      tag_146\n      jump\t// in\n    tag_201:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_202\n      swap1\n      tag_146\n      jump\t// in\n    tag_202:\n      dup1\n      iszero\n      tag_203\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_204\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_203)\n    tag_204:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_205:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_205\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_203:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4596:4718  function previewMint(uint256 shares) public view virtual returns (uint256) {... */\n    tag_102:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4662:4669  uint256 */\n      0x00\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4688:4711  convertToAssets(shares) */\n      tag_210\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4704:4710  shares */\n      dup3\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4688:4703  convertToAssets */\n      tag_43\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4688:4711  convertToAssets(shares) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4681:4711  return convertToAssets(shares) */\n      swap1\n      pop\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4596:4718  function previewMint(uint256 shares) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1755:2510  function withdraw(... */\n    tag_107:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1876:1890  uint256 shares */\n      0x00\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1978:2001  previewWithdraw(assets) */\n      tag_212\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1994:2000  assets */\n      dup5\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1978:1993  previewWithdraw */\n      tag_53\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1978:2001  previewWithdraw(assets) */\n      jump\t// in\n    tag_212:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1969:2001  shares = previewWithdraw(assets) */\n      swap1\n      pop\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2096:2101  owner */\n      dup2\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2082:2101  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2082:2092  msg.sender */\n      caller\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2082:2101  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2078:2170  if (msg.sender != owner) {... */\n      tag_213\n      jumpi\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2117:2159  _spendAllowance(owner, msg.sender, shares) */\n      tag_214\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2133:2138  owner */\n      dup3\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2140:2150  msg.sender */\n      caller\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2152:2158  shares */\n      dup4\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2117:2132  _spendAllowance */\n      tag_171\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2117:2159  _spendAllowance(owner, msg.sender, shares) */\n      jump\t// in\n    tag_214:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2078:2170  if (msg.sender != owner) {... */\n    tag_213:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2265:2285  _burn(owner, shares) */\n      tag_215\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2271:2276  owner */\n      dup3\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2278:2284  shares */\n      dup3\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2265:2270  _burn */\n      tag_216\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2265:2285  _burn(owner, shares) */\n      jump\t// in\n    tag_215:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2367:2373  _asset */\n      immutable(\"0xd74e387d4432eb204e29b4c33d69dbbd245bbe36fa789e0c9387d7c3d660708c\")\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2367:2382  _asset.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2383:2391  receiver */\n      dup5\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2393:2399  assets */\n      dup7\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2367:2400  _asset.transfer(receiver, assets) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap3\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_220\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_220:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_221\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_221:\n      pop\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2481:2486  owner */\n      dup2\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2450:2503  Withdraw(msg.sender, receiver, owner, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2471:2479  receiver */\n      dup4\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2450:2503  Withdraw(msg.sender, receiver, owner, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2459:2469  msg.sender */\n      caller\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2450:2503  Withdraw(msg.sender, receiver, owner, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2488:2494  assets */\n      dup8\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2496:2502  shares */\n      dup6\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2450:2503  Withdraw(msg.sender, receiver, owner, assets, shares) */\n      mload(0x40)\n      tag_222\n      swap3\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":1755:2510  function withdraw(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2624:3270  function redeem(... */\n    tag_111:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2743:2757  uint256 assets */\n      0x00\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2849:2870  previewRedeem(shares) */\n      tag_224\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2863:2869  shares */\n      dup5\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2849:2862  previewRedeem */\n      tag_78\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2849:2870  previewRedeem(shares) */\n      jump\t// in\n    tag_224:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2840:2870  assets = previewRedeem(shares) */\n      swap1\n      pop\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2965:2970  owner */\n      dup2\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2951:2970  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2951:2961  msg.sender */\n      caller\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2951:2970  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2947:3039  if (msg.sender != owner) {... */\n      tag_225\n      jumpi\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2986:3028  _spendAllowance(owner, msg.sender, shares) */\n      tag_226\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3002:3007  owner */\n      dup3\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3009:3019  msg.sender */\n      caller\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3021:3027  shares */\n      dup7\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2986:3001  _spendAllowance */\n      tag_171\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2986:3028  _spendAllowance(owner, msg.sender, shares) */\n      jump\t// in\n    tag_226:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2947:3039  if (msg.sender != owner) {... */\n    tag_225:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3097:3117  _burn(owner, shares) */\n      tag_227\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3103:3108  owner */\n      dup3\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3110:3116  shares */\n      dup6\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3097:3102  _burn */\n      tag_216\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3097:3117  _burn(owner, shares) */\n      jump\t// in\n    tag_227:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3127:3133  _asset */\n      immutable(\"0xd74e387d4432eb204e29b4c33d69dbbd245bbe36fa789e0c9387d7c3d660708c\")\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3127:3142  _asset.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3143:3151  receiver */\n      dup5\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3153:3159  assets */\n      dup4\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3127:3160  _asset.transfer(receiver, assets) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap3\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_228:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_230\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_230:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_231\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_231:\n      pop\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3241:3246  owner */\n      dup2\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3210:3263  Withdraw(msg.sender, receiver, owner, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3231:3239  receiver */\n      dup4\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3210:3263  Withdraw(msg.sender, receiver, owner, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3219:3229  msg.sender */\n      caller\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3210:3263  Withdraw(msg.sender, receiver, owner, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3248:3254  assets */\n      dup5\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3256:3262  shares */\n      dup9\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3210:3263  Withdraw(msg.sender, receiver, owner, assets, shares) */\n      mload(0x40)\n      tag_232\n      swap3\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":2624:3270  function redeem(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5360:5465  function maxMint(address) public view virtual returns (uint256) {... */\n    tag_115:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5415:5422  uint256 */\n      0x00\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5441:5458  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5434:5458  return type(uint256).max */\n      swap1\n      pop\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5360:5465  function maxMint(address) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3538:3871  function convertToShares(... */\n    tag_119:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3622:3629  uint256 */\n      0x00\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3641:3655  uint256 supply */\n      0x00\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3658:3671  totalSupply() */\n      tag_235\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3658:3669  totalSupply */\n      tag_56\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3658:3671  totalSupply() */\n      jump\t// in\n    tag_235:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3641:3671  uint256 supply = totalSupply() */\n      swap1\n      pop\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3818:3819  0 */\n      0x00\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3808:3814  supply */\n      dup2\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3808:3819  supply == 0 */\n      eq\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3808:3864  supply == 0 ? assets : (assets * supply) / totalAssets() */\n      tag_236\n      jumpi\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3851:3864  totalAssets() */\n      tag_237\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3851:3862  totalAssets */\n      tag_33\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3851:3864  totalAssets() */\n      jump\t// in\n    tag_237:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3841:3847  supply */\n      dup2\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3832:3838  assets */\n      dup5\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3832:3847  assets * supply */\n      tag_238\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_238:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3831:3864  (assets * supply) / totalAssets() */\n      tag_239\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_239:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3808:3864  supply == 0 ? assets : (assets * supply) / totalAssets() */\n      jump(tag_240)\n    tag_236:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3822:3828  assets */\n      dup3\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3808:3864  supply == 0 ? assets : (assets * supply) / totalAssets() */\n    tag_240:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3801:3864  return supply == 0 ? assets : (assets * supply) / totalAssets() */\n      swap2\n      pop\n      pop\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":3538:3871  function convertToShares(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5525:5656  function maxWithdraw(address owner) public view virtual returns (uint256) {... */\n    tag_123:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5590:5597  uint256 */\n      0x00\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5616:5649  convertToAssets(balanceOf(owner)) */\n      tag_242\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5632:5648  balanceOf(owner) */\n      tag_243\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5642:5647  owner */\n      dup4\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5632:5641  balanceOf */\n      tag_87\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5632:5648  balanceOf(owner) */\n      jump\t// in\n    tag_243:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5616:5631  convertToAssets */\n      tag_43\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5616:5649  convertToAssets(balanceOf(owner)) */\n      jump\t// in\n    tag_242:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5609:5649  return convertToAssets(balanceOf(owner)) */\n      swap1\n      pop\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5525:5656  function maxWithdraw(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5706:5818  function maxRedeem(address owner) public view virtual returns (uint256) {... */\n    tag_127:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5769:5776  uint256 */\n      0x00\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5795:5811  balanceOf(owner) */\n      tag_245\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5805:5810  owner */\n      dup3\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5795:5804  balanceOf */\n      tag_87\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5795:5811  balanceOf(owner) */\n      jump\t// in\n    tag_245:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5788:5811  return balanceOf(owner) */\n      swap1\n      pop\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":5706:5818  function maxRedeem(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4390:4529  function previewDeposit(... */\n    tag_136:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4473:4480  uint256 */\n      0x00\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4499:4522  convertToShares(assets) */\n      tag_248\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4515:4521  assets */\n      dup3\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4499:4514  convertToShares */\n      tag_119\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4499:4522  convertToShares(assets) */\n      jump\t// in\n    tag_248:\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4492:4522  return convertToShares(assets) */\n      swap1\n      pop\n        /* \"contracts/Ddfi_lpl/valut/vault02.sol\":4390:4529  function previewDeposit(... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_252\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_254\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_252\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8055  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8042  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8106:8107  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_273\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      tag_274\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8137:8144  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8154:8155  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8163  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8136  _update */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_278\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_281\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_283\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_284\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_286)\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_288\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_289\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_290)\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_291\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_292:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_293:\n        /* \"#utility.yul\":177:201   */\n      tag_322\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_292\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_35:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_324\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_293\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:541   */\n    tag_294:\n        /* \"#utility.yul\":494:500   */\n      0x00\n        /* \"#utility.yul\":528:533   */\n      dup2\n        /* \"#utility.yul\":522:534   */\n      mload\n        /* \"#utility.yul\":512:534   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":547:716   */\n    tag_295:\n        /* \"#utility.yul\":631:642   */\n      0x00\n        /* \"#utility.yul\":665:671   */\n      dup3\n        /* \"#utility.yul\":660:663   */\n      dup3\n        /* \"#utility.yul\":653:672   */\n      mstore\n        /* \"#utility.yul\":705:709   */\n      0x20\n        /* \"#utility.yul\":700:703   */\n      dup3\n        /* \"#utility.yul\":696:710   */\n      add\n        /* \"#utility.yul\":681:710   */\n      swap1\n      pop\n        /* \"#utility.yul\":547:716   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":722:861   */\n    tag_296:\n        /* \"#utility.yul\":811:817   */\n      dup3\n        /* \"#utility.yul\":806:809   */\n      dup2\n        /* \"#utility.yul\":801:804   */\n      dup4\n        /* \"#utility.yul\":795:818   */\n      mcopy\n        /* \"#utility.yul\":852:853   */\n      0x00\n        /* \"#utility.yul\":843:849   */\n      dup4\n        /* \"#utility.yul\":838:841   */\n      dup4\n        /* \"#utility.yul\":834:850   */\n      add\n        /* \"#utility.yul\":827:854   */\n      mstore\n        /* \"#utility.yul\":722:861   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":867:969   */\n    tag_297:\n        /* \"#utility.yul\":908:914   */\n      0x00\n        /* \"#utility.yul\":959:961   */\n      0x1f\n        /* \"#utility.yul\":955:962   */\n      not\n        /* \"#utility.yul\":950:952   */\n      0x1f\n        /* \"#utility.yul\":943:948   */\n      dup4\n        /* \"#utility.yul\":939:953   */\n      add\n        /* \"#utility.yul\":935:963   */\n      and\n        /* \"#utility.yul\":925:963   */\n      swap1\n      pop\n        /* \"#utility.yul\":867:969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":975:1352   */\n    tag_298:\n        /* \"#utility.yul\":1063:1066   */\n      0x00\n        /* \"#utility.yul\":1091:1130   */\n      tag_330\n        /* \"#utility.yul\":1124:1129   */\n      dup3\n        /* \"#utility.yul\":1091:1130   */\n      tag_294\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":1146:1217   */\n      tag_331\n        /* \"#utility.yul\":1210:1216   */\n      dup2\n        /* \"#utility.yul\":1205:1208   */\n      dup6\n        /* \"#utility.yul\":1146:1217   */\n      tag_295\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":1139:1217   */\n      swap4\n      pop\n        /* \"#utility.yul\":1226:1291   */\n      tag_332\n        /* \"#utility.yul\":1284:1290   */\n      dup2\n        /* \"#utility.yul\":1279:1282   */\n      dup6\n        /* \"#utility.yul\":1272:1276   */\n      0x20\n        /* \"#utility.yul\":1265:1270   */\n      dup7\n        /* \"#utility.yul\":1261:1277   */\n      add\n        /* \"#utility.yul\":1226:1291   */\n      tag_296\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":1316:1345   */\n      tag_333\n        /* \"#utility.yul\":1338:1344   */\n      dup2\n        /* \"#utility.yul\":1316:1345   */\n      tag_297\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":1311:1314   */\n      dup5\n        /* \"#utility.yul\":1307:1346   */\n      add\n        /* \"#utility.yul\":1300:1346   */\n      swap2\n      pop\n        /* \"#utility.yul\":1067:1352   */\n      pop\n        /* \"#utility.yul\":975:1352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1358:1671   */\n    tag_39:\n        /* \"#utility.yul\":1471:1475   */\n      0x00\n        /* \"#utility.yul\":1509:1511   */\n      0x20\n        /* \"#utility.yul\":1498:1507   */\n      dup3\n        /* \"#utility.yul\":1494:1512   */\n      add\n        /* \"#utility.yul\":1486:1512   */\n      swap1\n      pop\n        /* \"#utility.yul\":1558:1567   */\n      dup2\n        /* \"#utility.yul\":1552:1556   */\n      dup2\n        /* \"#utility.yul\":1548:1568   */\n      sub\n        /* \"#utility.yul\":1544:1545   */\n      0x00\n        /* \"#utility.yul\":1533:1542   */\n      dup4\n        /* \"#utility.yul\":1529:1546   */\n      add\n        /* \"#utility.yul\":1522:1569   */\n      mstore\n        /* \"#utility.yul\":1586:1664   */\n      tag_335\n        /* \"#utility.yul\":1659:1663   */\n      dup2\n        /* \"#utility.yul\":1650:1656   */\n      dup5\n        /* \"#utility.yul\":1586:1664   */\n      tag_298\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":1578:1664   */\n      swap1\n      pop\n        /* \"#utility.yul\":1358:1671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1758:1875   */\n    tag_300:\n        /* \"#utility.yul\":1867:1868   */\n      0x00\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1857:1869   */\n      revert\n        /* \"#utility.yul\":2004:2126   */\n    tag_302:\n        /* \"#utility.yul\":2077:2101   */\n      tag_340\n        /* \"#utility.yul\":2095:2100   */\n      dup2\n        /* \"#utility.yul\":2077:2101   */\n      tag_292\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":2070:2075   */\n      dup2\n        /* \"#utility.yul\":2067:2102   */\n      eq\n        /* \"#utility.yul\":2057:2120   */\n      tag_341\n      jumpi\n        /* \"#utility.yul\":2116:2117   */\n      0x00\n        /* \"#utility.yul\":2113:2114   */\n      0x00\n        /* \"#utility.yul\":2106:2118   */\n      revert\n        /* \"#utility.yul\":2057:2120   */\n    tag_341:\n        /* \"#utility.yul\":2004:2126   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2132:2271   */\n    tag_303:\n        /* \"#utility.yul\":2178:2183   */\n      0x00\n        /* \"#utility.yul\":2216:2222   */\n      dup2\n        /* \"#utility.yul\":2203:2223   */\n      calldataload\n        /* \"#utility.yul\":2194:2223   */\n      swap1\n      pop\n        /* \"#utility.yul\":2232:2265   */\n      tag_343\n        /* \"#utility.yul\":2259:2264   */\n      dup2\n        /* \"#utility.yul\":2232:2265   */\n      tag_302\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2132:2271   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2277:2606   */\n    tag_42:\n        /* \"#utility.yul\":2336:2342   */\n      0x00\n        /* \"#utility.yul\":2385:2387   */\n      0x20\n        /* \"#utility.yul\":2373:2382   */\n      dup3\n        /* \"#utility.yul\":2364:2371   */\n      dup5\n        /* \"#utility.yul\":2360:2383   */\n      sub\n        /* \"#utility.yul\":2356:2388   */\n      slt\n        /* \"#utility.yul\":2353:2472   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":2391:2470   */\n      tag_346\n      tag_300\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":2353:2472   */\n    tag_345:\n        /* \"#utility.yul\":2511:2512   */\n      0x00\n        /* \"#utility.yul\":2536:2589   */\n      tag_347\n        /* \"#utility.yul\":2581:2588   */\n      dup5\n        /* \"#utility.yul\":2572:2578   */\n      dup3\n        /* \"#utility.yul\":2561:2570   */\n      dup6\n        /* \"#utility.yul\":2557:2579   */\n      add\n        /* \"#utility.yul\":2536:2589   */\n      tag_303\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":2526:2589   */\n      swap2\n      pop\n        /* \"#utility.yul\":2482:2599   */\n      pop\n        /* \"#utility.yul\":2277:2606   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2612:2738   */\n    tag_304:\n        /* \"#utility.yul\":2649:2656   */\n      0x00\n        /* \"#utility.yul\":2689:2731   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2682:2687   */\n      dup3\n        /* \"#utility.yul\":2678:2732   */\n      and\n        /* \"#utility.yul\":2667:2732   */\n      swap1\n      pop\n        /* \"#utility.yul\":2612:2738   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2744:2840   */\n    tag_305:\n        /* \"#utility.yul\":2781:2788   */\n      0x00\n        /* \"#utility.yul\":2810:2834   */\n      tag_350\n        /* \"#utility.yul\":2828:2833   */\n      dup3\n        /* \"#utility.yul\":2810:2834   */\n      tag_304\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":2799:2834   */\n      swap1\n      pop\n        /* \"#utility.yul\":2744:2840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2846:2968   */\n    tag_306:\n        /* \"#utility.yul\":2919:2943   */\n      tag_352\n        /* \"#utility.yul\":2937:2942   */\n      dup2\n        /* \"#utility.yul\":2919:2943   */\n      tag_305\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":2912:2917   */\n      dup2\n        /* \"#utility.yul\":2909:2944   */\n      eq\n        /* \"#utility.yul\":2899:2962   */\n      tag_353\n      jumpi\n        /* \"#utility.yul\":2958:2959   */\n      0x00\n        /* \"#utility.yul\":2955:2956   */\n      0x00\n        /* \"#utility.yul\":2948:2960   */\n      revert\n        /* \"#utility.yul\":2899:2962   */\n    tag_353:\n        /* \"#utility.yul\":2846:2968   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2974:3113   */\n    tag_307:\n        /* \"#utility.yul\":3020:3025   */\n      0x00\n        /* \"#utility.yul\":3058:3064   */\n      dup2\n        /* \"#utility.yul\":3045:3065   */\n      calldataload\n        /* \"#utility.yul\":3036:3065   */\n      swap1\n      pop\n        /* \"#utility.yul\":3074:3107   */\n      tag_355\n        /* \"#utility.yul\":3101:3106   */\n      dup2\n        /* \"#utility.yul\":3074:3107   */\n      tag_306\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":2974:3113   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3119:3593   */\n    tag_47:\n        /* \"#utility.yul\":3187:3193   */\n      0x00\n        /* \"#utility.yul\":3195:3201   */\n      0x00\n        /* \"#utility.yul\":3244:3246   */\n      0x40\n        /* \"#utility.yul\":3232:3241   */\n      dup4\n        /* \"#utility.yul\":3223:3230   */\n      dup6\n        /* \"#utility.yul\":3219:3242   */\n      sub\n        /* \"#utility.yul\":3215:3247   */\n      slt\n        /* \"#utility.yul\":3212:3331   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":3250:3329   */\n      tag_358\n      tag_300\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":3212:3331   */\n    tag_357:\n        /* \"#utility.yul\":3370:3371   */\n      0x00\n        /* \"#utility.yul\":3395:3448   */\n      tag_359\n        /* \"#utility.yul\":3440:3447   */\n      dup6\n        /* \"#utility.yul\":3431:3437   */\n      dup3\n        /* \"#utility.yul\":3420:3429   */\n      dup7\n        /* \"#utility.yul\":3416:3438   */\n      add\n        /* \"#utility.yul\":3395:3448   */\n      tag_307\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":3385:3448   */\n      swap3\n      pop\n        /* \"#utility.yul\":3341:3458   */\n      pop\n        /* \"#utility.yul\":3497:3499   */\n      0x20\n        /* \"#utility.yul\":3523:3576   */\n      tag_360\n        /* \"#utility.yul\":3568:3575   */\n      dup6\n        /* \"#utility.yul\":3559:3565   */\n      dup3\n        /* \"#utility.yul\":3548:3557   */\n      dup7\n        /* \"#utility.yul\":3544:3566   */\n      add\n        /* \"#utility.yul\":3523:3576   */\n      tag_303\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":3513:3576   */\n      swap2\n      pop\n        /* \"#utility.yul\":3468:3586   */\n      pop\n        /* \"#utility.yul\":3119:3593   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3599:3689   */\n    tag_308:\n        /* \"#utility.yul\":3633:3640   */\n      0x00\n        /* \"#utility.yul\":3676:3681   */\n      dup2\n        /* \"#utility.yul\":3669:3682   */\n      iszero\n        /* \"#utility.yul\":3662:3683   */\n      iszero\n        /* \"#utility.yul\":3651:3683   */\n      swap1\n      pop\n        /* \"#utility.yul\":3599:3689   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3695:3804   */\n    tag_309:\n        /* \"#utility.yul\":3776:3797   */\n      tag_363\n        /* \"#utility.yul\":3791:3796   */\n      dup2\n        /* \"#utility.yul\":3776:3797   */\n      tag_308\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":3771:3774   */\n      dup3\n        /* \"#utility.yul\":3764:3798   */\n      mstore\n        /* \"#utility.yul\":3695:3804   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3810:4020   */\n    tag_50:\n        /* \"#utility.yul\":3897:3901   */\n      0x00\n        /* \"#utility.yul\":3935:3937   */\n      0x20\n        /* \"#utility.yul\":3924:3933   */\n      dup3\n        /* \"#utility.yul\":3920:3938   */\n      add\n        /* \"#utility.yul\":3912:3938   */\n      swap1\n      pop\n        /* \"#utility.yul\":3948:4013   */\n      tag_365\n        /* \"#utility.yul\":4010:4011   */\n      0x00\n        /* \"#utility.yul\":3999:4008   */\n      dup4\n        /* \"#utility.yul\":3995:4012   */\n      add\n        /* \"#utility.yul\":3986:3992   */\n      dup5\n        /* \"#utility.yul\":3948:4013   */\n      tag_309\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":3810:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4645   */\n    tag_60:\n        /* \"#utility.yul\":4103:4109   */\n      0x00\n        /* \"#utility.yul\":4111:4117   */\n      0x00\n        /* \"#utility.yul\":4119:4125   */\n      0x00\n        /* \"#utility.yul\":4168:4170   */\n      0x60\n        /* \"#utility.yul\":4156:4165   */\n      dup5\n        /* \"#utility.yul\":4147:4154   */\n      dup7\n        /* \"#utility.yul\":4143:4166   */\n      sub\n        /* \"#utility.yul\":4139:4171   */\n      slt\n        /* \"#utility.yul\":4136:4255   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":4174:4253   */\n      tag_368\n      tag_300\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":4136:4255   */\n    tag_367:\n        /* \"#utility.yul\":4294:4295   */\n      0x00\n        /* \"#utility.yul\":4319:4372   */\n      tag_369\n        /* \"#utility.yul\":4364:4371   */\n      dup7\n        /* \"#utility.yul\":4355:4361   */\n      dup3\n        /* \"#utility.yul\":4344:4353   */\n      dup8\n        /* \"#utility.yul\":4340:4362   */\n      add\n        /* \"#utility.yul\":4319:4372   */\n      tag_307\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":4309:4372   */\n      swap4\n      pop\n        /* \"#utility.yul\":4265:4382   */\n      pop\n        /* \"#utility.yul\":4421:4423   */\n      0x20\n        /* \"#utility.yul\":4447:4500   */\n      tag_370\n        /* \"#utility.yul\":4492:4499   */\n      dup7\n        /* \"#utility.yul\":4483:4489   */\n      dup3\n        /* \"#utility.yul\":4472:4481   */\n      dup8\n        /* \"#utility.yul\":4468:4490   */\n      add\n        /* \"#utility.yul\":4447:4500   */\n      tag_307\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":4437:4500   */\n      swap3\n      pop\n        /* \"#utility.yul\":4392:4510   */\n      pop\n        /* \"#utility.yul\":4549:4551   */\n      0x40\n        /* \"#utility.yul\":4575:4628   */\n      tag_371\n        /* \"#utility.yul\":4620:4627   */\n      dup7\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup8\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_303\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4520:4638   */\n      pop\n        /* \"#utility.yul\":4026:4645   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4651:4737   */\n    tag_310:\n        /* \"#utility.yul\":4686:4693   */\n      0x00\n        /* \"#utility.yul\":4726:4730   */\n      0xff\n        /* \"#utility.yul\":4719:4724   */\n      dup3\n        /* \"#utility.yul\":4715:4731   */\n      and\n        /* \"#utility.yul\":4704:4731   */\n      swap1\n      pop\n        /* \"#utility.yul\":4651:4737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:4855   */\n    tag_311:\n        /* \"#utility.yul\":4826:4848   */\n      tag_374\n        /* \"#utility.yul\":4842:4847   */\n      dup2\n        /* \"#utility.yul\":4826:4848   */\n      tag_310\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":4821:4824   */\n      dup3\n        /* \"#utility.yul\":4814:4849   */\n      mstore\n        /* \"#utility.yul\":4743:4855   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4861:5075   */\n    tag_66:\n        /* \"#utility.yul\":4950:4954   */\n      0x00\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":4977:4986   */\n      dup3\n        /* \"#utility.yul\":4973:4991   */\n      add\n        /* \"#utility.yul\":4965:4991   */\n      swap1\n      pop\n        /* \"#utility.yul\":5001:5068   */\n      tag_376\n        /* \"#utility.yul\":5065:5066   */\n      0x00\n        /* \"#utility.yul\":5054:5063   */\n      dup4\n        /* \"#utility.yul\":5050:5067   */\n      add\n        /* \"#utility.yul\":5041:5047   */\n      dup5\n        /* \"#utility.yul\":5001:5068   */\n      tag_311\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":4861:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5199   */\n    tag_312:\n        /* \"#utility.yul\":5168:5192   */\n      tag_378\n        /* \"#utility.yul\":5186:5191   */\n      dup2\n        /* \"#utility.yul\":5168:5192   */\n      tag_305\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":5163:5166   */\n      dup3\n        /* \"#utility.yul\":5156:5193   */\n      mstore\n        /* \"#utility.yul\":5081:5199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5427   */\n    tag_70:\n        /* \"#utility.yul\":5298:5302   */\n      0x00\n        /* \"#utility.yul\":5336:5338   */\n      0x20\n        /* \"#utility.yul\":5325:5334   */\n      dup3\n        /* \"#utility.yul\":5321:5339   */\n      add\n        /* \"#utility.yul\":5313:5339   */\n      swap1\n      pop\n        /* \"#utility.yul\":5349:5420   */\n      tag_380\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5349:5420   */\n      tag_312\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":5205:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5762   */\n    tag_73:\n        /* \"#utility.yul\":5492:5498   */\n      0x00\n        /* \"#utility.yul\":5541:5543   */\n      0x20\n        /* \"#utility.yul\":5529:5538   */\n      dup3\n        /* \"#utility.yul\":5520:5527   */\n      dup5\n        /* \"#utility.yul\":5516:5539   */\n      sub\n        /* \"#utility.yul\":5512:5544   */\n      slt\n        /* \"#utility.yul\":5509:5628   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":5547:5626   */\n      tag_383\n      tag_300\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":5509:5628   */\n    tag_382:\n        /* \"#utility.yul\":5667:5668   */\n      0x00\n        /* \"#utility.yul\":5692:5745   */\n      tag_384\n        /* \"#utility.yul\":5737:5744   */\n      dup5\n        /* \"#utility.yul\":5728:5734   */\n      dup3\n        /* \"#utility.yul\":5717:5726   */\n      dup6\n        /* \"#utility.yul\":5713:5735   */\n      add\n        /* \"#utility.yul\":5692:5745   */\n      tag_307\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":5682:5745   */\n      swap2\n      pop\n        /* \"#utility.yul\":5638:5755   */\n      pop\n        /* \"#utility.yul\":5433:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6242   */\n    tag_82:\n        /* \"#utility.yul\":5836:5842   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      0x00\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5980   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":5899:5978   */\n      tag_387\n      tag_300\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":5861:5980   */\n    tag_386:\n        /* \"#utility.yul\":6019:6020   */\n      0x00\n        /* \"#utility.yul\":6044:6097   */\n      tag_388\n        /* \"#utility.yul\":6089:6096   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6069:6078   */\n      dup7\n        /* \"#utility.yul\":6065:6087   */\n      add\n        /* \"#utility.yul\":6044:6097   */\n      tag_303\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":6034:6097   */\n      swap3\n      pop\n        /* \"#utility.yul\":5990:6107   */\n      pop\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6172:6225   */\n      tag_389\n        /* \"#utility.yul\":6217:6224   */\n      dup6\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup7\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_307\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6117:6235   */\n      pop\n        /* \"#utility.yul\":5768:6242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6867   */\n    tag_106:\n        /* \"#utility.yul\":6325:6331   */\n      0x00\n        /* \"#utility.yul\":6333:6339   */\n      0x00\n        /* \"#utility.yul\":6341:6347   */\n      0x00\n        /* \"#utility.yul\":6390:6392   */\n      0x60\n        /* \"#utility.yul\":6378:6387   */\n      dup5\n        /* \"#utility.yul\":6369:6376   */\n      dup7\n        /* \"#utility.yul\":6365:6388   */\n      sub\n        /* \"#utility.yul\":6361:6393   */\n      slt\n        /* \"#utility.yul\":6358:6477   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":6396:6475   */\n      tag_392\n      tag_300\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":6358:6477   */\n    tag_391:\n        /* \"#utility.yul\":6516:6517   */\n      0x00\n        /* \"#utility.yul\":6541:6594   */\n      tag_393\n        /* \"#utility.yul\":6586:6593   */\n      dup7\n        /* \"#utility.yul\":6577:6583   */\n      dup3\n        /* \"#utility.yul\":6566:6575   */\n      dup8\n        /* \"#utility.yul\":6562:6584   */\n      add\n        /* \"#utility.yul\":6541:6594   */\n      tag_303\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":6531:6594   */\n      swap4\n      pop\n        /* \"#utility.yul\":6487:6604   */\n      pop\n        /* \"#utility.yul\":6643:6645   */\n      0x20\n        /* \"#utility.yul\":6669:6722   */\n      tag_394\n        /* \"#utility.yul\":6714:6721   */\n      dup7\n        /* \"#utility.yul\":6705:6711   */\n      dup3\n        /* \"#utility.yul\":6694:6703   */\n      dup8\n        /* \"#utility.yul\":6690:6712   */\n      add\n        /* \"#utility.yul\":6669:6722   */\n      tag_307\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":6659:6722   */\n      swap3\n      pop\n        /* \"#utility.yul\":6614:6732   */\n      pop\n        /* \"#utility.yul\":6771:6773   */\n      0x40\n        /* \"#utility.yul\":6797:6850   */\n      tag_395\n        /* \"#utility.yul\":6842:6849   */\n      dup7\n        /* \"#utility.yul\":6833:6839   */\n      dup3\n        /* \"#utility.yul\":6822:6831   */\n      dup8\n        /* \"#utility.yul\":6818:6840   */\n      add\n        /* \"#utility.yul\":6797:6850   */\n      tag_307\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":6787:6850   */\n      swap2\n      pop\n        /* \"#utility.yul\":6742:6860   */\n      pop\n        /* \"#utility.yul\":6248:6867   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6873:7347   */\n    tag_131:\n        /* \"#utility.yul\":6941:6947   */\n      0x00\n        /* \"#utility.yul\":6949:6955   */\n      0x00\n        /* \"#utility.yul\":6998:7000   */\n      0x40\n        /* \"#utility.yul\":6986:6995   */\n      dup4\n        /* \"#utility.yul\":6977:6984   */\n      dup6\n        /* \"#utility.yul\":6973:6996   */\n      sub\n        /* \"#utility.yul\":6969:7001   */\n      slt\n        /* \"#utility.yul\":6966:7085   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":7004:7083   */\n      tag_398\n      tag_300\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":6966:7085   */\n    tag_397:\n        /* \"#utility.yul\":7124:7125   */\n      0x00\n        /* \"#utility.yul\":7149:7202   */\n      tag_399\n        /* \"#utility.yul\":7194:7201   */\n      dup6\n        /* \"#utility.yul\":7185:7191   */\n      dup3\n        /* \"#utility.yul\":7174:7183   */\n      dup7\n        /* \"#utility.yul\":7170:7192   */\n      add\n        /* \"#utility.yul\":7149:7202   */\n      tag_307\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":7139:7202   */\n      swap3\n      pop\n        /* \"#utility.yul\":7095:7212   */\n      pop\n        /* \"#utility.yul\":7251:7253   */\n      0x20\n        /* \"#utility.yul\":7277:7330   */\n      tag_400\n        /* \"#utility.yul\":7322:7329   */\n      dup6\n        /* \"#utility.yul\":7313:7319   */\n      dup3\n        /* \"#utility.yul\":7302:7311   */\n      dup7\n        /* \"#utility.yul\":7298:7320   */\n      add\n        /* \"#utility.yul\":7277:7330   */\n      tag_307\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":7267:7330   */\n      swap2\n      pop\n        /* \"#utility.yul\":7222:7340   */\n      pop\n        /* \"#utility.yul\":6873:7347   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7353:7496   */\n    tag_313:\n        /* \"#utility.yul\":7410:7415   */\n      0x00\n        /* \"#utility.yul\":7441:7447   */\n      dup2\n        /* \"#utility.yul\":7435:7448   */\n      mload\n        /* \"#utility.yul\":7426:7448   */\n      swap1\n      pop\n        /* \"#utility.yul\":7457:7490   */\n      tag_402\n        /* \"#utility.yul\":7484:7489   */\n      dup2\n        /* \"#utility.yul\":7457:7490   */\n      tag_302\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":7353:7496   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7502:7853   */\n    tag_143:\n        /* \"#utility.yul\":7572:7578   */\n      0x00\n        /* \"#utility.yul\":7621:7623   */\n      0x20\n        /* \"#utility.yul\":7609:7618   */\n      dup3\n        /* \"#utility.yul\":7600:7607   */\n      dup5\n        /* \"#utility.yul\":7596:7619   */\n      sub\n        /* \"#utility.yul\":7592:7624   */\n      slt\n        /* \"#utility.yul\":7589:7708   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":7627:7706   */\n      tag_405\n      tag_300\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":7589:7708   */\n    tag_404:\n        /* \"#utility.yul\":7747:7748   */\n      0x00\n        /* \"#utility.yul\":7772:7836   */\n      tag_406\n        /* \"#utility.yul\":7828:7835   */\n      dup5\n        /* \"#utility.yul\":7819:7825   */\n      dup3\n        /* \"#utility.yul\":7808:7817   */\n      dup6\n        /* \"#utility.yul\":7804:7826   */\n      add\n        /* \"#utility.yul\":7772:7836   */\n      tag_313\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":7762:7836   */\n      swap2\n      pop\n        /* \"#utility.yul\":7718:7846   */\n      pop\n        /* \"#utility.yul\":7502:7853   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7859:8039   */\n    tag_314:\n        /* \"#utility.yul\":7907:7984   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7904:7905   */\n      0x00\n        /* \"#utility.yul\":7897:7985   */\n      mstore\n        /* \"#utility.yul\":8004:8008   */\n      0x22\n        /* \"#utility.yul\":8001:8002   */\n      0x04\n        /* \"#utility.yul\":7994:8009   */\n      mstore\n        /* \"#utility.yul\":8028:8032   */\n      0x24\n        /* \"#utility.yul\":8025:8026   */\n      0x00\n        /* \"#utility.yul\":8018:8033   */\n      revert\n        /* \"#utility.yul\":8045:8365   */\n    tag_146:\n        /* \"#utility.yul\":8089:8095   */\n      0x00\n        /* \"#utility.yul\":8126:8127   */\n      0x02\n        /* \"#utility.yul\":8120:8124   */\n      dup3\n        /* \"#utility.yul\":8116:8128   */\n      div\n        /* \"#utility.yul\":8106:8128   */\n      swap1\n      pop\n        /* \"#utility.yul\":8173:8174   */\n      0x01\n        /* \"#utility.yul\":8167:8171   */\n      dup3\n        /* \"#utility.yul\":8163:8175   */\n      and\n        /* \"#utility.yul\":8194:8212   */\n      dup1\n        /* \"#utility.yul\":8184:8265   */\n      tag_409\n      jumpi\n        /* \"#utility.yul\":8250:8254   */\n      0x7f\n        /* \"#utility.yul\":8242:8248   */\n      dup3\n        /* \"#utility.yul\":8238:8255   */\n      and\n        /* \"#utility.yul\":8228:8255   */\n      swap2\n      pop\n        /* \"#utility.yul\":8184:8265   */\n    tag_409:\n        /* \"#utility.yul\":8312:8314   */\n      0x20\n        /* \"#utility.yul\":8304:8310   */\n      dup3\n        /* \"#utility.yul\":8301:8315   */\n      lt\n        /* \"#utility.yul\":8281:8299   */\n      dup2\n        /* \"#utility.yul\":8278:8316   */\n      sub\n        /* \"#utility.yul\":8275:8359   */\n      tag_410\n      jumpi\n        /* \"#utility.yul\":8331:8349   */\n      tag_411\n      tag_314\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":8275:8359   */\n    tag_410:\n        /* \"#utility.yul\":8096:8365   */\n      pop\n        /* \"#utility.yul\":8045:8365   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8371:8551   */\n    tag_315:\n        /* \"#utility.yul\":8419:8496   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8416:8417   */\n      0x00\n        /* \"#utility.yul\":8409:8497   */\n      mstore\n        /* \"#utility.yul\":8516:8520   */\n      0x11\n        /* \"#utility.yul\":8513:8514   */\n      0x04\n        /* \"#utility.yul\":8506:8521   */\n      mstore\n        /* \"#utility.yul\":8540:8544   */\n      0x24\n        /* \"#utility.yul\":8537:8538   */\n      0x00\n        /* \"#utility.yul\":8530:8545   */\n      revert\n        /* \"#utility.yul\":8557:8967   */\n    tag_156:\n        /* \"#utility.yul\":8597:8604   */\n      0x00\n        /* \"#utility.yul\":8620:8640   */\n      tag_414\n        /* \"#utility.yul\":8638:8639   */\n      dup3\n        /* \"#utility.yul\":8620:8640   */\n      tag_292\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":8615:8640   */\n      swap2\n      pop\n        /* \"#utility.yul\":8654:8674   */\n      tag_415\n        /* \"#utility.yul\":8672:8673   */\n      dup4\n        /* \"#utility.yul\":8654:8674   */\n      tag_292\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":8649:8674   */\n      swap3\n      pop\n        /* \"#utility.yul\":8709:8710   */\n      dup3\n        /* \"#utility.yul\":8706:8707   */\n      dup3\n        /* \"#utility.yul\":8702:8711   */\n      mul\n        /* \"#utility.yul\":8731:8761   */\n      tag_416\n        /* \"#utility.yul\":8749:8760   */\n      dup2\n        /* \"#utility.yul\":8731:8761   */\n      tag_292\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":8720:8761   */\n      swap2\n      pop\n        /* \"#utility.yul\":8910:8911   */\n      dup3\n        /* \"#utility.yul\":8901:8908   */\n      dup3\n        /* \"#utility.yul\":8897:8912   */\n      div\n        /* \"#utility.yul\":8894:8895   */\n      dup5\n        /* \"#utility.yul\":8891:8913   */\n      eq\n        /* \"#utility.yul\":8871:8872   */\n      dup4\n        /* \"#utility.yul\":8864:8873   */\n      iszero\n        /* \"#utility.yul\":8844:8927   */\n      or\n        /* \"#utility.yul\":8821:8960   */\n      tag_417\n      jumpi\n        /* \"#utility.yul\":8940:8958   */\n      tag_418\n      tag_315\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":8821:8960   */\n    tag_417:\n        /* \"#utility.yul\":8605:8967   */\n      pop\n        /* \"#utility.yul\":8557:8967   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8973:9153   */\n    tag_316:\n        /* \"#utility.yul\":9021:9098   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9018:9019   */\n      0x00\n        /* \"#utility.yul\":9011:9099   */\n      mstore\n        /* \"#utility.yul\":9118:9122   */\n      0x12\n        /* \"#utility.yul\":9115:9116   */\n      0x04\n        /* \"#utility.yul\":9108:9123   */\n      mstore\n        /* \"#utility.yul\":9142:9146   */\n      0x24\n        /* \"#utility.yul\":9139:9140   */\n      0x00\n        /* \"#utility.yul\":9132:9147   */\n      revert\n        /* \"#utility.yul\":9159:9344   */\n    tag_158:\n        /* \"#utility.yul\":9199:9200   */\n      0x00\n        /* \"#utility.yul\":9216:9236   */\n      tag_421\n        /* \"#utility.yul\":9234:9235   */\n      dup3\n        /* \"#utility.yul\":9216:9236   */\n      tag_292\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":9211:9236   */\n      swap2\n      pop\n        /* \"#utility.yul\":9250:9270   */\n      tag_422\n        /* \"#utility.yul\":9268:9269   */\n      dup4\n        /* \"#utility.yul\":9250:9270   */\n      tag_292\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":9245:9270   */\n      swap3\n      pop\n        /* \"#utility.yul\":9289:9290   */\n      dup3\n        /* \"#utility.yul\":9279:9314   */\n      tag_423\n      jumpi\n        /* \"#utility.yul\":9294:9312   */\n      tag_424\n      tag_316\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":9279:9314   */\n    tag_423:\n        /* \"#utility.yul\":9336:9337   */\n      dup3\n        /* \"#utility.yul\":9333:9334   */\n      dup3\n        /* \"#utility.yul\":9329:9338   */\n      div\n        /* \"#utility.yul\":9324:9338   */\n      swap1\n      pop\n        /* \"#utility.yul\":9159:9344   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9350:9792   */\n    tag_182:\n        /* \"#utility.yul\":9499:9503   */\n      0x00\n        /* \"#utility.yul\":9537:9539   */\n      0x60\n        /* \"#utility.yul\":9526:9535   */\n      dup3\n        /* \"#utility.yul\":9522:9540   */\n      add\n        /* \"#utility.yul\":9514:9540   */\n      swap1\n      pop\n        /* \"#utility.yul\":9550:9621   */\n      tag_426\n        /* \"#utility.yul\":9618:9619   */\n      0x00\n        /* \"#utility.yul\":9607:9616   */\n      dup4\n        /* \"#utility.yul\":9603:9620   */\n      add\n        /* \"#utility.yul\":9594:9600   */\n      dup7\n        /* \"#utility.yul\":9550:9621   */\n      tag_312\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":9631:9703   */\n      tag_427\n        /* \"#utility.yul\":9699:9701   */\n      0x20\n        /* \"#utility.yul\":9688:9697   */\n      dup4\n        /* \"#utility.yul\":9684:9702   */\n      add\n        /* \"#utility.yul\":9675:9681   */\n      dup6\n        /* \"#utility.yul\":9631:9703   */\n      tag_312\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":9713:9785   */\n      tag_428\n        /* \"#utility.yul\":9781:9783   */\n      0x40\n        /* \"#utility.yul\":9770:9779   */\n      dup4\n        /* \"#utility.yul\":9766:9784   */\n      add\n        /* \"#utility.yul\":9757:9763   */\n      dup5\n        /* \"#utility.yul\":9713:9785   */\n      tag_293\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":9350:9792   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9798:9914   */\n    tag_317:\n        /* \"#utility.yul\":9868:9889   */\n      tag_430\n        /* \"#utility.yul\":9883:9888   */\n      dup2\n        /* \"#utility.yul\":9868:9889   */\n      tag_308\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":9861:9866   */\n      dup2\n        /* \"#utility.yul\":9858:9890   */\n      eq\n        /* \"#utility.yul\":9848:9908   */\n      tag_431\n      jumpi\n        /* \"#utility.yul\":9904:9905   */\n      0x00\n        /* \"#utility.yul\":9901:9902   */\n      0x00\n        /* \"#utility.yul\":9894:9906   */\n      revert\n        /* \"#utility.yul\":9848:9908   */\n    tag_431:\n        /* \"#utility.yul\":9798:9914   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9920:10057   */\n    tag_318:\n        /* \"#utility.yul\":9974:9979   */\n      0x00\n        /* \"#utility.yul\":10005:10011   */\n      dup2\n        /* \"#utility.yul\":9999:10012   */\n      mload\n        /* \"#utility.yul\":9990:10012   */\n      swap1\n      pop\n        /* \"#utility.yul\":10021:10051   */\n      tag_433\n        /* \"#utility.yul\":10045:10050   */\n      dup2\n        /* \"#utility.yul\":10021:10051   */\n      tag_317\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":9920:10057   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10063:10408   */\n    tag_186:\n        /* \"#utility.yul\":10130:10136   */\n      0x00\n        /* \"#utility.yul\":10179:10181   */\n      0x20\n        /* \"#utility.yul\":10167:10176   */\n      dup3\n        /* \"#utility.yul\":10158:10165   */\n      dup5\n        /* \"#utility.yul\":10154:10177   */\n      sub\n        /* \"#utility.yul\":10150:10182   */\n      slt\n        /* \"#utility.yul\":10147:10266   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":10185:10264   */\n      tag_436\n      tag_300\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":10147:10266   */\n    tag_435:\n        /* \"#utility.yul\":10305:10306   */\n      0x00\n        /* \"#utility.yul\":10330:10391   */\n      tag_437\n        /* \"#utility.yul\":10383:10390   */\n      dup5\n        /* \"#utility.yul\":10374:10380   */\n      dup3\n        /* \"#utility.yul\":10363:10372   */\n      dup6\n        /* \"#utility.yul\":10359:10381   */\n      add\n        /* \"#utility.yul\":10330:10391   */\n      tag_318\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":10320:10391   */\n      swap2\n      pop\n        /* \"#utility.yul\":10276:10401   */\n      pop\n        /* \"#utility.yul\":10063:10408   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10414:10746   */\n    tag_190:\n        /* \"#utility.yul\":10535:10539   */\n      0x00\n        /* \"#utility.yul\":10573:10575   */\n      0x40\n        /* \"#utility.yul\":10562:10571   */\n      dup3\n        /* \"#utility.yul\":10558:10576   */\n      add\n        /* \"#utility.yul\":10550:10576   */\n      swap1\n      pop\n        /* \"#utility.yul\":10586:10657   */\n      tag_439\n        /* \"#utility.yul\":10654:10655   */\n      0x00\n        /* \"#utility.yul\":10643:10652   */\n      dup4\n        /* \"#utility.yul\":10639:10656   */\n      add\n        /* \"#utility.yul\":10630:10636   */\n      dup6\n        /* \"#utility.yul\":10586:10657   */\n      tag_293\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":10667:10739   */\n      tag_440\n        /* \"#utility.yul\":10735:10737   */\n      0x20\n        /* \"#utility.yul\":10724:10733   */\n      dup4\n        /* \"#utility.yul\":10720:10738   */\n      add\n        /* \"#utility.yul\":10711:10717   */\n      dup5\n        /* \"#utility.yul\":10667:10739   */\n      tag_293\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":10414:10746   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10752:11084   */\n    tag_218:\n        /* \"#utility.yul\":10873:10877   */\n      0x00\n        /* \"#utility.yul\":10911:10913   */\n      0x40\n        /* \"#utility.yul\":10900:10909   */\n      dup3\n        /* \"#utility.yul\":10896:10914   */\n      add\n        /* \"#utility.yul\":10888:10914   */\n      swap1\n      pop\n        /* \"#utility.yul\":10924:10995   */\n      tag_442\n        /* \"#utility.yul\":10992:10993   */\n      0x00\n        /* \"#utility.yul\":10981:10990   */\n      dup4\n        /* \"#utility.yul\":10977:10994   */\n      add\n        /* \"#utility.yul\":10968:10974   */\n      dup6\n        /* \"#utility.yul\":10924:10995   */\n      tag_312\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":11005:11077   */\n      tag_443\n        /* \"#utility.yul\":11073:11075   */\n      0x20\n        /* \"#utility.yul\":11062:11071   */\n      dup4\n        /* \"#utility.yul\":11058:11076   */\n      add\n        /* \"#utility.yul\":11049:11055   */\n      dup5\n        /* \"#utility.yul\":11005:11077   */\n      tag_293\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":10752:11084   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11090:11532   */\n    tag_258:\n        /* \"#utility.yul\":11239:11243   */\n      0x00\n        /* \"#utility.yul\":11277:11279   */\n      0x60\n        /* \"#utility.yul\":11266:11275   */\n      dup3\n        /* \"#utility.yul\":11262:11280   */\n      add\n        /* \"#utility.yul\":11254:11280   */\n      swap1\n      pop\n        /* \"#utility.yul\":11290:11361   */\n      tag_445\n        /* \"#utility.yul\":11358:11359   */\n      0x00\n        /* \"#utility.yul\":11347:11356   */\n      dup4\n        /* \"#utility.yul\":11343:11360   */\n      add\n        /* \"#utility.yul\":11334:11340   */\n      dup7\n        /* \"#utility.yul\":11290:11361   */\n      tag_312\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":11371:11443   */\n      tag_446\n        /* \"#utility.yul\":11439:11441   */\n      0x20\n        /* \"#utility.yul\":11428:11437   */\n      dup4\n        /* \"#utility.yul\":11424:11442   */\n      add\n        /* \"#utility.yul\":11415:11421   */\n      dup6\n        /* \"#utility.yul\":11371:11443   */\n      tag_293\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":11453:11525   */\n      tag_447\n        /* \"#utility.yul\":11521:11523   */\n      0x40\n        /* \"#utility.yul\":11510:11519   */\n      dup4\n        /* \"#utility.yul\":11506:11524   */\n      add\n        /* \"#utility.yul\":11497:11503   */\n      dup5\n        /* \"#utility.yul\":11453:11525   */\n      tag_293\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":11090:11532   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11538:11729   */\n    tag_285:\n        /* \"#utility.yul\":11578:11581   */\n      0x00\n        /* \"#utility.yul\":11597:11617   */\n      tag_449\n        /* \"#utility.yul\":11615:11616   */\n      dup3\n        /* \"#utility.yul\":11597:11617   */\n      tag_292\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":11592:11617   */\n      swap2\n      pop\n        /* \"#utility.yul\":11631:11651   */\n      tag_450\n        /* \"#utility.yul\":11649:11650   */\n      dup4\n        /* \"#utility.yul\":11631:11651   */\n      tag_292\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":11626:11651   */\n      swap3\n      pop\n        /* \"#utility.yul\":11674:11675   */\n      dup3\n        /* \"#utility.yul\":11671:11672   */\n      dup3\n        /* \"#utility.yul\":11667:11676   */\n      add\n        /* \"#utility.yul\":11660:11676   */\n      swap1\n      pop\n        /* \"#utility.yul\":11695:11698   */\n      dup1\n        /* \"#utility.yul\":11692:11693   */\n      dup3\n        /* \"#utility.yul\":11689:11699   */\n      gt\n        /* \"#utility.yul\":11686:11722   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":11702:11720   */\n      tag_452\n      tag_315\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":11686:11722   */\n    tag_451:\n        /* \"#utility.yul\":11538:11729   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d90a7bf830422d1c8298f70788475340d164e43316cb89801d1a956b6b3a601a64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_358": {
									"entryPoint": null,
									"id": 358,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_988": {
									"entryPoint": null,
									"id": 988,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_ERC20_$821_fromMemory": {
									"entryPoint": 249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ERC20_$821t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_memory": {
									"entryPoint": 387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 145,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1112,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ERC20_$821": {
									"entryPoint": 210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 461,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 731,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 293,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 269,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 273,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 158,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 154,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 869,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1010,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ERC20_$821": {
									"entryPoint": 227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1047,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9327:7",
										"nodeType": "YulBlock",
										"src": "0:9327:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "626:51:7",
													"nodeType": "YulBlock",
													"src": "626:51:7",
													"statements": [
														{
															"nativeSrc": "636:35:7",
															"nodeType": "YulAssignment",
															"src": "636:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "665:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "665:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "647:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "647:17:7"
																},
																"nativeSrc": "647:24:7",
																"nodeType": "YulFunctionCall",
																"src": "647:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "636:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "636:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ERC20_$821",
												"nativeSrc": "568:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "608:5:7",
														"nodeType": "YulTypedName",
														"src": "608:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "618:7:7",
														"nodeType": "YulTypedName",
														"src": "618:7:7",
														"type": ""
													}
												],
												"src": "568:109:7"
											},
											{
												"body": {
													"nativeSrc": "739:92:7",
													"nodeType": "YulBlock",
													"src": "739:92:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "809:16:7",
																"nodeType": "YulBlock",
																"src": "809:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "818:1:7",
																					"nodeType": "YulLiteral",
																					"src": "818:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:7",
																					"nodeType": "YulLiteral",
																					"src": "821:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "811:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "811:6:7"
																			},
																			"nativeSrc": "811:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "811:12:7"
																		},
																		"nativeSrc": "811:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "811:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "762:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "762:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "800:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "800:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ERC20_$821",
																					"nativeSrc": "769:30:7",
																					"nodeType": "YulIdentifier",
																					"src": "769:30:7"
																				},
																				"nativeSrc": "769:37:7",
																				"nodeType": "YulFunctionCall",
																				"src": "769:37:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "759:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "759:2:7"
																		},
																		"nativeSrc": "759:48:7",
																		"nodeType": "YulFunctionCall",
																		"src": "759:48:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "752:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "752:6:7"
																},
																"nativeSrc": "752:56:7",
																"nodeType": "YulFunctionCall",
																"src": "752:56:7"
															},
															"nativeSrc": "749:76:7",
															"nodeType": "YulIf",
															"src": "749:76:7"
														}
													]
												},
												"name": "validator_revert_t_contract$_ERC20_$821",
												"nativeSrc": "683:148:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "732:5:7",
														"nodeType": "YulTypedName",
														"src": "732:5:7",
														"type": ""
													}
												],
												"src": "683:148:7"
											},
											{
												"body": {
													"nativeSrc": "913:93:7",
													"nodeType": "YulBlock",
													"src": "913:93:7",
													"statements": [
														{
															"nativeSrc": "923:22:7",
															"nodeType": "YulAssignment",
															"src": "923:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "938:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "938:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "932:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "932:5:7"
																},
																"nativeSrc": "932:13:7",
																"nodeType": "YulFunctionCall",
																"src": "932:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "923:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "923:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "994:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "994:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ERC20_$821",
																	"nativeSrc": "954:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "954:39:7"
																},
																"nativeSrc": "954:46:7",
																"nodeType": "YulFunctionCall",
																"src": "954:46:7"
															},
															"nativeSrc": "954:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "954:46:7"
														}
													]
												},
												"name": "abi_decode_t_contract$_ERC20_$821_fromMemory",
												"nativeSrc": "837:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "891:6:7",
														"nodeType": "YulTypedName",
														"src": "891:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "899:3:7",
														"nodeType": "YulTypedName",
														"src": "899:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "907:5:7",
														"nodeType": "YulTypedName",
														"src": "907:5:7",
														"type": ""
													}
												],
												"src": "837:169:7"
											},
											{
												"body": {
													"nativeSrc": "1101:28:7",
													"nodeType": "YulBlock",
													"src": "1101:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1118:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1118:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1121:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1121:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1111:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1111:6:7"
																},
																"nativeSrc": "1111:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1111:12:7"
															},
															"nativeSrc": "1111:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1111:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1012:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1012:117:7"
											},
											{
												"body": {
													"nativeSrc": "1224:28:7",
													"nodeType": "YulBlock",
													"src": "1224:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1241:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1241:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1244:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1244:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1234:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1234:6:7"
																},
																"nativeSrc": "1234:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1234:12:7"
															},
															"nativeSrc": "1234:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1234:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "1135:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1135:117:7"
											},
											{
												"body": {
													"nativeSrc": "1306:54:7",
													"nodeType": "YulBlock",
													"src": "1306:54:7",
													"statements": [
														{
															"nativeSrc": "1316:38:7",
															"nodeType": "YulAssignment",
															"src": "1316:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1334:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1334:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1341:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1341:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1330:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1330:3:7"
																		},
																		"nativeSrc": "1330:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1330:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1350:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1350:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1346:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:7"
																		},
																		"nativeSrc": "1346:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1326:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1326:3:7"
																},
																"nativeSrc": "1326:28:7",
																"nodeType": "YulFunctionCall",
																"src": "1326:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1316:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1316:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1258:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1289:5:7",
														"nodeType": "YulTypedName",
														"src": "1289:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1299:6:7",
														"nodeType": "YulTypedName",
														"src": "1299:6:7",
														"type": ""
													}
												],
												"src": "1258:102:7"
											},
											{
												"body": {
													"nativeSrc": "1394:152:7",
													"nodeType": "YulBlock",
													"src": "1394:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1411:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1411:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1414:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1414:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1404:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1404:6:7"
																},
																"nativeSrc": "1404:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1404:88:7"
															},
															"nativeSrc": "1404:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1404:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1508:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1511:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1501:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:7"
																},
																"nativeSrc": "1501:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1501:15:7"
															},
															"nativeSrc": "1501:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1501:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1532:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1532:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1535:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1535:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1525:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1525:6:7"
																},
																"nativeSrc": "1525:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1525:15:7"
															},
															"nativeSrc": "1525:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1525:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1366:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1366:180:7"
											},
											{
												"body": {
													"nativeSrc": "1595:238:7",
													"nodeType": "YulBlock",
													"src": "1595:238:7",
													"statements": [
														{
															"nativeSrc": "1605:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1605:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1627:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1627:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1657:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1657:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1635:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "1635:21:7"
																		},
																		"nativeSrc": "1635:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1635:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1623:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1623:3:7"
																},
																"nativeSrc": "1623:40:7",
																"nodeType": "YulFunctionCall",
																"src": "1623:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1609:10:7",
																	"nodeType": "YulTypedName",
																	"src": "1609:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1774:22:7",
																"nodeType": "YulBlock",
																"src": "1774:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1776:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1776:16:7"
																			},
																			"nativeSrc": "1776:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1776:18:7"
																		},
																		"nativeSrc": "1776:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1776:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1717:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1717:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1729:18:7",
																				"nodeType": "YulLiteral",
																				"src": "1729:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1714:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1714:2:7"
																		},
																		"nativeSrc": "1714:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1714:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1753:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1753:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1765:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1750:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1750:2:7"
																		},
																		"nativeSrc": "1750:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1750:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1711:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1711:2:7"
																},
																"nativeSrc": "1711:62:7",
																"nodeType": "YulFunctionCall",
																"src": "1711:62:7"
															},
															"nativeSrc": "1708:88:7",
															"nodeType": "YulIf",
															"src": "1708:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1812:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1812:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1816:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1816:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1805:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1805:6:7"
																},
																"nativeSrc": "1805:22:7",
																"nodeType": "YulFunctionCall",
																"src": "1805:22:7"
															},
															"nativeSrc": "1805:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "1805:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1552:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1581:6:7",
														"nodeType": "YulTypedName",
														"src": "1581:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1589:4:7",
														"nodeType": "YulTypedName",
														"src": "1589:4:7",
														"type": ""
													}
												],
												"src": "1552:281:7"
											},
											{
												"body": {
													"nativeSrc": "1880:88:7",
													"nodeType": "YulBlock",
													"src": "1880:88:7",
													"statements": [
														{
															"nativeSrc": "1890:30:7",
															"nodeType": "YulAssignment",
															"src": "1890:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1900:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1900:18:7"
																},
																"nativeSrc": "1900:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1900:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1890:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1890:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1949:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1949:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1957:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1957:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1929:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "1929:19:7"
																},
																"nativeSrc": "1929:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1929:33:7"
															},
															"nativeSrc": "1929:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1929:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1839:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1864:4:7",
														"nodeType": "YulTypedName",
														"src": "1864:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1873:6:7",
														"nodeType": "YulTypedName",
														"src": "1873:6:7",
														"type": ""
													}
												],
												"src": "1839:129:7"
											},
											{
												"body": {
													"nativeSrc": "2041:241:7",
													"nodeType": "YulBlock",
													"src": "2041:241:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2146:22:7",
																"nodeType": "YulBlock",
																"src": "2146:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2148:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2148:16:7"
																			},
																			"nativeSrc": "2148:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2148:18:7"
																		},
																		"nativeSrc": "2148:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2118:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2118:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2126:18:7",
																		"nodeType": "YulLiteral",
																		"src": "2126:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2115:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2115:2:7"
																},
																"nativeSrc": "2115:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2115:30:7"
															},
															"nativeSrc": "2112:56:7",
															"nodeType": "YulIf",
															"src": "2112:56:7"
														},
														{
															"nativeSrc": "2178:37:7",
															"nodeType": "YulAssignment",
															"src": "2178:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2208:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2208:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2186:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "2186:21:7"
																},
																"nativeSrc": "2186:29:7",
																"nodeType": "YulFunctionCall",
																"src": "2186:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2178:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2178:4:7"
																}
															]
														},
														{
															"nativeSrc": "2252:23:7",
															"nodeType": "YulAssignment",
															"src": "2252:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2264:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2264:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2260:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2260:3:7"
																},
																"nativeSrc": "2260:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2260:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2252:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2252:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1974:308:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "2025:6:7",
														"nodeType": "YulTypedName",
														"src": "2025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "2036:4:7",
														"nodeType": "YulTypedName",
														"src": "2036:4:7",
														"type": ""
													}
												],
												"src": "1974:308:7"
											},
											{
												"body": {
													"nativeSrc": "2350:77:7",
													"nodeType": "YulBlock",
													"src": "2350:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2367:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2367:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2372:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2372:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2377:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2377:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2361:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2361:5:7"
																},
																"nativeSrc": "2361:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2361:23:7"
															},
															"nativeSrc": "2361:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "2361:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2404:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2404:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2409:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2409:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2400:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2400:3:7"
																		},
																		"nativeSrc": "2400:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2400:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2418:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2418:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2393:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2393:6:7"
																},
																"nativeSrc": "2393:27:7",
																"nodeType": "YulFunctionCall",
																"src": "2393:27:7"
															},
															"nativeSrc": "2393:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "2393:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2288:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2332:3:7",
														"nodeType": "YulTypedName",
														"src": "2332:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2337:3:7",
														"nodeType": "YulTypedName",
														"src": "2337:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2342:6:7",
														"nodeType": "YulTypedName",
														"src": "2342:6:7",
														"type": ""
													}
												],
												"src": "2288:139:7"
											},
											{
												"body": {
													"nativeSrc": "2528:339:7",
													"nodeType": "YulBlock",
													"src": "2528:339:7",
													"statements": [
														{
															"nativeSrc": "2538:75:7",
															"nodeType": "YulAssignment",
															"src": "2538:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2605:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2605:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "2563:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "2563:41:7"
																		},
																		"nativeSrc": "2563:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2563:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2547:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "2547:15:7"
																},
																"nativeSrc": "2547:66:7",
																"nodeType": "YulFunctionCall",
																"src": "2547:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2538:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2538:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2629:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2629:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2636:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2636:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2622:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2622:6:7"
																},
																"nativeSrc": "2622:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2622:21:7"
															},
															"nativeSrc": "2622:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "2622:21:7"
														},
														{
															"nativeSrc": "2652:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2652:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2667:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2667:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2674:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2674:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2663:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2663:3:7"
																},
																"nativeSrc": "2663:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2663:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2656:3:7",
																	"nodeType": "YulTypedName",
																	"src": "2656:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2717:83:7",
																"nodeType": "YulBlock",
																"src": "2717:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2719:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2719:77:7"
																			},
																			"nativeSrc": "2719:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2719:79:7"
																		},
																		"nativeSrc": "2719:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2719:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2698:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2698:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2703:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2703:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2694:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2694:3:7"
																		},
																		"nativeSrc": "2694:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2694:16:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2712:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2712:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2691:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2691:2:7"
																},
																"nativeSrc": "2691:25:7",
																"nodeType": "YulFunctionCall",
																"src": "2691:25:7"
															},
															"nativeSrc": "2688:112:7",
															"nodeType": "YulIf",
															"src": "2688:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2844:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2844:3:7"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2849:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2849:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2854:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2854:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2809:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "2809:34:7"
																},
																"nativeSrc": "2809:52:7",
																"nodeType": "YulFunctionCall",
																"src": "2809:52:7"
															},
															"nativeSrc": "2809:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "2809:52:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2433:434:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2501:3:7",
														"nodeType": "YulTypedName",
														"src": "2501:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2506:6:7",
														"nodeType": "YulTypedName",
														"src": "2506:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2514:3:7",
														"nodeType": "YulTypedName",
														"src": "2514:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2522:5:7",
														"nodeType": "YulTypedName",
														"src": "2522:5:7",
														"type": ""
													}
												],
												"src": "2433:434:7"
											},
											{
												"body": {
													"nativeSrc": "2960:282:7",
													"nodeType": "YulBlock",
													"src": "2960:282:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3009:83:7",
																"nodeType": "YulBlock",
																"src": "3009:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3011:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3011:77:7"
																			},
																			"nativeSrc": "3011:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3011:79:7"
																		},
																		"nativeSrc": "3011:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3011:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2988:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2988:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2996:4:7",
																						"nodeType": "YulLiteral",
																						"src": "2996:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2984:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2984:3:7"
																				},
																				"nativeSrc": "2984:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2984:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3003:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3003:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2980:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2980:3:7"
																		},
																		"nativeSrc": "2980:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2980:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2973:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2973:6:7"
																},
																"nativeSrc": "2973:35:7",
																"nodeType": "YulFunctionCall",
																"src": "2973:35:7"
															},
															"nativeSrc": "2970:122:7",
															"nodeType": "YulIf",
															"src": "2970:122:7"
														},
														{
															"nativeSrc": "3101:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3101:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3121:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3121:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3115:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3115:5:7"
																},
																"nativeSrc": "3115:13:7",
																"nodeType": "YulFunctionCall",
																"src": "3115:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3105:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3105:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3137:99:7",
															"nodeType": "YulAssignment",
															"src": "3137:99:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3209:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3209:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3217:4:7",
																				"nodeType": "YulLiteral",
																				"src": "3217:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3205:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3205:3:7"
																		},
																		"nativeSrc": "3205:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3205:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3224:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3224:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3232:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3232:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "3146:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "3146:58:7"
																},
																"nativeSrc": "3146:90:7",
																"nodeType": "YulFunctionCall",
																"src": "3146:90:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3137:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3137:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2887:355:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2938:6:7",
														"nodeType": "YulTypedName",
														"src": "2938:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2946:3:7",
														"nodeType": "YulTypedName",
														"src": "2946:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2954:5:7",
														"nodeType": "YulTypedName",
														"src": "2954:5:7",
														"type": ""
													}
												],
												"src": "2887:355:7"
											},
											{
												"body": {
													"nativeSrc": "3392:891:7",
													"nodeType": "YulBlock",
													"src": "3392:891:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3438:83:7",
																"nodeType": "YulBlock",
																"src": "3438:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3440:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3440:77:7"
																			},
																			"nativeSrc": "3440:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3440:79:7"
																		},
																		"nativeSrc": "3440:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3440:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3413:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3413:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3422:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3422:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3409:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3409:3:7"
																		},
																		"nativeSrc": "3409:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3409:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3434:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3434:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3405:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3405:3:7"
																},
																"nativeSrc": "3405:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3405:32:7"
															},
															"nativeSrc": "3402:119:7",
															"nodeType": "YulIf",
															"src": "3402:119:7"
														},
														{
															"nativeSrc": "3531:141:7",
															"nodeType": "YulBlock",
															"src": "3531:141:7",
															"statements": [
																{
																	"nativeSrc": "3546:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3546:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3560:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3560:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3550:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3550:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3575:87:7",
																	"nodeType": "YulAssignment",
																	"src": "3575:87:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3634:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3634:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3645:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3645:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3630:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3630:3:7"
																				},
																				"nativeSrc": "3630:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3630:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3654:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3654:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ERC20_$821_fromMemory",
																			"nativeSrc": "3585:44:7",
																			"nodeType": "YulIdentifier",
																			"src": "3585:44:7"
																		},
																		"nativeSrc": "3585:77:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3585:77:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3575:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3575:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3682:292:7",
															"nodeType": "YulBlock",
															"src": "3682:292:7",
															"statements": [
																{
																	"nativeSrc": "3697:39:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3697:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3721:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3721:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3732:2:7",
																						"nodeType": "YulLiteral",
																						"src": "3732:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3717:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3717:3:7"
																				},
																				"nativeSrc": "3717:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3717:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3711:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "3711:5:7"
																		},
																		"nativeSrc": "3711:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3711:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3701:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3701:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3783:83:7",
																		"nodeType": "YulBlock",
																		"src": "3783:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3785:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "3785:77:7"
																					},
																					"nativeSrc": "3785:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3785:79:7"
																				},
																				"nativeSrc": "3785:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3785:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3755:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3755:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3763:18:7",
																				"nodeType": "YulLiteral",
																				"src": "3763:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3752:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3752:2:7"
																		},
																		"nativeSrc": "3752:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3752:30:7"
																	},
																	"nativeSrc": "3749:117:7",
																	"nodeType": "YulIf",
																	"src": "3749:117:7"
																},
																{
																	"nativeSrc": "3880:84:7",
																	"nodeType": "YulAssignment",
																	"src": "3880:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3936:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3936:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3947:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3947:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3932:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3932:3:7"
																				},
																				"nativeSrc": "3932:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3932:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3956:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3956:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3890:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "3890:41:7"
																		},
																		"nativeSrc": "3890:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3890:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3880:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3880:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3984:292:7",
															"nodeType": "YulBlock",
															"src": "3984:292:7",
															"statements": [
																{
																	"nativeSrc": "3999:39:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3999:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4023:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4023:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4034:2:7",
																						"nodeType": "YulLiteral",
																						"src": "4034:2:7",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4019:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4019:3:7"
																				},
																				"nativeSrc": "4019:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4019:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4013:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4013:5:7"
																		},
																		"nativeSrc": "4013:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4013:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4003:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4003:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4085:83:7",
																		"nodeType": "YulBlock",
																		"src": "4085:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4087:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "4087:77:7"
																					},
																					"nativeSrc": "4087:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4087:79:7"
																				},
																				"nativeSrc": "4087:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4087:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4057:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4057:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4065:18:7",
																				"nodeType": "YulLiteral",
																				"src": "4065:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4054:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4054:2:7"
																		},
																		"nativeSrc": "4054:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4054:30:7"
																	},
																	"nativeSrc": "4051:117:7",
																	"nodeType": "YulIf",
																	"src": "4051:117:7"
																},
																{
																	"nativeSrc": "4182:84:7",
																	"nodeType": "YulAssignment",
																	"src": "4182:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4238:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4238:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4249:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4249:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4234:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4234:3:7"
																				},
																				"nativeSrc": "4234:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4234:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4258:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4258:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4192:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "4192:41:7"
																		},
																		"nativeSrc": "4192:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4192:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4182:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4182:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ERC20_$821t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "3248:1035:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3346:9:7",
														"nodeType": "YulTypedName",
														"src": "3346:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3357:7:7",
														"nodeType": "YulTypedName",
														"src": "3357:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3369:6:7",
														"nodeType": "YulTypedName",
														"src": "3369:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3377:6:7",
														"nodeType": "YulTypedName",
														"src": "3377:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3385:6:7",
														"nodeType": "YulTypedName",
														"src": "3385:6:7",
														"type": ""
													}
												],
												"src": "3248:1035:7"
											},
											{
												"body": {
													"nativeSrc": "4348:40:7",
													"nodeType": "YulBlock",
													"src": "4348:40:7",
													"statements": [
														{
															"nativeSrc": "4359:22:7",
															"nodeType": "YulAssignment",
															"src": "4359:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4375:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4375:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4369:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4369:5:7"
																},
																"nativeSrc": "4369:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4369:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4359:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4359:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4289:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4331:5:7",
														"nodeType": "YulTypedName",
														"src": "4331:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4341:6:7",
														"nodeType": "YulTypedName",
														"src": "4341:6:7",
														"type": ""
													}
												],
												"src": "4289:99:7"
											},
											{
												"body": {
													"nativeSrc": "4422:152:7",
													"nodeType": "YulBlock",
													"src": "4422:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4439:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4439:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4442:77:7",
																		"nodeType": "YulLiteral",
																		"src": "4442:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4432:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4432:6:7"
																},
																"nativeSrc": "4432:88:7",
																"nodeType": "YulFunctionCall",
																"src": "4432:88:7"
															},
															"nativeSrc": "4432:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "4432:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4536:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4536:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4539:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4539:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4529:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4529:6:7"
																},
																"nativeSrc": "4529:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4529:15:7"
															},
															"nativeSrc": "4529:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4529:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4560:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4560:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4563:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4563:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4553:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4553:6:7"
																},
																"nativeSrc": "4553:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4553:15:7"
															},
															"nativeSrc": "4553:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4553:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4394:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4394:180:7"
											},
											{
												"body": {
													"nativeSrc": "4631:269:7",
													"nodeType": "YulBlock",
													"src": "4631:269:7",
													"statements": [
														{
															"nativeSrc": "4641:22:7",
															"nodeType": "YulAssignment",
															"src": "4641:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4655:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4655:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4661:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4651:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4651:3:7"
																},
																"nativeSrc": "4651:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4651:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4641:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4641:6:7"
																}
															]
														},
														{
															"nativeSrc": "4672:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4672:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4702:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4702:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4708:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4708:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4698:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4698:3:7"
																},
																"nativeSrc": "4698:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4698:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4676:18:7",
																	"nodeType": "YulTypedName",
																	"src": "4676:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4749:51:7",
																"nodeType": "YulBlock",
																"src": "4749:51:7",
																"statements": [
																	{
																		"nativeSrc": "4763:27:7",
																		"nodeType": "YulAssignment",
																		"src": "4763:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4777:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "4777:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4785:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4785:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4773:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4773:3:7"
																			},
																			"nativeSrc": "4773:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4773:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4763:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4763:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4729:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "4729:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4722:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4722:6:7"
																},
																"nativeSrc": "4722:26:7",
																"nodeType": "YulFunctionCall",
																"src": "4722:26:7"
															},
															"nativeSrc": "4719:81:7",
															"nodeType": "YulIf",
															"src": "4719:81:7"
														},
														{
															"body": {
																"nativeSrc": "4852:42:7",
																"nodeType": "YulBlock",
																"src": "4852:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4866:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4866:16:7"
																			},
																			"nativeSrc": "4866:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4866:18:7"
																		},
																		"nativeSrc": "4866:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4866:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4816:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "4816:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4839:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4839:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4847:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4847:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4836:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4836:2:7"
																		},
																		"nativeSrc": "4836:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4836:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4813:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4813:2:7"
																},
																"nativeSrc": "4813:38:7",
																"nodeType": "YulFunctionCall",
																"src": "4813:38:7"
															},
															"nativeSrc": "4810:84:7",
															"nodeType": "YulIf",
															"src": "4810:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4580:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4615:4:7",
														"nodeType": "YulTypedName",
														"src": "4615:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4624:6:7",
														"nodeType": "YulTypedName",
														"src": "4624:6:7",
														"type": ""
													}
												],
												"src": "4580:320:7"
											},
											{
												"body": {
													"nativeSrc": "4960:87:7",
													"nodeType": "YulBlock",
													"src": "4960:87:7",
													"statements": [
														{
															"nativeSrc": "4970:11:7",
															"nodeType": "YulAssignment",
															"src": "4970:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "4978:3:7",
																"nodeType": "YulIdentifier",
																"src": "4978:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4970:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4970:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4998:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4998:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5001:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5001:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4991:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4991:6:7"
																},
																"nativeSrc": "4991:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4991:14:7"
															},
															"nativeSrc": "4991:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "4991:14:7"
														},
														{
															"nativeSrc": "5014:26:7",
															"nodeType": "YulAssignment",
															"src": "5014:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5032:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5032:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5035:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5035:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5022:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5022:9:7"
																},
																"nativeSrc": "5022:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5022:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5014:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5014:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4906:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4947:3:7",
														"nodeType": "YulTypedName",
														"src": "4947:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4955:4:7",
														"nodeType": "YulTypedName",
														"src": "4955:4:7",
														"type": ""
													}
												],
												"src": "4906:141:7"
											},
											{
												"body": {
													"nativeSrc": "5097:49:7",
													"nodeType": "YulBlock",
													"src": "5097:49:7",
													"statements": [
														{
															"nativeSrc": "5107:33:7",
															"nodeType": "YulAssignment",
															"src": "5107:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5125:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5125:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5132:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5132:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5121:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5121:3:7"
																		},
																		"nativeSrc": "5121:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5121:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5137:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5137:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5117:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5117:3:7"
																},
																"nativeSrc": "5117:23:7",
																"nodeType": "YulFunctionCall",
																"src": "5117:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5107:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5107:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5053:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5080:5:7",
														"nodeType": "YulTypedName",
														"src": "5080:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5090:6:7",
														"nodeType": "YulTypedName",
														"src": "5090:6:7",
														"type": ""
													}
												],
												"src": "5053:93:7"
											},
											{
												"body": {
													"nativeSrc": "5205:54:7",
													"nodeType": "YulBlock",
													"src": "5205:54:7",
													"statements": [
														{
															"nativeSrc": "5215:37:7",
															"nodeType": "YulAssignment",
															"src": "5215:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5240:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5240:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5246:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5246:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5236:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5236:3:7"
																},
																"nativeSrc": "5236:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5236:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5215:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5215:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5152:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5180:4:7",
														"nodeType": "YulTypedName",
														"src": "5180:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5186:5:7",
														"nodeType": "YulTypedName",
														"src": "5186:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5196:8:7",
														"nodeType": "YulTypedName",
														"src": "5196:8:7",
														"type": ""
													}
												],
												"src": "5152:107:7"
											},
											{
												"body": {
													"nativeSrc": "5341:317:7",
													"nodeType": "YulBlock",
													"src": "5341:317:7",
													"statements": [
														{
															"nativeSrc": "5351:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5351:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5372:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "5372:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5384:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5384:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5368:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5368:3:7"
																},
																"nativeSrc": "5368:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5368:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5355:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5355:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5395:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5395:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5426:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5426:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5437:66:7",
																		"nodeType": "YulLiteral",
																		"src": "5437:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5407:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5407:18:7"
																},
																"nativeSrc": "5407:97:7",
																"nodeType": "YulFunctionCall",
																"src": "5407:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5399:4:7",
																	"nodeType": "YulTypedName",
																	"src": "5399:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5513:51:7",
															"nodeType": "YulAssignment",
															"src": "5513:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5544:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5544:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5555:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "5555:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5525:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5525:18:7"
																},
																"nativeSrc": "5525:39:7",
																"nodeType": "YulFunctionCall",
																"src": "5525:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5513:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5513:8:7"
																}
															]
														},
														{
															"nativeSrc": "5573:30:7",
															"nodeType": "YulAssignment",
															"src": "5573:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5586:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5586:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5597:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5597:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5593:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5593:3:7"
																		},
																		"nativeSrc": "5593:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5593:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5582:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5582:3:7"
																},
																"nativeSrc": "5582:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5582:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5573:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5573:5:7"
																}
															]
														},
														{
															"nativeSrc": "5612:40:7",
															"nodeType": "YulAssignment",
															"src": "5612:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5625:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5625:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5636:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "5636:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5646:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5646:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5632:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5632:3:7"
																		},
																		"nativeSrc": "5632:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5632:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5622:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5622:2:7"
																},
																"nativeSrc": "5622:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5622:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5612:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5612:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5265:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5302:5:7",
														"nodeType": "YulTypedName",
														"src": "5302:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5309:10:7",
														"nodeType": "YulTypedName",
														"src": "5309:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5321:8:7",
														"nodeType": "YulTypedName",
														"src": "5321:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5334:6:7",
														"nodeType": "YulTypedName",
														"src": "5334:6:7",
														"type": ""
													}
												],
												"src": "5265:393:7"
											},
											{
												"body": {
													"nativeSrc": "5709:32:7",
													"nodeType": "YulBlock",
													"src": "5709:32:7",
													"statements": [
														{
															"nativeSrc": "5719:16:7",
															"nodeType": "YulAssignment",
															"src": "5719:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "5730:5:7",
																"nodeType": "YulIdentifier",
																"src": "5730:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5719:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5719:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5664:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5691:5:7",
														"nodeType": "YulTypedName",
														"src": "5691:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5701:7:7",
														"nodeType": "YulTypedName",
														"src": "5701:7:7",
														"type": ""
													}
												],
												"src": "5664:77:7"
											},
											{
												"body": {
													"nativeSrc": "5779:28:7",
													"nodeType": "YulBlock",
													"src": "5779:28:7",
													"statements": [
														{
															"nativeSrc": "5789:12:7",
															"nodeType": "YulAssignment",
															"src": "5789:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "5796:5:7",
																"nodeType": "YulIdentifier",
																"src": "5796:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5789:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5789:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5747:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5765:5:7",
														"nodeType": "YulTypedName",
														"src": "5765:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5775:3:7",
														"nodeType": "YulTypedName",
														"src": "5775:3:7",
														"type": ""
													}
												],
												"src": "5747:60:7"
											},
											{
												"body": {
													"nativeSrc": "5873:82:7",
													"nodeType": "YulBlock",
													"src": "5873:82:7",
													"statements": [
														{
															"nativeSrc": "5883:66:7",
															"nodeType": "YulAssignment",
															"src": "5883:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5941:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5941:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5923:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "5923:17:7"
																				},
																				"nativeSrc": "5923:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5923:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5914:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "5914:8:7"
																		},
																		"nativeSrc": "5914:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5914:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5896:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "5896:17:7"
																},
																"nativeSrc": "5896:53:7",
																"nodeType": "YulFunctionCall",
																"src": "5896:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5883:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5883:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5813:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5853:5:7",
														"nodeType": "YulTypedName",
														"src": "5853:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5863:9:7",
														"nodeType": "YulTypedName",
														"src": "5863:9:7",
														"type": ""
													}
												],
												"src": "5813:142:7"
											},
											{
												"body": {
													"nativeSrc": "6008:28:7",
													"nodeType": "YulBlock",
													"src": "6008:28:7",
													"statements": [
														{
															"nativeSrc": "6018:12:7",
															"nodeType": "YulAssignment",
															"src": "6018:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "6025:5:7",
																"nodeType": "YulIdentifier",
																"src": "6025:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6018:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6018:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5961:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5994:5:7",
														"nodeType": "YulTypedName",
														"src": "5994:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6004:3:7",
														"nodeType": "YulTypedName",
														"src": "6004:3:7",
														"type": ""
													}
												],
												"src": "5961:75:7"
											},
											{
												"body": {
													"nativeSrc": "6118:193:7",
													"nodeType": "YulBlock",
													"src": "6118:193:7",
													"statements": [
														{
															"nativeSrc": "6128:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6128:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6183:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "6183:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6152:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6152:30:7"
																},
																"nativeSrc": "6152:39:7",
																"nodeType": "YulFunctionCall",
																"src": "6152:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6132:16:7",
																	"nodeType": "YulTypedName",
																	"src": "6132:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6207:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6207:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6247:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "6247:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6241:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6241:5:7"
																				},
																				"nativeSrc": "6241:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6241:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6254:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6254:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6286:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "6286:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6262:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "6262:23:7"
																				},
																				"nativeSrc": "6262:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6262:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6213:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "6213:27:7"
																		},
																		"nativeSrc": "6213:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6213:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6200:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6200:6:7"
																},
																"nativeSrc": "6200:105:7",
																"nodeType": "YulFunctionCall",
																"src": "6200:105:7"
															},
															"nativeSrc": "6200:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "6200:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6042:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6095:4:7",
														"nodeType": "YulTypedName",
														"src": "6095:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6101:6:7",
														"nodeType": "YulTypedName",
														"src": "6101:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6109:7:7",
														"nodeType": "YulTypedName",
														"src": "6109:7:7",
														"type": ""
													}
												],
												"src": "6042:269:7"
											},
											{
												"body": {
													"nativeSrc": "6366:24:7",
													"nodeType": "YulBlock",
													"src": "6366:24:7",
													"statements": [
														{
															"nativeSrc": "6376:8:7",
															"nodeType": "YulAssignment",
															"src": "6376:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "6383:1:7",
																"nodeType": "YulLiteral",
																"src": "6383:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6376:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6376:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6317:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6362:3:7",
														"nodeType": "YulTypedName",
														"src": "6362:3:7",
														"type": ""
													}
												],
												"src": "6317:73:7"
											},
											{
												"body": {
													"nativeSrc": "6449:136:7",
													"nodeType": "YulBlock",
													"src": "6449:136:7",
													"statements": [
														{
															"nativeSrc": "6459:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6459:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6473:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6473:30:7"
																},
																"nativeSrc": "6473:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6473:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6463:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6463:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6558:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6558:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6564:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6564:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6572:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6572:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6514:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6514:43:7"
																},
																"nativeSrc": "6514:65:7",
																"nodeType": "YulFunctionCall",
																"src": "6514:65:7"
															},
															"nativeSrc": "6514:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "6514:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6396:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6435:4:7",
														"nodeType": "YulTypedName",
														"src": "6435:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6441:6:7",
														"nodeType": "YulTypedName",
														"src": "6441:6:7",
														"type": ""
													}
												],
												"src": "6396:189:7"
											},
											{
												"body": {
													"nativeSrc": "6641:136:7",
													"nodeType": "YulBlock",
													"src": "6641:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6708:63:7",
																"nodeType": "YulBlock",
																"src": "6708:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6752:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6752:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6759:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6759:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6722:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "6722:29:7"
																			},
																			"nativeSrc": "6722:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6722:39:7"
																		},
																		"nativeSrc": "6722:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6722:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6661:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6661:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6668:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6668:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6658:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6658:2:7"
																},
																"nativeSrc": "6658:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6658:14:7"
															},
															"nativeSrc": "6651:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6673:26:7",
																"nodeType": "YulBlock",
																"src": "6673:26:7",
																"statements": [
																	{
																		"nativeSrc": "6675:22:7",
																		"nodeType": "YulAssignment",
																		"src": "6675:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6688:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6688:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6695:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6695:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6684:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6684:3:7"
																			},
																			"nativeSrc": "6684:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6684:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6675:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6675:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6655:2:7",
																"nodeType": "YulBlock",
																"src": "6655:2:7",
																"statements": []
															},
															"src": "6651:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6591:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6629:5:7",
														"nodeType": "YulTypedName",
														"src": "6629:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6636:3:7",
														"nodeType": "YulTypedName",
														"src": "6636:3:7",
														"type": ""
													}
												],
												"src": "6591:186:7"
											},
											{
												"body": {
													"nativeSrc": "6862:464:7",
													"nodeType": "YulBlock",
													"src": "6862:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6888:431:7",
																"nodeType": "YulBlock",
																"src": "6888:431:7",
																"statements": [
																	{
																		"nativeSrc": "6902:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6902:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6950:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6950:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6918:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "6918:31:7"
																			},
																			"nativeSrc": "6918:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6918:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6906:8:7",
																				"nodeType": "YulTypedName",
																				"src": "6906:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6969:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6969:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6992:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "6992:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7020:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "7020:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7002:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "7002:17:7"
																					},
																					"nativeSrc": "7002:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7002:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6988:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6988:3:7"
																			},
																			"nativeSrc": "6988:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6988:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6973:11:7",
																				"nodeType": "YulTypedName",
																				"src": "6973:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7189:27:7",
																			"nodeType": "YulBlock",
																			"src": "7189:27:7",
																			"statements": [
																				{
																					"nativeSrc": "7191:23:7",
																					"nodeType": "YulAssignment",
																					"src": "7191:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7206:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "7206:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7191:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "7191:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7173:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "7173:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7185:2:7",
																					"nodeType": "YulLiteral",
																					"src": "7185:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7170:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "7170:2:7"
																			},
																			"nativeSrc": "7170:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7170:18:7"
																		},
																		"nativeSrc": "7167:49:7",
																		"nodeType": "YulIf",
																		"src": "7167:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7258:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "7258:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7275:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "7275:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7303:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "7303:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7285:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "7285:17:7"
																							},
																							"nativeSrc": "7285:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "7285:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7271:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7271:3:7"
																					},
																					"nativeSrc": "7271:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7271:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7229:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "7229:28:7"
																			},
																			"nativeSrc": "7229:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7229:80:7"
																		},
																		"nativeSrc": "7229:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7229:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6879:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6879:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6884:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6884:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6876:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6876:2:7"
																},
																"nativeSrc": "6876:11:7",
																"nodeType": "YulFunctionCall",
																"src": "6876:11:7"
															},
															"nativeSrc": "6873:446:7",
															"nodeType": "YulIf",
															"src": "6873:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6783:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6838:5:7",
														"nodeType": "YulTypedName",
														"src": "6838:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6845:3:7",
														"nodeType": "YulTypedName",
														"src": "6845:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6850:10:7",
														"nodeType": "YulTypedName",
														"src": "6850:10:7",
														"type": ""
													}
												],
												"src": "6783:543:7"
											},
											{
												"body": {
													"nativeSrc": "7395:54:7",
													"nodeType": "YulBlock",
													"src": "7395:54:7",
													"statements": [
														{
															"nativeSrc": "7405:37:7",
															"nodeType": "YulAssignment",
															"src": "7405:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7430:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7430:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7436:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7436:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7426:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7426:3:7"
																},
																"nativeSrc": "7426:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7426:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7405:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "7405:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7332:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7370:4:7",
														"nodeType": "YulTypedName",
														"src": "7370:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7376:5:7",
														"nodeType": "YulTypedName",
														"src": "7376:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7386:8:7",
														"nodeType": "YulTypedName",
														"src": "7386:8:7",
														"type": ""
													}
												],
												"src": "7332:117:7"
											},
											{
												"body": {
													"nativeSrc": "7506:118:7",
													"nodeType": "YulBlock",
													"src": "7506:118:7",
													"statements": [
														{
															"nativeSrc": "7516:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7516:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7565:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7565:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7568:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7568:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7561:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7561:3:7"
																				},
																				"nativeSrc": "7561:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7561:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7580:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7580:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7576:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7576:3:7"
																				},
																				"nativeSrc": "7576:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7576:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7532:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "7532:28:7"
																		},
																		"nativeSrc": "7532:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7532:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7528:3:7"
																},
																"nativeSrc": "7528:56:7",
																"nodeType": "YulFunctionCall",
																"src": "7528:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7520:4:7",
																	"nodeType": "YulTypedName",
																	"src": "7520:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7593:25:7",
															"nodeType": "YulAssignment",
															"src": "7593:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7607:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7607:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7613:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7613:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7603:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7603:3:7"
																},
																"nativeSrc": "7603:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7603:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7593:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7593:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7455:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7483:4:7",
														"nodeType": "YulTypedName",
														"src": "7483:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7489:5:7",
														"nodeType": "YulTypedName",
														"src": "7489:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7499:6:7",
														"nodeType": "YulTypedName",
														"src": "7499:6:7",
														"type": ""
													}
												],
												"src": "7455:169:7"
											},
											{
												"body": {
													"nativeSrc": "7710:214:7",
													"nodeType": "YulBlock",
													"src": "7710:214:7",
													"statements": [
														{
															"nativeSrc": "7843:37:7",
															"nodeType": "YulAssignment",
															"src": "7843:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7870:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7870:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7876:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7851:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "7851:18:7"
																},
																"nativeSrc": "7851:29:7",
																"nodeType": "YulFunctionCall",
																"src": "7851:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7843:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7843:4:7"
																}
															]
														},
														{
															"nativeSrc": "7889:29:7",
															"nodeType": "YulAssignment",
															"src": "7889:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7900:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7900:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7910:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7910:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7913:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7913:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7906:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7906:3:7"
																		},
																		"nativeSrc": "7906:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7906:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7897:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7897:2:7"
																},
																"nativeSrc": "7897:21:7",
																"nodeType": "YulFunctionCall",
																"src": "7897:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7889:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7889:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7629:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7691:4:7",
														"nodeType": "YulTypedName",
														"src": "7691:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7697:3:7",
														"nodeType": "YulTypedName",
														"src": "7697:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7705:4:7",
														"nodeType": "YulTypedName",
														"src": "7705:4:7",
														"type": ""
													}
												],
												"src": "7629:295:7"
											},
											{
												"body": {
													"nativeSrc": "8021:1303:7",
													"nodeType": "YulBlock",
													"src": "8021:1303:7",
													"statements": [
														{
															"nativeSrc": "8032:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8032:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8079:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8079:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8046:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "8046:32:7"
																},
																"nativeSrc": "8046:37:7",
																"nodeType": "YulFunctionCall",
																"src": "8046:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8036:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8036:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8168:22:7",
																"nodeType": "YulBlock",
																"src": "8168:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8170:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8170:16:7"
																			},
																			"nativeSrc": "8170:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8170:18:7"
																		},
																		"nativeSrc": "8170:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8170:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8140:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8140:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8148:18:7",
																		"nodeType": "YulLiteral",
																		"src": "8148:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8137:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8137:2:7"
																},
																"nativeSrc": "8137:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8137:30:7"
															},
															"nativeSrc": "8134:56:7",
															"nodeType": "YulIf",
															"src": "8134:56:7"
														},
														{
															"nativeSrc": "8200:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8200:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8246:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8246:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8240:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8240:5:7"
																		},
																		"nativeSrc": "8240:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8240:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8214:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "8214:25:7"
																},
																"nativeSrc": "8214:38:7",
																"nodeType": "YulFunctionCall",
																"src": "8214:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8204:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8204:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8345:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8345:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8351:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8351:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8359:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8359:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8299:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "8299:45:7"
																},
																"nativeSrc": "8299:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8299:67:7"
															},
															"nativeSrc": "8299:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "8299:67:7"
														},
														{
															"nativeSrc": "8376:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8376:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "8393:1:7",
																"nodeType": "YulLiteral",
																"src": "8393:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8380:9:7",
																	"nodeType": "YulTypedName",
																	"src": "8380:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8404:17:7",
															"nodeType": "YulAssignment",
															"src": "8404:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "8417:4:7",
																"nodeType": "YulLiteral",
																"src": "8417:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8404:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "8404:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8468:611:7",
																		"nodeType": "YulBlock",
																		"src": "8468:611:7",
																		"statements": [
																			{
																				"nativeSrc": "8482:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8482:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8501:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "8501:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8513:4:7",
																									"nodeType": "YulLiteral",
																									"src": "8513:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8509:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "8509:3:7"
																							},
																							"nativeSrc": "8509:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8509:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8497:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8497:3:7"
																					},
																					"nativeSrc": "8497:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8497:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8486:7:7",
																						"nodeType": "YulTypedName",
																						"src": "8486:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8533:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8533:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8579:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8579:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8547:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "8547:31:7"
																					},
																					"nativeSrc": "8547:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8547:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8537:6:7",
																						"nodeType": "YulTypedName",
																						"src": "8537:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8597:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8597:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8606:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8606:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8601:1:7",
																						"nodeType": "YulTypedName",
																						"src": "8601:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8665:163:7",
																					"nodeType": "YulBlock",
																					"src": "8665:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8690:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8690:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8708:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "8708:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8713:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "8713:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8704:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "8704:3:7"
																												},
																												"nativeSrc": "8704:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "8704:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8698:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "8698:5:7"
																										},
																										"nativeSrc": "8698:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8698:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8683:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8683:6:7"
																								},
																								"nativeSrc": "8683:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8683:42:7"
																							},
																							"nativeSrc": "8683:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8683:42:7"
																						},
																						{
																							"nativeSrc": "8742:24:7",
																							"nodeType": "YulAssignment",
																							"src": "8742:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8756:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8756:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8764:1:7",
																										"nodeType": "YulLiteral",
																										"src": "8764:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8752:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8752:3:7"
																								},
																								"nativeSrc": "8752:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8752:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8742:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8742:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8783:31:7",
																							"nodeType": "YulAssignment",
																							"src": "8783:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8800:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "8800:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8811:2:7",
																										"nodeType": "YulLiteral",
																										"src": "8811:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8796:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8796:3:7"
																								},
																								"nativeSrc": "8796:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8796:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8783:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "8783:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8631:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "8631:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8634:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "8634:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8628:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8628:2:7"
																					},
																					"nativeSrc": "8628:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8628:14:7"
																				},
																				"nativeSrc": "8620:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8643:21:7",
																					"nodeType": "YulBlock",
																					"src": "8643:21:7",
																					"statements": [
																						{
																							"nativeSrc": "8645:17:7",
																							"nodeType": "YulAssignment",
																							"src": "8645:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8654:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "8654:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8657:4:7",
																										"nodeType": "YulLiteral",
																										"src": "8657:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8650:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8650:3:7"
																								},
																								"nativeSrc": "8650:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8650:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8645:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "8645:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8624:3:7",
																					"nodeType": "YulBlock",
																					"src": "8624:3:7",
																					"statements": []
																				},
																				"src": "8620:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "8864:156:7",
																					"nodeType": "YulBlock",
																					"src": "8864:156:7",
																					"statements": [
																						{
																							"nativeSrc": "8882:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8882:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8909:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "8909:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8914:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "8914:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8905:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "8905:3:7"
																										},
																										"nativeSrc": "8905:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8905:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8899:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "8899:5:7"
																								},
																								"nativeSrc": "8899:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8899:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8886:9:7",
																									"nodeType": "YulTypedName",
																									"src": "8886:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8949:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8949:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8976:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "8976:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8991:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "8991:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8999:4:7",
																														"nodeType": "YulLiteral",
																														"src": "8999:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8987:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "8987:3:7"
																												},
																												"nativeSrc": "8987:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "8987:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8957:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "8957:18:7"
																										},
																										"nativeSrc": "8957:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8957:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8942:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8942:6:7"
																								},
																								"nativeSrc": "8942:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8942:64:7"
																							},
																							"nativeSrc": "8942:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8942:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8847:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "8847:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8856:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "8856:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8844:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8844:2:7"
																					},
																					"nativeSrc": "8844:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8844:19:7"
																				},
																				"nativeSrc": "8841:179:7",
																				"nodeType": "YulIf",
																				"src": "8841:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9040:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9040:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9054:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "9054:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9062:1:7",
																											"nodeType": "YulLiteral",
																											"src": "9062:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9050:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "9050:3:7"
																									},
																									"nativeSrc": "9050:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "9050:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9066:1:7",
																									"nodeType": "YulLiteral",
																									"src": "9066:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9046:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "9046:3:7"
																							},
																							"nativeSrc": "9046:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9046:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9033:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9033:6:7"
																					},
																					"nativeSrc": "9033:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9033:36:7"
																				},
																				"nativeSrc": "9033:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9033:36:7"
																			}
																		]
																	},
																	"nativeSrc": "8461:618:7",
																	"nodeType": "YulCase",
																	"src": "8461:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8466:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8466:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9096:222:7",
																		"nodeType": "YulBlock",
																		"src": "9096:222:7",
																		"statements": [
																			{
																				"nativeSrc": "9110:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9110:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9123:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9123:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9114:5:7",
																						"nodeType": "YulTypedName",
																						"src": "9114:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9147:67:7",
																					"nodeType": "YulBlock",
																					"src": "9147:67:7",
																					"statements": [
																						{
																							"nativeSrc": "9165:35:7",
																							"nodeType": "YulAssignment",
																							"src": "9165:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9184:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "9184:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9189:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "9189:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9180:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "9180:3:7"
																										},
																										"nativeSrc": "9180:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "9180:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9174:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9174:5:7"
																								},
																								"nativeSrc": "9174:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9174:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9165:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9165:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9140:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9140:6:7"
																				},
																				"nativeSrc": "9137:77:7",
																				"nodeType": "YulIf",
																				"src": "9137:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9234:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9234:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9293:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9293:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9300:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9300:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9240:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "9240:52:7"
																							},
																							"nativeSrc": "9240:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9240:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9227:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9227:6:7"
																					},
																					"nativeSrc": "9227:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9227:81:7"
																				},
																				"nativeSrc": "9227:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9227:81:7"
																			}
																		]
																	},
																	"nativeSrc": "9088:230:7",
																	"nodeType": "YulCase",
																	"src": "9088:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8441:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8441:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8449:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8449:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8438:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8438:2:7"
																},
																"nativeSrc": "8438:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8438:14:7"
															},
															"nativeSrc": "8431:887:7",
															"nodeType": "YulSwitch",
															"src": "8431:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7929:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8010:4:7",
														"nodeType": "YulTypedName",
														"src": "8010:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8016:3:7",
														"nodeType": "YulTypedName",
														"src": "8016:3:7",
														"type": ""
													}
												],
												"src": "7929:1395:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ERC20_$821(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ERC20_$821(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC20_$821(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ERC20_$821_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ERC20_$821(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_contract$_ERC20_$821t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC20_$821_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f5ffd5b5060405161222838038061222883398181016040528101906100319190610249565b8181816003908161004291906104e1565b50806004908161005291906104e1565b5050508273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505050506105b0565b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100cb826100a2565b9050919050565b5f6100dc826100c1565b9050919050565b6100ec816100d2565b81146100f6575f5ffd5b50565b5f81519050610107816100e3565b92915050565b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61015b82610115565b810181811067ffffffffffffffff8211171561017a57610179610125565b5b80604052505050565b5f61018c610091565b90506101988282610152565b919050565b5f67ffffffffffffffff8211156101b7576101b6610125565b5b6101c082610115565b9050602081019050919050565b8281835e5f83830152505050565b5f6101ed6101e88461019d565b610183565b90508281526020810184848401111561020957610208610111565b5b6102148482856101cd565b509392505050565b5f82601f8301126102305761022f61010d565b5b81516102408482602086016101db565b91505092915050565b5f5f5f606084860312156102605761025f61009a565b5b5f61026d868287016100f9565b935050602084015167ffffffffffffffff81111561028e5761028d61009e565b5b61029a8682870161021c565b925050604084015167ffffffffffffffff8111156102bb576102ba61009e565b5b6102c78682870161021c565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061031f57607f821691505b602082108103610332576103316102db565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026103947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610359565b61039e8683610359565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6103e26103dd6103d8846103b6565b6103bf565b6103b6565b9050919050565b5f819050919050565b6103fb836103c8565b61040f610407826103e9565b848454610365565b825550505050565b5f5f905090565b610426610417565b6104318184846103f2565b505050565b5b81811015610454576104495f8261041e565b600181019050610437565b5050565b601f8211156104995761046a81610338565b6104738461034a565b81016020851015610482578190505b61049661048e8561034a565b830182610436565b50505b505050565b5f82821c905092915050565b5f6104b95f198460080261049e565b1980831691505092915050565b5f6104d183836104aa565b9150826002028217905092915050565b6104ea826102d1565b67ffffffffffffffff81111561050357610502610125565b5b61050d8254610308565b610518828285610458565b5f60209050601f831160018114610549575f8415610537578287015190505b61054185826104c6565b8655506105a8565b601f19841661055786610338565b5f5b8281101561057e57848901518255600182019150602085019450602081019050610559565b8683101561059b5784890151610597601f8916826104aa565b8355505b6001600288020188555050505b505050505050565b608051611c3d6105eb5f395f81816105bc0152818161079c015281816108080152818161096e01528181610b9b0152610d110152611c3d5ff3fe608060405234801561000f575f5ffd5b5060043610610171575f3560e01c806370a08231116100dc578063ba08765211610095578063ce96cb771161006f578063ce96cb77146104f9578063d905777e14610529578063dd62ed3e14610559578063ef8b30f71461058957610171565b8063ba08765214610469578063c63d75b614610499578063c6e6f592146104c957610171565b806370a082311461035b57806394bf804d1461038b57806395d89b41146103bb578063a9059cbb146103d9578063b3d7f6b914610409578063b460af941461043957610171565b806323b872dd1161012e57806323b872dd1461025f578063313ce5671461028f57806338d52e0f146102ad578063402d267d146102cb5780634cdad506146102fb5780636e553f651461032b57610171565b806301e1d1141461017557806306fdde031461019357806307a2d13a146101b1578063095ea7b3146101e15780630a28a4771461021157806318160ddd14610241575b5f5ffd5b61017d6105b9565b60405161018a91906115f0565b60405180910390f35b61019b610657565b6040516101a89190611679565b60405180910390f35b6101cb60048036038101906101c691906116c7565b6106e7565b6040516101d891906115f0565b60405180910390f35b6101fb60048036038101906101f6919061174c565b610727565b60405161020891906117a4565b60405180910390f35b61022b600480360381019061022691906116c7565b610749565b60405161023891906115f0565b60405180910390f35b61024961075a565b60405161025691906115f0565b60405180910390f35b610279600480360381019061027491906117bd565b610763565b60405161028691906117a4565b60405180910390f35b610297610791565b6040516102a49190611828565b60405180910390f35b6102b5610799565b6040516102c29190611850565b60405180910390f35b6102e560048036038101906102e09190611869565b6107c0565b6040516102f291906115f0565b60405180910390f35b610315600480360381019061031091906116c7565b6107e9565b60405161032291906115f0565b60405180910390f35b61034560048036038101906103409190611894565b6107fa565b60405161035291906115f0565b60405180910390f35b61037560048036038101906103709190611869565b61091b565b60405161038291906115f0565b60405180910390f35b6103a560048036038101906103a09190611894565b610960565b6040516103b291906115f0565b60405180910390f35b6103c3610a81565b6040516103d09190611679565b60405180910390f35b6103f360048036038101906103ee919061174c565b610b11565b60405161040091906117a4565b60405180910390f35b610423600480360381019061041e91906116c7565b610b33565b60405161043091906115f0565b60405180910390f35b610453600480360381019061044e91906118d2565b610b44565b60405161046091906115f0565b60405180910390f35b610483600480360381019061047e91906118d2565b610cba565b60405161049091906115f0565b60405180910390f35b6104b360048036038101906104ae9190611869565b610e30565b6040516104c091906115f0565b60405180910390f35b6104e360048036038101906104de91906116c7565b610e59565b6040516104f091906115f0565b60405180910390f35b610513600480360381019061050e9190611869565b610e99565b60405161052091906115f0565b60405180910390f35b610543600480360381019061053e9190611869565b610eb2565b60405161055091906115f0565b60405180910390f35b610573600480360381019061056e9190611922565b610ec3565b60405161058091906115f0565b60405180910390f35b6105a3600480360381019061059e91906116c7565b610f45565b6040516105b091906115f0565b60405180910390f35b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106139190611850565b602060405180830381865afa15801561062e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106529190611974565b905090565b606060038054610666906119cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610692906119cc565b80156106dd5780601f106106b4576101008083540402835291602001916106dd565b820191905f5260205f20905b8154815290600101906020018083116106c057829003601f168201915b5050505050905090565b5f5f6106f161075a565b90505f811461071d57806107036105b9565b8461070e9190611a29565b6107189190611a97565b61071f565b825b915050919050565b5f5f610731610f56565b905061073e818585610f5d565b600191505092915050565b5f61075382610e59565b9050919050565b5f600254905090565b5f5f61076d610f56565b905061077a858285610f6f565b610785858585611002565b60019150509392505050565b5f6012905090565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050919050565b5f6107f3826106e7565b9050919050565b5f61080483610f45565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161086393929190611ac7565b6020604051808303815f875af115801561087f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108a39190611b26565b506108ae82826110f2565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7858460405161090d929190611b51565b60405180910390a392915050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f61096a83610b33565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016109c993929190611ac7565b6020604051808303815f875af11580156109e5573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a099190611b26565b50610a1482846110f2565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78386604051610a73929190611b51565b60405180910390a392915050565b606060048054610a90906119cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610abc906119cc565b8015610b075780601f10610ade57610100808354040283529160200191610b07565b820191905f5260205f20905b815481529060010190602001808311610aea57829003601f168201915b5050505050905090565b5f5f610b1b610f56565b9050610b28818585611002565b600191505092915050565b5f610b3d826106e7565b9050919050565b5f610b4e84610749565b90508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b8f57610b8e823383610f6f565b5b610b998282611171565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84866040518363ffffffff1660e01b8152600401610bf4929190611b78565b6020604051808303815f875af1158015610c10573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c349190611b26565b508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8785604051610cab929190611b51565b60405180910390a49392505050565b5f610cc4846107e9565b90508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d0557610d04823386610f6f565b5b610d0f8285611171565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b8152600401610d6a929190611b78565b6020604051808303815f875af1158015610d86573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610daa9190611b26565b508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8488604051610e21929190611b51565b60405180910390a49392505050565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050919050565b5f5f610e6361075a565b90505f8114610e8f57610e746105b9565b8184610e809190611a29565b610e8a9190611a97565b610e91565b825b915050919050565b5f610eab610ea68361091b565b6106e7565b9050919050565b5f610ebc8261091b565b9050919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f610f4f82610e59565b9050919050565b5f33905090565b610f6a83838360016111f0565b505050565b5f610f7a8484610ec3565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610ffc5781811015610fed578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610fe493929190611b9f565b60405180910390fd5b610ffb84848484035f6111f0565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611072575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016110699190611850565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110e2575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110d99190611850565b60405180910390fd5b6110ed8383836113bf565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611162575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016111599190611850565b60405180910390fd5b61116d5f83836113bf565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111e1575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016111d89190611850565b60405180910390fd5b6111ec825f836113bf565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611260575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016112579190611850565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112d0575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016112c79190611850565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156113b9578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113b091906115f0565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361140f578060025f8282546114039190611bd4565b925050819055506114dd565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611498578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161148f93929190611b9f565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611524578060025f828254039250508190555061156e565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115cb91906115f0565b60405180910390a3505050565b5f819050919050565b6115ea816115d8565b82525050565b5f6020820190506116035f8301846115e1565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61164b82611609565b6116558185611613565b9350611665818560208601611623565b61166e81611631565b840191505092915050565b5f6020820190508181035f8301526116918184611641565b905092915050565b5f5ffd5b6116a6816115d8565b81146116b0575f5ffd5b50565b5f813590506116c18161169d565b92915050565b5f602082840312156116dc576116db611699565b5b5f6116e9848285016116b3565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61171b826116f2565b9050919050565b61172b81611711565b8114611735575f5ffd5b50565b5f8135905061174681611722565b92915050565b5f5f6040838503121561176257611761611699565b5b5f61176f85828601611738565b9250506020611780858286016116b3565b9150509250929050565b5f8115159050919050565b61179e8161178a565b82525050565b5f6020820190506117b75f830184611795565b92915050565b5f5f5f606084860312156117d4576117d3611699565b5b5f6117e186828701611738565b93505060206117f286828701611738565b9250506040611803868287016116b3565b9150509250925092565b5f60ff82169050919050565b6118228161180d565b82525050565b5f60208201905061183b5f830184611819565b92915050565b61184a81611711565b82525050565b5f6020820190506118635f830184611841565b92915050565b5f6020828403121561187e5761187d611699565b5b5f61188b84828501611738565b91505092915050565b5f5f604083850312156118aa576118a9611699565b5b5f6118b7858286016116b3565b92505060206118c885828601611738565b9150509250929050565b5f5f5f606084860312156118e9576118e8611699565b5b5f6118f6868287016116b3565b935050602061190786828701611738565b925050604061191886828701611738565b9150509250925092565b5f5f6040838503121561193857611937611699565b5b5f61194585828601611738565b925050602061195685828601611738565b9150509250929050565b5f8151905061196e8161169d565b92915050565b5f6020828403121561198957611988611699565b5b5f61199684828501611960565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806119e357607f821691505b6020821081036119f6576119f561199f565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a33826115d8565b9150611a3e836115d8565b9250828202611a4c816115d8565b91508282048414831517611a6357611a626119fc565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611aa1826115d8565b9150611aac836115d8565b925082611abc57611abb611a6a565b5b828204905092915050565b5f606082019050611ada5f830186611841565b611ae76020830185611841565b611af460408301846115e1565b949350505050565b611b058161178a565b8114611b0f575f5ffd5b50565b5f81519050611b2081611afc565b92915050565b5f60208284031215611b3b57611b3a611699565b5b5f611b4884828501611b12565b91505092915050565b5f604082019050611b645f8301856115e1565b611b7160208301846115e1565b9392505050565b5f604082019050611b8b5f830185611841565b611b9860208301846115e1565b9392505050565b5f606082019050611bb25f830186611841565b611bbf60208301856115e1565b611bcc60408301846115e1565b949350505050565b5f611bde826115d8565b9150611be9836115d8565b9250828201905080821115611c0157611c006119fc565b5b9291505056fea2646970667358221220d90a7bf830422d1c8298f70788475340d164e43316cb89801d1a956b6b3a601a64736f6c634300081c0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2228 CODESIZE SUB DUP1 PUSH2 0x2228 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x249 JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x4E1 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x52 SWAP2 SWAP1 PUSH2 0x4E1 JUMP JUMPDEST POP POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH2 0x5B0 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCB DUP3 PUSH2 0xA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDC DUP3 PUSH2 0xC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEC DUP2 PUSH2 0xD2 JUMP JUMPDEST DUP2 EQ PUSH2 0xF6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x107 DUP2 PUSH2 0xE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x15B DUP3 PUSH2 0x115 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x17A JUMPI PUSH2 0x179 PUSH2 0x125 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18C PUSH2 0x91 JUMP JUMPDEST SWAP1 POP PUSH2 0x198 DUP3 DUP3 PUSH2 0x152 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B7 JUMPI PUSH2 0x1B6 PUSH2 0x125 JUMP JUMPDEST JUMPDEST PUSH2 0x1C0 DUP3 PUSH2 0x115 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1ED PUSH2 0x1E8 DUP5 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x183 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x209 JUMPI PUSH2 0x208 PUSH2 0x111 JUMP JUMPDEST JUMPDEST PUSH2 0x214 DUP5 DUP3 DUP6 PUSH2 0x1CD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x230 JUMPI PUSH2 0x22F PUSH2 0x10D JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x240 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x260 JUMPI PUSH2 0x25F PUSH2 0x9A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x26D DUP7 DUP3 DUP8 ADD PUSH2 0xF9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28E JUMPI PUSH2 0x28D PUSH2 0x9E JUMP JUMPDEST JUMPDEST PUSH2 0x29A DUP7 DUP3 DUP8 ADD PUSH2 0x21C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BB JUMPI PUSH2 0x2BA PUSH2 0x9E JUMP JUMPDEST JUMPDEST PUSH2 0x2C7 DUP7 DUP3 DUP8 ADD PUSH2 0x21C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x31F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x332 JUMPI PUSH2 0x331 PUSH2 0x2DB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x394 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x359 JUMP JUMPDEST PUSH2 0x39E DUP7 DUP4 PUSH2 0x359 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3E2 PUSH2 0x3DD PUSH2 0x3D8 DUP5 PUSH2 0x3B6 JUMP JUMPDEST PUSH2 0x3BF JUMP JUMPDEST PUSH2 0x3B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FB DUP4 PUSH2 0x3C8 JUMP JUMPDEST PUSH2 0x40F PUSH2 0x407 DUP3 PUSH2 0x3E9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x365 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x426 PUSH2 0x417 JUMP JUMPDEST PUSH2 0x431 DUP2 DUP5 DUP5 PUSH2 0x3F2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x454 JUMPI PUSH2 0x449 PUSH0 DUP3 PUSH2 0x41E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x437 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x499 JUMPI PUSH2 0x46A DUP2 PUSH2 0x338 JUMP JUMPDEST PUSH2 0x473 DUP5 PUSH2 0x34A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x482 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x496 PUSH2 0x48E DUP6 PUSH2 0x34A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x436 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4B9 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x49E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4D1 DUP4 DUP4 PUSH2 0x4AA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4EA DUP3 PUSH2 0x2D1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x503 JUMPI PUSH2 0x502 PUSH2 0x125 JUMP JUMPDEST JUMPDEST PUSH2 0x50D DUP3 SLOAD PUSH2 0x308 JUMP JUMPDEST PUSH2 0x518 DUP3 DUP3 DUP6 PUSH2 0x458 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x549 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x537 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x541 DUP6 DUP3 PUSH2 0x4C6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x557 DUP7 PUSH2 0x338 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x57E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x559 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x59B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x597 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4AA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1C3D PUSH2 0x5EB PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x5BC ADD MSTORE DUP2 DUP2 PUSH2 0x79C ADD MSTORE DUP2 DUP2 PUSH2 0x808 ADD MSTORE DUP2 DUP2 PUSH2 0x96E ADD MSTORE DUP2 DUP2 PUSH2 0xB9B ADD MSTORE PUSH2 0xD11 ADD MSTORE PUSH2 0x1C3D PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x171 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xBA087652 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xCE96CB77 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCE96CB77 EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0xD905777E EQ PUSH2 0x529 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0xEF8B30F7 EQ PUSH2 0x589 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0xBA087652 EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0xC63D75B6 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0xC6E6F592 EQ PUSH2 0x4C9 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x94BF804D EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xB3D7F6B9 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0xB460AF94 EQ PUSH2 0x439 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x402D267D EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x4CDAD506 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x6E553F65 EQ PUSH2 0x32B JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x1E1D114 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x7A2D13A EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xA28A477 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x241 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x17D PUSH2 0x5B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x749 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH2 0x75A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x17BD JUMP JUMPDEST PUSH2 0x763 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH2 0x791 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x960 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C3 PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x423 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41E SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x453 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44E SWAP2 SWAP1 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0xB44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x483 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x513 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50E SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x520 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x543 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x550 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x573 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x1922 JUMP JUMPDEST PUSH2 0xEC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x580 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59E SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x613 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x62E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x652 SWAP2 SWAP1 PUSH2 0x1974 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x666 SWAP1 PUSH2 0x19CC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x692 SWAP1 PUSH2 0x19CC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x6F1 PUSH2 0x75A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 EQ PUSH2 0x71D JUMPI DUP1 PUSH2 0x703 PUSH2 0x5B9 JUMP JUMPDEST DUP5 PUSH2 0x70E SWAP2 SWAP1 PUSH2 0x1A29 JUMP JUMPDEST PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST DUP3 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x731 PUSH2 0xF56 JUMP JUMPDEST SWAP1 POP PUSH2 0x73E DUP2 DUP6 DUP6 PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x753 DUP3 PUSH2 0xE59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x76D PUSH2 0xF56 JUMP JUMPDEST SWAP1 POP PUSH2 0x77A DUP6 DUP3 DUP6 PUSH2 0xF6F JUMP JUMPDEST PUSH2 0x785 DUP6 DUP6 DUP6 PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7F3 DUP3 PUSH2 0x6E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x804 DUP4 PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x863 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x87F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST POP PUSH2 0x8AE DUP3 DUP3 PUSH2 0x10F2 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP6 DUP5 PUSH1 0x40 MLOAD PUSH2 0x90D SWAP3 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x96A DUP4 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9E5 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA09 SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST POP PUSH2 0xA14 DUP3 DUP5 PUSH2 0x10F2 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP4 DUP7 PUSH1 0x40 MLOAD PUSH2 0xA73 SWAP3 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA90 SWAP1 PUSH2 0x19CC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xABC SWAP1 PUSH2 0x19CC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB07 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xADE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB07 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAEA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xB1B PUSH2 0xF56 JUMP JUMPDEST SWAP1 POP PUSH2 0xB28 DUP2 DUP6 DUP6 PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB3D DUP3 PUSH2 0x6E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB4E DUP5 PUSH2 0x749 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB8F JUMPI PUSH2 0xB8E DUP3 CALLER DUP4 PUSH2 0xF6F JUMP JUMPDEST JUMPDEST PUSH2 0xB99 DUP3 DUP3 PUSH2 0x1171 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B78 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC10 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC34 SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFBDE797D201C681B91056529119E0B02407C7BB96A4A2C75C01FC9667232C8DB DUP8 DUP6 PUSH1 0x40 MLOAD PUSH2 0xCAB SWAP3 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCC4 DUP5 PUSH2 0x7E9 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD05 JUMPI PUSH2 0xD04 DUP3 CALLER DUP7 PUSH2 0xF6F JUMP JUMPDEST JUMPDEST PUSH2 0xD0F DUP3 DUP6 PUSH2 0x1171 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6A SWAP3 SWAP2 SWAP1 PUSH2 0x1B78 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD86 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDAA SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFBDE797D201C681B91056529119E0B02407C7BB96A4A2C75C01FC9667232C8DB DUP5 DUP9 PUSH1 0x40 MLOAD PUSH2 0xE21 SWAP3 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xE63 PUSH2 0x75A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 EQ PUSH2 0xE8F JUMPI PUSH2 0xE74 PUSH2 0x5B9 JUMP JUMPDEST DUP2 DUP5 PUSH2 0xE80 SWAP2 SWAP1 PUSH2 0x1A29 JUMP JUMPDEST PUSH2 0xE8A SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0xE91 JUMP JUMPDEST DUP3 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEAB PUSH2 0xEA6 DUP4 PUSH2 0x91B JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEBC DUP3 PUSH2 0x91B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF4F DUP3 PUSH2 0xE59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF6A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11F0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF7A DUP5 DUP5 PUSH2 0xEC3 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xFFC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xFED JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFFB DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1072 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1069 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10E2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D9 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10ED DUP4 DUP4 DUP4 PUSH2 0x13BF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1162 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1159 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x116D PUSH0 DUP4 DUP4 PUSH2 0x13BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11E1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D8 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11EC DUP3 PUSH0 DUP4 PUSH2 0x13BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1260 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1257 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12D0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C7 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x13B9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x13B0 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x140F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1403 SWAP2 SWAP1 PUSH2 0x1BD4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x14DD JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1498 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1524 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x156E JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x15CB SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15EA DUP2 PUSH2 0x15D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1603 PUSH0 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x164B DUP3 PUSH2 0x1609 JUMP JUMPDEST PUSH2 0x1655 DUP2 DUP6 PUSH2 0x1613 JUMP JUMPDEST SWAP4 POP PUSH2 0x1665 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1623 JUMP JUMPDEST PUSH2 0x166E DUP2 PUSH2 0x1631 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1691 DUP2 DUP5 PUSH2 0x1641 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x16A6 DUP2 PUSH2 0x15D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x16B0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16C1 DUP2 PUSH2 0x169D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16DC JUMPI PUSH2 0x16DB PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16E9 DUP5 DUP3 DUP6 ADD PUSH2 0x16B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x171B DUP3 PUSH2 0x16F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x172B DUP2 PUSH2 0x1711 JUMP JUMPDEST DUP2 EQ PUSH2 0x1735 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1746 DUP2 PUSH2 0x1722 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1762 JUMPI PUSH2 0x1761 PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x176F DUP6 DUP3 DUP7 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1780 DUP6 DUP3 DUP7 ADD PUSH2 0x16B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x179E DUP2 PUSH2 0x178A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17B7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1795 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17D4 JUMPI PUSH2 0x17D3 PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17E1 DUP7 DUP3 DUP8 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x17F2 DUP7 DUP3 DUP8 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1803 DUP7 DUP3 DUP8 ADD PUSH2 0x16B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1822 DUP2 PUSH2 0x180D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x183B PUSH0 DUP4 ADD DUP5 PUSH2 0x1819 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x184A DUP2 PUSH2 0x1711 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1863 PUSH0 DUP4 ADD DUP5 PUSH2 0x1841 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x187E JUMPI PUSH2 0x187D PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x188B DUP5 DUP3 DUP6 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18AA JUMPI PUSH2 0x18A9 PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18B7 DUP6 DUP3 DUP7 ADD PUSH2 0x16B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18C8 DUP6 DUP3 DUP7 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18E9 JUMPI PUSH2 0x18E8 PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18F6 DUP7 DUP3 DUP8 ADD PUSH2 0x16B3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1907 DUP7 DUP3 DUP8 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1918 DUP7 DUP3 DUP8 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1938 JUMPI PUSH2 0x1937 PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1945 DUP6 DUP3 DUP7 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1956 DUP6 DUP3 DUP7 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x196E DUP2 PUSH2 0x169D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1989 JUMPI PUSH2 0x1988 PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1996 DUP5 DUP3 DUP6 ADD PUSH2 0x1960 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x19E3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x19F6 JUMPI PUSH2 0x19F5 PUSH2 0x199F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A33 DUP3 PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A3E DUP4 PUSH2 0x15D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1A4C DUP2 PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1A63 JUMPI PUSH2 0x1A62 PUSH2 0x19FC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AA1 DUP3 PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AAC DUP4 PUSH2 0x15D8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1ABC JUMPI PUSH2 0x1ABB PUSH2 0x1A6A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1ADA PUSH0 DUP4 ADD DUP7 PUSH2 0x1841 JUMP JUMPDEST PUSH2 0x1AE7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1841 JUMP JUMPDEST PUSH2 0x1AF4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1B05 DUP2 PUSH2 0x178A JUMP JUMPDEST DUP2 EQ PUSH2 0x1B0F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B20 DUP2 PUSH2 0x1AFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B3B JUMPI PUSH2 0x1B3A PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B48 DUP5 DUP3 DUP6 ADD PUSH2 0x1B12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B64 PUSH0 DUP4 ADD DUP6 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x1B71 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B8B PUSH0 DUP4 ADD DUP6 PUSH2 0x1841 JUMP JUMPDEST PUSH2 0x1B98 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1BB2 PUSH0 DUP4 ADD DUP7 PUSH2 0x1841 JUMP JUMPDEST PUSH2 0x1BBF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x1BCC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BDE DUP3 PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE9 DUP4 PUSH2 0x15D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C01 JUMPI PUSH2 0x1C00 PUSH2 0x19FC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 EXP PUSH28 0xF830422D1C8298F70788475340D164E43316CB89801D1A956B6B3A60 BYTE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "219:5601:6:-:0;;;332:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;438:5;445:7;1656:5:2;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;473:6:6::1;464:15;;;;;;;;::::0;::::1;332:154:::0;;;219:5601;;7:75:7;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:109::-;618:7;647:24;665:5;647:24;:::i;:::-;636:35;;568:109;;;:::o;683:148::-;769:37;800:5;769:37;:::i;:::-;762:5;759:48;749:76;;821:1;818;811:12;749:76;683:148;:::o;837:169::-;907:5;938:6;932:13;923:22;;954:46;994:5;954:46;:::i;:::-;837:169;;;;:::o;1012:117::-;1121:1;1118;1111:12;1135:117;1244:1;1241;1234:12;1258:102;1299:6;1350:2;1346:7;1341:2;1334:5;1330:14;1326:28;1316:38;;1258:102;;;:::o;1366:180::-;1414:77;1411:1;1404:88;1511:4;1508:1;1501:15;1535:4;1532:1;1525:15;1552:281;1635:27;1657:4;1635:27;:::i;:::-;1627:6;1623:40;1765:6;1753:10;1750:22;1729:18;1717:10;1714:34;1711:62;1708:88;;;1776:18;;:::i;:::-;1708:88;1816:10;1812:2;1805:22;1595:238;1552:281;;:::o;1839:129::-;1873:6;1900:20;;:::i;:::-;1890:30;;1929:33;1957:4;1949:6;1929:33;:::i;:::-;1839:129;;;:::o;1974:308::-;2036:4;2126:18;2118:6;2115:30;2112:56;;;2148:18;;:::i;:::-;2112:56;2186:29;2208:6;2186:29;:::i;:::-;2178:37;;2270:4;2264;2260:15;2252:23;;1974:308;;;:::o;2288:139::-;2377:6;2372:3;2367;2361:23;2418:1;2409:6;2404:3;2400:16;2393:27;2288:139;;;:::o;2433:434::-;2522:5;2547:66;2563:49;2605:6;2563:49;:::i;:::-;2547:66;:::i;:::-;2538:75;;2636:6;2629:5;2622:21;2674:4;2667:5;2663:16;2712:3;2703:6;2698:3;2694:16;2691:25;2688:112;;;2719:79;;:::i;:::-;2688:112;2809:52;2854:6;2849:3;2844;2809:52;:::i;:::-;2528:339;2433:434;;;;;:::o;2887:355::-;2954:5;3003:3;2996:4;2988:6;2984:17;2980:27;2970:122;;3011:79;;:::i;:::-;2970:122;3121:6;3115:13;3146:90;3232:3;3224:6;3217:4;3209:6;3205:17;3146:90;:::i;:::-;3137:99;;2960:282;2887:355;;;;:::o;3248:1035::-;3369:6;3377;3385;3434:2;3422:9;3413:7;3409:23;3405:32;3402:119;;;3440:79;;:::i;:::-;3402:119;3560:1;3585:77;3654:7;3645:6;3634:9;3630:22;3585:77;:::i;:::-;3575:87;;3531:141;3732:2;3721:9;3717:18;3711:25;3763:18;3755:6;3752:30;3749:117;;;3785:79;;:::i;:::-;3749:117;3890:74;3956:7;3947:6;3936:9;3932:22;3890:74;:::i;:::-;3880:84;;3682:292;4034:2;4023:9;4019:18;4013:25;4065:18;4057:6;4054:30;4051:117;;;4087:79;;:::i;:::-;4051:117;4192:74;4258:7;4249:6;4238:9;4234:22;4192:74;:::i;:::-;4182:84;;3984:292;3248:1035;;;;;:::o;4289:99::-;4341:6;4375:5;4369:12;4359:22;;4289:99;;;:::o;4394:180::-;4442:77;4439:1;4432:88;4539:4;4536:1;4529:15;4563:4;4560:1;4553:15;4580:320;4624:6;4661:1;4655:4;4651:12;4641:22;;4708:1;4702:4;4698:12;4729:18;4719:81;;4785:4;4777:6;4773:17;4763:27;;4719:81;4847:2;4839:6;4836:14;4816:18;4813:38;4810:84;;4866:18;;:::i;:::-;4810:84;4631:269;4580:320;;;:::o;4906:141::-;4955:4;4978:3;4970:11;;5001:3;4998:1;4991:14;5035:4;5032:1;5022:18;5014:26;;4906:141;;;:::o;5053:93::-;5090:6;5137:2;5132;5125:5;5121:14;5117:23;5107:33;;5053:93;;;:::o;5152:107::-;5196:8;5246:5;5240:4;5236:16;5215:37;;5152:107;;;;:::o;5265:393::-;5334:6;5384:1;5372:10;5368:18;5407:97;5437:66;5426:9;5407:97;:::i;:::-;5525:39;5555:8;5544:9;5525:39;:::i;:::-;5513:51;;5597:4;5593:9;5586:5;5582:21;5573:30;;5646:4;5636:8;5632:19;5625:5;5622:30;5612:40;;5341:317;;5265:393;;;;;:::o;5664:77::-;5701:7;5730:5;5719:16;;5664:77;;;:::o;5747:60::-;5775:3;5796:5;5789:12;;5747:60;;;:::o;5813:142::-;5863:9;5896:53;5914:34;5923:24;5941:5;5923:24;:::i;:::-;5914:34;:::i;:::-;5896:53;:::i;:::-;5883:66;;5813:142;;;:::o;5961:75::-;6004:3;6025:5;6018:12;;5961:75;;;:::o;6042:269::-;6152:39;6183:7;6152:39;:::i;:::-;6213:91;6262:41;6286:16;6262:41;:::i;:::-;6254:6;6247:4;6241:11;6213:91;:::i;:::-;6207:4;6200:105;6118:193;6042:269;;;:::o;6317:73::-;6362:3;6383:1;6376:8;;6317:73;:::o;6396:189::-;6473:32;;:::i;:::-;6514:65;6572:6;6564;6558:4;6514:65;:::i;:::-;6449:136;6396:189;;:::o;6591:186::-;6651:120;6668:3;6661:5;6658:14;6651:120;;;6722:39;6759:1;6752:5;6722:39;:::i;:::-;6695:1;6688:5;6684:13;6675:22;;6651:120;;;6591:186;;:::o;6783:543::-;6884:2;6879:3;6876:11;6873:446;;;6918:38;6950:5;6918:38;:::i;:::-;7002:29;7020:10;7002:29;:::i;:::-;6992:8;6988:44;7185:2;7173:10;7170:18;7167:49;;;7206:8;7191:23;;7167:49;7229:80;7285:22;7303:3;7285:22;:::i;:::-;7275:8;7271:37;7258:11;7229:80;:::i;:::-;6888:431;;6873:446;6783:543;;;:::o;7332:117::-;7386:8;7436:5;7430:4;7426:16;7405:37;;7332:117;;;;:::o;7455:169::-;7499:6;7532:51;7580:1;7576:6;7568:5;7565:1;7561:13;7532:51;:::i;:::-;7528:56;7613:4;7607;7603:15;7593:25;;7506:118;7455:169;;;;:::o;7629:295::-;7705:4;7851:29;7876:3;7870:4;7851:29;:::i;:::-;7843:37;;7913:3;7910:1;7906:11;7900:4;7897:21;7889:29;;7629:295;;;;:::o;7929:1395::-;8046:37;8079:3;8046:37;:::i;:::-;8148:18;8140:6;8137:30;8134:56;;;8170:18;;:::i;:::-;8134:56;8214:38;8246:4;8240:11;8214:38;:::i;:::-;8299:67;8359:6;8351;8345:4;8299:67;:::i;:::-;8393:1;8417:4;8404:17;;8449:2;8441:6;8438:14;8466:1;8461:618;;;;9123:1;9140:6;9137:77;;;9189:9;9184:3;9180:19;9174:26;9165:35;;9137:77;9240:67;9300:6;9293:5;9240:67;:::i;:::-;9234:4;9227:81;9096:222;8431:887;;8461:618;8513:4;8509:9;8501:6;8497:22;8547:37;8579:4;8547:37;:::i;:::-;8606:1;8620:208;8634:7;8631:1;8628:14;8620:208;;;8713:9;8708:3;8704:19;8698:26;8690:6;8683:42;8764:1;8756:6;8752:14;8742:24;;8811:2;8800:9;8796:18;8783:31;;8657:4;8654:1;8650:12;8645:17;;8620:208;;;8856:6;8847:7;8844:19;8841:179;;;8914:9;8909:3;8905:19;8899:26;8957:48;8999:4;8991:6;8987:17;8976:9;8957:48;:::i;:::-;8949:6;8942:64;8864:156;8841:179;9066:1;9062;9054:6;9050:14;9046:22;9040:4;9033:36;8468:611;;;8431:887;;8021:1303;;;7929:1395;;:::o;219:5601:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_712": {
									"entryPoint": 3933,
									"id": 712,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_772": {
									"entryPoint": 4592,
									"id": 772,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_694": {
									"entryPoint": 4465,
									"id": 694,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_661": {
									"entryPoint": 4338,
									"id": 661,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_937": {
									"entryPoint": 3926,
									"id": 937,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_820": {
									"entryPoint": 3951,
									"id": 820,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_551": {
									"entryPoint": 4098,
									"id": 551,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_628": {
									"entryPoint": 5055,
									"id": 628,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_448": {
									"entryPoint": 3779,
									"id": 448,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_472": {
									"entryPoint": 1831,
									"id": 472,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@asset_1000": {
									"entryPoint": 1945,
									"id": 1000,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@balanceOf_407": {
									"entryPoint": 2331,
									"id": 407,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@convertToAssets_1252": {
									"entryPoint": 1767,
									"id": 1252,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@convertToShares_1226": {
									"entryPoint": 3673,
									"id": 1226,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_385": {
									"entryPoint": 1937,
									"id": 385,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@deposit_1041": {
									"entryPoint": 2042,
									"id": 1041,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@maxDeposit_1314": {
									"entryPoint": 1984,
									"id": 1314,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@maxMint_1328": {
									"entryPoint": 3632,
									"id": 1328,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@maxRedeem_1354": {
									"entryPoint": 3762,
									"id": 1354,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@maxWithdraw_1342": {
									"entryPoint": 3737,
									"id": 1342,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_1082": {
									"entryPoint": 2400,
									"id": 1082,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_367": {
									"entryPoint": 1623,
									"id": 367,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@previewDeposit_1264": {
									"entryPoint": 3909,
									"id": 1264,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@previewMint_1276": {
									"entryPoint": 2867,
									"id": 1276,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@previewRedeem_1300": {
									"entryPoint": 2025,
									"id": 1300,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@previewWithdraw_1288": {
									"entryPoint": 1865,
									"id": 1288,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@redeem_1186": {
									"entryPoint": 3258,
									"id": 1186,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_376": {
									"entryPoint": 2689,
									"id": 376,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalAssets_1200": {
									"entryPoint": 1465,
									"id": 1200,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_394": {
									"entryPoint": 1882,
									"id": 394,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_504": {
									"entryPoint": 1891,
									"id": 504,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_431": {
									"entryPoint": 2833,
									"id": 431,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withdraw_1134": {
									"entryPoint": 2884,
									"id": 1134,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 6292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_addresst_address": {
									"entryPoint": 6354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6855,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7032,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7071,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6993,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5667,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6652,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6762,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6559,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5785,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11732:7",
										"nodeType": "YulBlock",
										"src": "0:11732:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:7",
													"nodeType": "YulBlock",
													"src": "52:32:7",
													"statements": [
														{
															"nativeSrc": "62:16:7",
															"nodeType": "YulAssignment",
															"src": "62:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:7",
																"nodeType": "YulIdentifier",
																"src": "73:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:7",
														"nodeType": "YulTypedName",
														"src": "34:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:7",
														"nodeType": "YulTypedName",
														"src": "44:7:7",
														"type": ""
													}
												],
												"src": "7:77:7"
											},
											{
												"body": {
													"nativeSrc": "155:53:7",
													"nodeType": "YulBlock",
													"src": "155:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:7"
																		},
																		"nativeSrc": "177:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:7"
																},
																"nativeSrc": "165:37:7",
																"nodeType": "YulFunctionCall",
																"src": "165:37:7"
															},
															"nativeSrc": "165:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:7",
														"nodeType": "YulTypedName",
														"src": "143:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:7",
														"nodeType": "YulTypedName",
														"src": "150:3:7",
														"type": ""
													}
												],
												"src": "90:118:7"
											},
											{
												"body": {
													"nativeSrc": "312:124:7",
													"nodeType": "YulBlock",
													"src": "312:124:7",
													"statements": [
														{
															"nativeSrc": "322:26:7",
															"nodeType": "YulAssignment",
															"src": "322:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:7",
																		"nodeType": "YulLiteral",
																		"src": "345:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:7"
																},
																"nativeSrc": "330:18:7",
																"nodeType": "YulFunctionCall",
																"src": "330:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:7",
																				"nodeType": "YulLiteral",
																				"src": "426:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:7"
																		},
																		"nativeSrc": "411:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:7"
																},
																"nativeSrc": "358:71:7",
																"nodeType": "YulFunctionCall",
																"src": "358:71:7"
															},
															"nativeSrc": "358:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:7",
														"nodeType": "YulTypedName",
														"src": "284:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:7",
														"nodeType": "YulTypedName",
														"src": "296:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:7",
														"nodeType": "YulTypedName",
														"src": "307:4:7",
														"type": ""
													}
												],
												"src": "214:222:7"
											},
											{
												"body": {
													"nativeSrc": "501:40:7",
													"nodeType": "YulBlock",
													"src": "501:40:7",
													"statements": [
														{
															"nativeSrc": "512:22:7",
															"nodeType": "YulAssignment",
															"src": "512:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "528:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "528:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "522:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:7"
																},
																"nativeSrc": "522:12:7",
																"nodeType": "YulFunctionCall",
																"src": "522:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "512:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "512:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "442:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "484:5:7",
														"nodeType": "YulTypedName",
														"src": "484:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "494:6:7",
														"nodeType": "YulTypedName",
														"src": "494:6:7",
														"type": ""
													}
												],
												"src": "442:99:7"
											},
											{
												"body": {
													"nativeSrc": "643:73:7",
													"nodeType": "YulBlock",
													"src": "643:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "660:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "660:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "665:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "665:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "653:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:7"
																},
																"nativeSrc": "653:19:7",
																"nodeType": "YulFunctionCall",
																"src": "653:19:7"
															},
															"nativeSrc": "653:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "653:19:7"
														},
														{
															"nativeSrc": "681:29:7",
															"nodeType": "YulAssignment",
															"src": "681:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "700:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "700:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "705:4:7",
																		"nodeType": "YulLiteral",
																		"src": "705:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "696:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "696:3:7"
																},
																"nativeSrc": "696:14:7",
																"nodeType": "YulFunctionCall",
																"src": "696:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "681:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "681:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "547:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "615:3:7",
														"nodeType": "YulTypedName",
														"src": "615:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "620:6:7",
														"nodeType": "YulTypedName",
														"src": "620:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "631:11:7",
														"nodeType": "YulTypedName",
														"src": "631:11:7",
														"type": ""
													}
												],
												"src": "547:169:7"
											},
											{
												"body": {
													"nativeSrc": "784:77:7",
													"nodeType": "YulBlock",
													"src": "784:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "801:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "801:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "806:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "806:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "811:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "811:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "795:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "795:5:7"
																},
																"nativeSrc": "795:23:7",
																"nodeType": "YulFunctionCall",
																"src": "795:23:7"
															},
															"nativeSrc": "795:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "795:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "838:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "838:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "843:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "843:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "834:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "834:3:7"
																		},
																		"nativeSrc": "834:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "834:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "852:1:7",
																		"nodeType": "YulLiteral",
																		"src": "852:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "827:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "827:6:7"
																},
																"nativeSrc": "827:27:7",
																"nodeType": "YulFunctionCall",
																"src": "827:27:7"
															},
															"nativeSrc": "827:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "827:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "722:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "766:3:7",
														"nodeType": "YulTypedName",
														"src": "766:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "771:3:7",
														"nodeType": "YulTypedName",
														"src": "771:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "776:6:7",
														"nodeType": "YulTypedName",
														"src": "776:6:7",
														"type": ""
													}
												],
												"src": "722:139:7"
											},
											{
												"body": {
													"nativeSrc": "915:54:7",
													"nodeType": "YulBlock",
													"src": "915:54:7",
													"statements": [
														{
															"nativeSrc": "925:38:7",
															"nodeType": "YulAssignment",
															"src": "925:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "943:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "943:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "950:2:7",
																				"nodeType": "YulLiteral",
																				"src": "950:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "939:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:7"
																		},
																		"nativeSrc": "939:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "939:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "959:2:7",
																				"nodeType": "YulLiteral",
																				"src": "959:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "955:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:7"
																		},
																		"nativeSrc": "955:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "955:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "935:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:7"
																},
																"nativeSrc": "935:28:7",
																"nodeType": "YulFunctionCall",
																"src": "935:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "925:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "925:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "867:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "898:5:7",
														"nodeType": "YulTypedName",
														"src": "898:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "908:6:7",
														"nodeType": "YulTypedName",
														"src": "908:6:7",
														"type": ""
													}
												],
												"src": "867:102:7"
											},
											{
												"body": {
													"nativeSrc": "1067:285:7",
													"nodeType": "YulBlock",
													"src": "1067:285:7",
													"statements": [
														{
															"nativeSrc": "1077:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1077:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1124:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1124:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1091:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "1091:32:7"
																},
																"nativeSrc": "1091:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1091:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1081:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1081:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1139:78:7",
															"nodeType": "YulAssignment",
															"src": "1139:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1205:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1205:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1210:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1210:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1146:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "1146:58:7"
																},
																"nativeSrc": "1146:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1146:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1139:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1139:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1265:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1265:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1272:4:7",
																				"nodeType": "YulLiteral",
																				"src": "1272:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1261:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1261:3:7"
																		},
																		"nativeSrc": "1261:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1261:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1279:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1279:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1284:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1284:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1226:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "1226:34:7"
																},
																"nativeSrc": "1226:65:7",
																"nodeType": "YulFunctionCall",
																"src": "1226:65:7"
															},
															"nativeSrc": "1226:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "1226:65:7"
														},
														{
															"nativeSrc": "1300:46:7",
															"nodeType": "YulAssignment",
															"src": "1300:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1311:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1311:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1338:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1338:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1316:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "1316:21:7"
																		},
																		"nativeSrc": "1316:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1316:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1307:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1307:3:7"
																},
																"nativeSrc": "1307:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1307:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1300:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1300:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "975:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1048:5:7",
														"nodeType": "YulTypedName",
														"src": "1048:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1055:3:7",
														"nodeType": "YulTypedName",
														"src": "1055:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1063:3:7",
														"nodeType": "YulTypedName",
														"src": "1063:3:7",
														"type": ""
													}
												],
												"src": "975:377:7"
											},
											{
												"body": {
													"nativeSrc": "1476:195:7",
													"nodeType": "YulBlock",
													"src": "1476:195:7",
													"statements": [
														{
															"nativeSrc": "1486:26:7",
															"nodeType": "YulAssignment",
															"src": "1486:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1509:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1509:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1494:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1494:3:7"
																},
																"nativeSrc": "1494:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1494:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1486:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1486:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1533:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1533:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1544:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1544:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1529:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1529:3:7"
																		},
																		"nativeSrc": "1529:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1529:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1552:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1552:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1558:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1558:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1548:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:7"
																		},
																		"nativeSrc": "1548:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1548:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1522:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1522:6:7"
																},
																"nativeSrc": "1522:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1522:47:7"
															},
															"nativeSrc": "1522:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1522:47:7"
														},
														{
															"nativeSrc": "1578:86:7",
															"nodeType": "YulAssignment",
															"src": "1578:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1650:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1650:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1659:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1659:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1586:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1586:63:7"
																},
																"nativeSrc": "1586:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1586:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1578:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1578:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1358:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1448:9:7",
														"nodeType": "YulTypedName",
														"src": "1448:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1460:6:7",
														"nodeType": "YulTypedName",
														"src": "1460:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1471:4:7",
														"nodeType": "YulTypedName",
														"src": "1471:4:7",
														"type": ""
													}
												],
												"src": "1358:313:7"
											},
											{
												"body": {
													"nativeSrc": "1717:35:7",
													"nodeType": "YulBlock",
													"src": "1717:35:7",
													"statements": [
														{
															"nativeSrc": "1727:19:7",
															"nodeType": "YulAssignment",
															"src": "1727:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1743:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1743:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1737:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1737:5:7"
																},
																"nativeSrc": "1737:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1737:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1727:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1727:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1677:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1710:6:7",
														"nodeType": "YulTypedName",
														"src": "1710:6:7",
														"type": ""
													}
												],
												"src": "1677:75:7"
											},
											{
												"body": {
													"nativeSrc": "1847:28:7",
													"nodeType": "YulBlock",
													"src": "1847:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1864:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1864:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1867:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1867:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1857:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1857:6:7"
																},
																"nativeSrc": "1857:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1857:12:7"
															},
															"nativeSrc": "1857:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1857:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1758:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1758:117:7"
											},
											{
												"body": {
													"nativeSrc": "1970:28:7",
													"nodeType": "YulBlock",
													"src": "1970:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1987:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1987:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1990:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1990:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1980:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:7"
																},
																"nativeSrc": "1980:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1980:12:7"
															},
															"nativeSrc": "1980:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1980:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1881:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1881:117:7"
											},
											{
												"body": {
													"nativeSrc": "2047:79:7",
													"nodeType": "YulBlock",
													"src": "2047:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2104:16:7",
																"nodeType": "YulBlock",
																"src": "2104:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2113:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2113:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2116:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2116:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2106:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2106:6:7"
																			},
																			"nativeSrc": "2106:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2106:12:7"
																		},
																		"nativeSrc": "2106:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2106:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2070:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2070:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2095:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2095:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2077:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2077:17:7"
																				},
																				"nativeSrc": "2077:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2077:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2067:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2067:2:7"
																		},
																		"nativeSrc": "2067:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2067:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2060:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2060:6:7"
																},
																"nativeSrc": "2060:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2060:43:7"
															},
															"nativeSrc": "2057:63:7",
															"nodeType": "YulIf",
															"src": "2057:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2004:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2040:5:7",
														"nodeType": "YulTypedName",
														"src": "2040:5:7",
														"type": ""
													}
												],
												"src": "2004:122:7"
											},
											{
												"body": {
													"nativeSrc": "2184:87:7",
													"nodeType": "YulBlock",
													"src": "2184:87:7",
													"statements": [
														{
															"nativeSrc": "2194:29:7",
															"nodeType": "YulAssignment",
															"src": "2194:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2216:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2216:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2203:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2203:12:7"
																},
																"nativeSrc": "2203:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2203:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2194:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2194:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2259:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2259:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2232:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2232:26:7"
																},
																"nativeSrc": "2232:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2232:33:7"
															},
															"nativeSrc": "2232:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2232:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2132:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2162:6:7",
														"nodeType": "YulTypedName",
														"src": "2162:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2170:3:7",
														"nodeType": "YulTypedName",
														"src": "2170:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2178:5:7",
														"nodeType": "YulTypedName",
														"src": "2178:5:7",
														"type": ""
													}
												],
												"src": "2132:139:7"
											},
											{
												"body": {
													"nativeSrc": "2343:263:7",
													"nodeType": "YulBlock",
													"src": "2343:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2389:83:7",
																"nodeType": "YulBlock",
																"src": "2389:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2391:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2391:77:7"
																			},
																			"nativeSrc": "2391:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2391:79:7"
																		},
																		"nativeSrc": "2391:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2391:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2364:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2364:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2373:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2373:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2360:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2360:3:7"
																		},
																		"nativeSrc": "2360:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2360:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2385:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2385:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2356:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2356:3:7"
																},
																"nativeSrc": "2356:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2356:32:7"
															},
															"nativeSrc": "2353:119:7",
															"nodeType": "YulIf",
															"src": "2353:119:7"
														},
														{
															"nativeSrc": "2482:117:7",
															"nodeType": "YulBlock",
															"src": "2482:117:7",
															"statements": [
																{
																	"nativeSrc": "2497:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2497:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2511:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2511:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2501:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2501:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2526:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2526:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2561:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2561:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2572:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2572:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2557:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2557:3:7"
																				},
																				"nativeSrc": "2557:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2557:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2581:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2581:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2536:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2536:20:7"
																		},
																		"nativeSrc": "2536:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2536:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2526:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2526:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2277:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2313:9:7",
														"nodeType": "YulTypedName",
														"src": "2313:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2324:7:7",
														"nodeType": "YulTypedName",
														"src": "2324:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2336:6:7",
														"nodeType": "YulTypedName",
														"src": "2336:6:7",
														"type": ""
													}
												],
												"src": "2277:329:7"
											},
											{
												"body": {
													"nativeSrc": "2657:81:7",
													"nodeType": "YulBlock",
													"src": "2657:81:7",
													"statements": [
														{
															"nativeSrc": "2667:65:7",
															"nodeType": "YulAssignment",
															"src": "2667:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2682:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2682:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2689:42:7",
																		"nodeType": "YulLiteral",
																		"src": "2689:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2678:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2678:3:7"
																},
																"nativeSrc": "2678:54:7",
																"nodeType": "YulFunctionCall",
																"src": "2678:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2667:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2667:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2612:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2639:5:7",
														"nodeType": "YulTypedName",
														"src": "2639:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2649:7:7",
														"nodeType": "YulTypedName",
														"src": "2649:7:7",
														"type": ""
													}
												],
												"src": "2612:126:7"
											},
											{
												"body": {
													"nativeSrc": "2789:51:7",
													"nodeType": "YulBlock",
													"src": "2789:51:7",
													"statements": [
														{
															"nativeSrc": "2799:35:7",
															"nodeType": "YulAssignment",
															"src": "2799:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2828:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2828:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2810:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2810:17:7"
																},
																"nativeSrc": "2810:24:7",
																"nodeType": "YulFunctionCall",
																"src": "2810:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2799:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2799:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2744:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2771:5:7",
														"nodeType": "YulTypedName",
														"src": "2771:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2781:7:7",
														"nodeType": "YulTypedName",
														"src": "2781:7:7",
														"type": ""
													}
												],
												"src": "2744:96:7"
											},
											{
												"body": {
													"nativeSrc": "2889:79:7",
													"nodeType": "YulBlock",
													"src": "2889:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2946:16:7",
																"nodeType": "YulBlock",
																"src": "2946:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2955:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2955:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2958:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2958:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2948:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2948:6:7"
																			},
																			"nativeSrc": "2948:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2948:12:7"
																		},
																		"nativeSrc": "2948:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2948:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2912:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2912:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2937:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2937:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2919:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2919:17:7"
																				},
																				"nativeSrc": "2919:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2919:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2909:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2909:2:7"
																		},
																		"nativeSrc": "2909:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2909:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2902:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2902:6:7"
																},
																"nativeSrc": "2902:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2902:43:7"
															},
															"nativeSrc": "2899:63:7",
															"nodeType": "YulIf",
															"src": "2899:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2846:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2882:5:7",
														"nodeType": "YulTypedName",
														"src": "2882:5:7",
														"type": ""
													}
												],
												"src": "2846:122:7"
											},
											{
												"body": {
													"nativeSrc": "3026:87:7",
													"nodeType": "YulBlock",
													"src": "3026:87:7",
													"statements": [
														{
															"nativeSrc": "3036:29:7",
															"nodeType": "YulAssignment",
															"src": "3036:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3058:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3058:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3045:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3045:12:7"
																},
																"nativeSrc": "3045:20:7",
																"nodeType": "YulFunctionCall",
																"src": "3045:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3036:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3036:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3101:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3101:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3074:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "3074:26:7"
																},
																"nativeSrc": "3074:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3074:33:7"
															},
															"nativeSrc": "3074:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "3074:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2974:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3004:6:7",
														"nodeType": "YulTypedName",
														"src": "3004:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3012:3:7",
														"nodeType": "YulTypedName",
														"src": "3012:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3020:5:7",
														"nodeType": "YulTypedName",
														"src": "3020:5:7",
														"type": ""
													}
												],
												"src": "2974:139:7"
											},
											{
												"body": {
													"nativeSrc": "3202:391:7",
													"nodeType": "YulBlock",
													"src": "3202:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3248:83:7",
																"nodeType": "YulBlock",
																"src": "3248:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3250:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3250:77:7"
																			},
																			"nativeSrc": "3250:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3250:79:7"
																		},
																		"nativeSrc": "3250:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3250:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3223:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3223:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3232:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3232:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3219:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3219:3:7"
																		},
																		"nativeSrc": "3219:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3219:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3244:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3244:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3215:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3215:3:7"
																},
																"nativeSrc": "3215:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3215:32:7"
															},
															"nativeSrc": "3212:119:7",
															"nodeType": "YulIf",
															"src": "3212:119:7"
														},
														{
															"nativeSrc": "3341:117:7",
															"nodeType": "YulBlock",
															"src": "3341:117:7",
															"statements": [
																{
																	"nativeSrc": "3356:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3356:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3370:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3370:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3360:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3360:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3385:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3385:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3420:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3420:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3431:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3431:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3416:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3416:3:7"
																				},
																				"nativeSrc": "3416:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3416:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3440:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3440:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3395:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3395:20:7"
																		},
																		"nativeSrc": "3395:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3395:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3385:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3385:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3468:118:7",
															"nodeType": "YulBlock",
															"src": "3468:118:7",
															"statements": [
																{
																	"nativeSrc": "3483:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3483:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3497:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3497:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3487:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3487:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3513:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3513:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3548:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3548:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3559:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3559:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3544:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3544:3:7"
																				},
																				"nativeSrc": "3544:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3544:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3568:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3568:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3523:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3523:20:7"
																		},
																		"nativeSrc": "3523:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3523:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3513:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3513:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3119:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3164:9:7",
														"nodeType": "YulTypedName",
														"src": "3164:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3175:7:7",
														"nodeType": "YulTypedName",
														"src": "3175:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3187:6:7",
														"nodeType": "YulTypedName",
														"src": "3187:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3195:6:7",
														"nodeType": "YulTypedName",
														"src": "3195:6:7",
														"type": ""
													}
												],
												"src": "3119:474:7"
											},
											{
												"body": {
													"nativeSrc": "3641:48:7",
													"nodeType": "YulBlock",
													"src": "3641:48:7",
													"statements": [
														{
															"nativeSrc": "3651:32:7",
															"nodeType": "YulAssignment",
															"src": "3651:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3676:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3676:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3669:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3669:6:7"
																		},
																		"nativeSrc": "3669:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3669:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3662:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3662:6:7"
																},
																"nativeSrc": "3662:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3662:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3651:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3651:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3599:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3623:5:7",
														"nodeType": "YulTypedName",
														"src": "3623:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3633:7:7",
														"nodeType": "YulTypedName",
														"src": "3633:7:7",
														"type": ""
													}
												],
												"src": "3599:90:7"
											},
											{
												"body": {
													"nativeSrc": "3754:50:7",
													"nodeType": "YulBlock",
													"src": "3754:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3771:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3771:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3791:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3791:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3776:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3776:14:7"
																		},
																		"nativeSrc": "3776:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3776:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3764:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3764:6:7"
																},
																"nativeSrc": "3764:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3764:34:7"
															},
															"nativeSrc": "3764:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3764:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3695:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3742:5:7",
														"nodeType": "YulTypedName",
														"src": "3742:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3749:3:7",
														"nodeType": "YulTypedName",
														"src": "3749:3:7",
														"type": ""
													}
												],
												"src": "3695:109:7"
											},
											{
												"body": {
													"nativeSrc": "3902:118:7",
													"nodeType": "YulBlock",
													"src": "3902:118:7",
													"statements": [
														{
															"nativeSrc": "3912:26:7",
															"nodeType": "YulAssignment",
															"src": "3912:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3924:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3924:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3935:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3935:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3920:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3920:3:7"
																},
																"nativeSrc": "3920:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3920:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3912:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3912:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3986:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3986:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3999:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3999:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4010:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4010:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3995:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3995:3:7"
																		},
																		"nativeSrc": "3995:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3995:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3948:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3948:37:7"
																},
																"nativeSrc": "3948:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3948:65:7"
															},
															"nativeSrc": "3948:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3948:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3810:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3874:9:7",
														"nodeType": "YulTypedName",
														"src": "3874:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3886:6:7",
														"nodeType": "YulTypedName",
														"src": "3886:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3897:4:7",
														"nodeType": "YulTypedName",
														"src": "3897:4:7",
														"type": ""
													}
												],
												"src": "3810:210:7"
											},
											{
												"body": {
													"nativeSrc": "4126:519:7",
													"nodeType": "YulBlock",
													"src": "4126:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4172:83:7",
																"nodeType": "YulBlock",
																"src": "4172:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4174:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4174:77:7"
																			},
																			"nativeSrc": "4174:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4174:79:7"
																		},
																		"nativeSrc": "4174:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4174:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4147:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4147:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4156:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4143:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:7"
																		},
																		"nativeSrc": "4143:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4143:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4168:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4168:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4139:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4139:3:7"
																},
																"nativeSrc": "4139:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4139:32:7"
															},
															"nativeSrc": "4136:119:7",
															"nodeType": "YulIf",
															"src": "4136:119:7"
														},
														{
															"nativeSrc": "4265:117:7",
															"nodeType": "YulBlock",
															"src": "4265:117:7",
															"statements": [
																{
																	"nativeSrc": "4280:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4280:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4294:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4294:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4284:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4284:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4309:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4309:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4344:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4344:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4355:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4355:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4340:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4340:3:7"
																				},
																				"nativeSrc": "4340:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4340:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4364:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4364:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4319:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4319:20:7"
																		},
																		"nativeSrc": "4319:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4319:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4309:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4309:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4392:118:7",
															"nodeType": "YulBlock",
															"src": "4392:118:7",
															"statements": [
																{
																	"nativeSrc": "4407:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4407:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4421:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4421:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4411:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4411:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4437:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4437:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4472:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4472:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4483:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4483:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4468:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4468:3:7"
																				},
																				"nativeSrc": "4468:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4468:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4492:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4492:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4447:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4447:20:7"
																		},
																		"nativeSrc": "4447:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4447:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4437:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4437:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4520:118:7",
															"nodeType": "YulBlock",
															"src": "4520:118:7",
															"statements": [
																{
																	"nativeSrc": "4535:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4535:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4549:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4549:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4539:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4539:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:7"
																				},
																				"nativeSrc": "4596:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4575:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:7"
																		},
																		"nativeSrc": "4575:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4565:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4026:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4080:9:7",
														"nodeType": "YulTypedName",
														"src": "4080:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4091:7:7",
														"nodeType": "YulTypedName",
														"src": "4091:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4103:6:7",
														"nodeType": "YulTypedName",
														"src": "4103:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4111:6:7",
														"nodeType": "YulTypedName",
														"src": "4111:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4119:6:7",
														"nodeType": "YulTypedName",
														"src": "4119:6:7",
														"type": ""
													}
												],
												"src": "4026:619:7"
											},
											{
												"body": {
													"nativeSrc": "4694:43:7",
													"nodeType": "YulBlock",
													"src": "4694:43:7",
													"statements": [
														{
															"nativeSrc": "4704:27:7",
															"nodeType": "YulAssignment",
															"src": "4704:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4719:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4719:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4726:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4715:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:7"
																},
																"nativeSrc": "4715:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4715:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4704:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4704:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4651:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4676:5:7",
														"nodeType": "YulTypedName",
														"src": "4676:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4686:7:7",
														"nodeType": "YulTypedName",
														"src": "4686:7:7",
														"type": ""
													}
												],
												"src": "4651:86:7"
											},
											{
												"body": {
													"nativeSrc": "4804:51:7",
													"nodeType": "YulBlock",
													"src": "4804:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4821:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4821:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4842:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4842:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4826:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4826:15:7"
																		},
																		"nativeSrc": "4826:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4826:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4814:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:7"
																},
																"nativeSrc": "4814:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4814:35:7"
															},
															"nativeSrc": "4814:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4814:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4743:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4792:5:7",
														"nodeType": "YulTypedName",
														"src": "4792:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4799:3:7",
														"nodeType": "YulTypedName",
														"src": "4799:3:7",
														"type": ""
													}
												],
												"src": "4743:112:7"
											},
											{
												"body": {
													"nativeSrc": "4955:120:7",
													"nodeType": "YulBlock",
													"src": "4955:120:7",
													"statements": [
														{
															"nativeSrc": "4965:26:7",
															"nodeType": "YulAssignment",
															"src": "4965:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4977:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4977:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4973:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:7"
																},
																"nativeSrc": "4973:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4973:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4965:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5041:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5041:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5054:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5054:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5065:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5065:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5050:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:7"
																		},
																		"nativeSrc": "5050:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5050:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5001:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "5001:39:7"
																},
																"nativeSrc": "5001:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5001:67:7"
															},
															"nativeSrc": "5001:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5001:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4861:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4927:9:7",
														"nodeType": "YulTypedName",
														"src": "4927:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4939:6:7",
														"nodeType": "YulTypedName",
														"src": "4939:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4950:4:7",
														"nodeType": "YulTypedName",
														"src": "4950:4:7",
														"type": ""
													}
												],
												"src": "4861:214:7"
											},
											{
												"body": {
													"nativeSrc": "5146:53:7",
													"nodeType": "YulBlock",
													"src": "5146:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5163:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5163:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5186:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5186:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5168:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5168:17:7"
																		},
																		"nativeSrc": "5168:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5156:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:7"
																},
																"nativeSrc": "5156:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5156:37:7"
															},
															"nativeSrc": "5156:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5156:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5081:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:7",
														"nodeType": "YulTypedName",
														"src": "5134:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5141:3:7",
														"nodeType": "YulTypedName",
														"src": "5141:3:7",
														"type": ""
													}
												],
												"src": "5081:118:7"
											},
											{
												"body": {
													"nativeSrc": "5303:124:7",
													"nodeType": "YulBlock",
													"src": "5303:124:7",
													"statements": [
														{
															"nativeSrc": "5313:26:7",
															"nodeType": "YulAssignment",
															"src": "5313:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5325:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5325:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5336:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5321:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:7"
																},
																"nativeSrc": "5321:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5321:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5313:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5313:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:7"
																		},
																		"nativeSrc": "5402:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5349:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5349:43:7"
																},
																"nativeSrc": "5349:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5349:71:7"
															},
															"nativeSrc": "5349:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5349:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5205:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5275:9:7",
														"nodeType": "YulTypedName",
														"src": "5275:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5287:6:7",
														"nodeType": "YulTypedName",
														"src": "5287:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5298:4:7",
														"nodeType": "YulTypedName",
														"src": "5298:4:7",
														"type": ""
													}
												],
												"src": "5205:222:7"
											},
											{
												"body": {
													"nativeSrc": "5499:263:7",
													"nodeType": "YulBlock",
													"src": "5499:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5545:83:7",
																"nodeType": "YulBlock",
																"src": "5545:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5547:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5547:77:7"
																			},
																			"nativeSrc": "5547:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5547:79:7"
																		},
																		"nativeSrc": "5547:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5547:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5520:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5520:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5529:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5529:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5516:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5516:3:7"
																		},
																		"nativeSrc": "5516:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5516:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5541:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5541:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5512:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5512:3:7"
																},
																"nativeSrc": "5512:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5512:32:7"
															},
															"nativeSrc": "5509:119:7",
															"nodeType": "YulIf",
															"src": "5509:119:7"
														},
														{
															"nativeSrc": "5638:117:7",
															"nodeType": "YulBlock",
															"src": "5638:117:7",
															"statements": [
																{
																	"nativeSrc": "5653:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5653:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5667:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5667:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5657:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5657:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5682:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5682:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5717:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5717:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5728:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5728:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5713:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5713:3:7"
																				},
																				"nativeSrc": "5713:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5713:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5737:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5737:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5692:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5692:20:7"
																		},
																		"nativeSrc": "5692:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5692:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5682:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5682:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5433:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5469:9:7",
														"nodeType": "YulTypedName",
														"src": "5469:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5480:7:7",
														"nodeType": "YulTypedName",
														"src": "5480:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5492:6:7",
														"nodeType": "YulTypedName",
														"src": "5492:6:7",
														"type": ""
													}
												],
												"src": "5433:329:7"
											},
											{
												"body": {
													"nativeSrc": "5851:391:7",
													"nodeType": "YulBlock",
													"src": "5851:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:83:7",
																"nodeType": "YulBlock",
																"src": "5897:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5899:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5899:77:7"
																			},
																			"nativeSrc": "5899:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:79:7"
																		},
																		"nativeSrc": "5899:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:7"
																		},
																		"nativeSrc": "5868:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5864:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:7"
																},
																"nativeSrc": "5864:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5864:32:7"
															},
															"nativeSrc": "5861:119:7",
															"nodeType": "YulIf",
															"src": "5861:119:7"
														},
														{
															"nativeSrc": "5990:117:7",
															"nodeType": "YulBlock",
															"src": "5990:117:7",
															"statements": [
																{
																	"nativeSrc": "6005:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6005:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6019:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6019:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6009:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6009:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6034:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6034:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6069:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6069:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6080:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6080:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6065:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6065:3:7"
																				},
																				"nativeSrc": "6065:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6065:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6089:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6089:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6044:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6044:20:7"
																		},
																		"nativeSrc": "6044:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6034:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6034:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6117:118:7",
															"nodeType": "YulBlock",
															"src": "6117:118:7",
															"statements": [
																{
																	"nativeSrc": "6132:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6132:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6146:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6146:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6136:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6136:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:7"
																				},
																				"nativeSrc": "6193:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6172:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:7"
																		},
																		"nativeSrc": "6172:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6162:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "5768:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:7",
														"nodeType": "YulTypedName",
														"src": "5813:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5824:7:7",
														"nodeType": "YulTypedName",
														"src": "5824:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5836:6:7",
														"nodeType": "YulTypedName",
														"src": "5836:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:7",
														"nodeType": "YulTypedName",
														"src": "5844:6:7",
														"type": ""
													}
												],
												"src": "5768:474:7"
											},
											{
												"body": {
													"nativeSrc": "6348:519:7",
													"nodeType": "YulBlock",
													"src": "6348:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6394:83:7",
																"nodeType": "YulBlock",
																"src": "6394:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6396:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6396:77:7"
																			},
																			"nativeSrc": "6396:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6396:79:7"
																		},
																		"nativeSrc": "6396:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6396:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6369:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6369:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6378:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6378:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6365:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6365:3:7"
																		},
																		"nativeSrc": "6365:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6365:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6390:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6390:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6361:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6361:3:7"
																},
																"nativeSrc": "6361:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6361:32:7"
															},
															"nativeSrc": "6358:119:7",
															"nodeType": "YulIf",
															"src": "6358:119:7"
														},
														{
															"nativeSrc": "6487:117:7",
															"nodeType": "YulBlock",
															"src": "6487:117:7",
															"statements": [
																{
																	"nativeSrc": "6502:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6502:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6516:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6516:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6506:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6506:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6531:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6531:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6566:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6566:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6577:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6577:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6562:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6562:3:7"
																				},
																				"nativeSrc": "6562:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6562:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6586:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6586:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6541:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6541:20:7"
																		},
																		"nativeSrc": "6541:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6541:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6531:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6531:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6614:118:7",
															"nodeType": "YulBlock",
															"src": "6614:118:7",
															"statements": [
																{
																	"nativeSrc": "6629:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6629:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6643:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6643:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6633:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6633:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6659:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6659:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6694:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6694:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6705:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6705:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6690:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6690:3:7"
																				},
																				"nativeSrc": "6690:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6690:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6714:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6714:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6669:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6669:20:7"
																		},
																		"nativeSrc": "6669:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6669:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6659:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6659:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6742:118:7",
															"nodeType": "YulBlock",
															"src": "6742:118:7",
															"statements": [
																{
																	"nativeSrc": "6757:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6757:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6771:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6771:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6761:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6761:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6787:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6787:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6822:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6822:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6833:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6833:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6818:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6818:3:7"
																				},
																				"nativeSrc": "6818:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6818:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6842:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6842:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6797:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6797:20:7"
																		},
																		"nativeSrc": "6797:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6797:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6787:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6787:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_address",
												"nativeSrc": "6248:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6302:9:7",
														"nodeType": "YulTypedName",
														"src": "6302:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6313:7:7",
														"nodeType": "YulTypedName",
														"src": "6313:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6325:6:7",
														"nodeType": "YulTypedName",
														"src": "6325:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6333:6:7",
														"nodeType": "YulTypedName",
														"src": "6333:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6341:6:7",
														"nodeType": "YulTypedName",
														"src": "6341:6:7",
														"type": ""
													}
												],
												"src": "6248:619:7"
											},
											{
												"body": {
													"nativeSrc": "6956:391:7",
													"nodeType": "YulBlock",
													"src": "6956:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7002:83:7",
																"nodeType": "YulBlock",
																"src": "7002:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7004:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7004:77:7"
																			},
																			"nativeSrc": "7004:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7004:79:7"
																		},
																		"nativeSrc": "7004:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7004:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6977:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6977:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6986:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6986:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6973:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6973:3:7"
																		},
																		"nativeSrc": "6973:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6973:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6998:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6998:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6969:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6969:3:7"
																},
																"nativeSrc": "6969:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6969:32:7"
															},
															"nativeSrc": "6966:119:7",
															"nodeType": "YulIf",
															"src": "6966:119:7"
														},
														{
															"nativeSrc": "7095:117:7",
															"nodeType": "YulBlock",
															"src": "7095:117:7",
															"statements": [
																{
																	"nativeSrc": "7110:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7110:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7124:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7124:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7114:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7114:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7139:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7139:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7174:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7174:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7185:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7185:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7170:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7170:3:7"
																				},
																				"nativeSrc": "7170:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7170:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7194:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7194:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7149:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7149:20:7"
																		},
																		"nativeSrc": "7149:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7149:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7139:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7139:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7222:118:7",
															"nodeType": "YulBlock",
															"src": "7222:118:7",
															"statements": [
																{
																	"nativeSrc": "7237:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7237:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7251:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7251:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7241:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7241:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7267:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7267:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7302:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7302:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7313:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7313:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7298:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7298:3:7"
																				},
																				"nativeSrc": "7298:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7298:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7322:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7322:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7277:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7277:20:7"
																		},
																		"nativeSrc": "7277:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7277:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7267:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7267:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6873:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6918:9:7",
														"nodeType": "YulTypedName",
														"src": "6918:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6929:7:7",
														"nodeType": "YulTypedName",
														"src": "6929:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6941:6:7",
														"nodeType": "YulTypedName",
														"src": "6941:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6949:6:7",
														"nodeType": "YulTypedName",
														"src": "6949:6:7",
														"type": ""
													}
												],
												"src": "6873:474:7"
											},
											{
												"body": {
													"nativeSrc": "7416:80:7",
													"nodeType": "YulBlock",
													"src": "7416:80:7",
													"statements": [
														{
															"nativeSrc": "7426:22:7",
															"nodeType": "YulAssignment",
															"src": "7426:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7441:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7441:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7435:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7435:5:7"
																},
																"nativeSrc": "7435:13:7",
																"nodeType": "YulFunctionCall",
																"src": "7435:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7426:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7426:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7484:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7484:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7457:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "7457:26:7"
																},
																"nativeSrc": "7457:33:7",
																"nodeType": "YulFunctionCall",
																"src": "7457:33:7"
															},
															"nativeSrc": "7457:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "7457:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "7353:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7394:6:7",
														"nodeType": "YulTypedName",
														"src": "7394:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7402:3:7",
														"nodeType": "YulTypedName",
														"src": "7402:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7410:5:7",
														"nodeType": "YulTypedName",
														"src": "7410:5:7",
														"type": ""
													}
												],
												"src": "7353:143:7"
											},
											{
												"body": {
													"nativeSrc": "7579:274:7",
													"nodeType": "YulBlock",
													"src": "7579:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7625:83:7",
																"nodeType": "YulBlock",
																"src": "7625:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7627:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7627:77:7"
																			},
																			"nativeSrc": "7627:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7627:79:7"
																		},
																		"nativeSrc": "7627:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7627:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7600:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7600:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7609:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7609:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7596:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7596:3:7"
																		},
																		"nativeSrc": "7596:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7596:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7621:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7621:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7592:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7592:3:7"
																},
																"nativeSrc": "7592:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7592:32:7"
															},
															"nativeSrc": "7589:119:7",
															"nodeType": "YulIf",
															"src": "7589:119:7"
														},
														{
															"nativeSrc": "7718:128:7",
															"nodeType": "YulBlock",
															"src": "7718:128:7",
															"statements": [
																{
																	"nativeSrc": "7733:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7733:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7747:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7747:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7737:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7737:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7762:74:7",
																	"nodeType": "YulAssignment",
																	"src": "7762:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7808:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7808:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7819:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7819:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7804:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7804:3:7"
																				},
																				"nativeSrc": "7804:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7804:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7828:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7828:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "7772:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "7772:31:7"
																		},
																		"nativeSrc": "7772:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7772:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7762:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7762:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "7502:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7549:9:7",
														"nodeType": "YulTypedName",
														"src": "7549:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7560:7:7",
														"nodeType": "YulTypedName",
														"src": "7560:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7572:6:7",
														"nodeType": "YulTypedName",
														"src": "7572:6:7",
														"type": ""
													}
												],
												"src": "7502:351:7"
											},
											{
												"body": {
													"nativeSrc": "7887:152:7",
													"nodeType": "YulBlock",
													"src": "7887:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7904:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7904:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7907:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7907:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7897:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7897:6:7"
																},
																"nativeSrc": "7897:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7897:88:7"
															},
															"nativeSrc": "7897:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7897:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8001:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8001:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8004:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8004:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7994:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7994:6:7"
																},
																"nativeSrc": "7994:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7994:15:7"
															},
															"nativeSrc": "7994:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7994:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8025:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8025:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8028:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8028:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8018:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8018:6:7"
																},
																"nativeSrc": "8018:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8018:15:7"
															},
															"nativeSrc": "8018:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8018:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7859:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7859:180:7"
											},
											{
												"body": {
													"nativeSrc": "8096:269:7",
													"nodeType": "YulBlock",
													"src": "8096:269:7",
													"statements": [
														{
															"nativeSrc": "8106:22:7",
															"nodeType": "YulAssignment",
															"src": "8106:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8120:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8120:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8126:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8126:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8116:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8116:3:7"
																},
																"nativeSrc": "8116:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8116:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8106:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8106:6:7"
																}
															]
														},
														{
															"nativeSrc": "8137:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8137:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8167:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8167:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8173:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8173:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8163:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8163:3:7"
																},
																"nativeSrc": "8163:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8163:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8141:18:7",
																	"nodeType": "YulTypedName",
																	"src": "8141:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8214:51:7",
																"nodeType": "YulBlock",
																"src": "8214:51:7",
																"statements": [
																	{
																		"nativeSrc": "8228:27:7",
																		"nodeType": "YulAssignment",
																		"src": "8228:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8242:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8242:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8250:4:7",
																					"nodeType": "YulLiteral",
																					"src": "8250:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8238:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8238:3:7"
																			},
																			"nativeSrc": "8238:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8238:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8228:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8228:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8194:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "8194:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8187:6:7"
																},
																"nativeSrc": "8187:26:7",
																"nodeType": "YulFunctionCall",
																"src": "8187:26:7"
															},
															"nativeSrc": "8184:81:7",
															"nodeType": "YulIf",
															"src": "8184:81:7"
														},
														{
															"body": {
																"nativeSrc": "8317:42:7",
																"nodeType": "YulBlock",
																"src": "8317:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8331:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8331:16:7"
																			},
																			"nativeSrc": "8331:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8331:18:7"
																		},
																		"nativeSrc": "8331:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8331:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8281:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "8281:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8304:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8304:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8312:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8312:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8301:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8301:2:7"
																		},
																		"nativeSrc": "8301:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8301:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8278:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8278:2:7"
																},
																"nativeSrc": "8278:38:7",
																"nodeType": "YulFunctionCall",
																"src": "8278:38:7"
															},
															"nativeSrc": "8275:84:7",
															"nodeType": "YulIf",
															"src": "8275:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8045:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8080:4:7",
														"nodeType": "YulTypedName",
														"src": "8080:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8089:6:7",
														"nodeType": "YulTypedName",
														"src": "8089:6:7",
														"type": ""
													}
												],
												"src": "8045:320:7"
											},
											{
												"body": {
													"nativeSrc": "8399:152:7",
													"nodeType": "YulBlock",
													"src": "8399:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8416:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8416:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8419:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8419:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8409:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8409:6:7"
																},
																"nativeSrc": "8409:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8409:88:7"
															},
															"nativeSrc": "8409:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8409:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8513:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8513:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8516:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8516:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8506:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8506:6:7"
																},
																"nativeSrc": "8506:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8506:15:7"
															},
															"nativeSrc": "8506:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8506:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8537:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8537:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8540:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8540:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8530:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8530:6:7"
																},
																"nativeSrc": "8530:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8530:15:7"
															},
															"nativeSrc": "8530:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8530:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8371:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8371:180:7"
											},
											{
												"body": {
													"nativeSrc": "8605:362:7",
													"nodeType": "YulBlock",
													"src": "8605:362:7",
													"statements": [
														{
															"nativeSrc": "8615:25:7",
															"nodeType": "YulAssignment",
															"src": "8615:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8638:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8638:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8620:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8620:17:7"
																},
																"nativeSrc": "8620:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8620:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8615:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8615:1:7"
																}
															]
														},
														{
															"nativeSrc": "8649:25:7",
															"nodeType": "YulAssignment",
															"src": "8649:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8672:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8672:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8654:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8654:17:7"
																},
																"nativeSrc": "8654:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8654:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8649:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8649:1:7"
																}
															]
														},
														{
															"nativeSrc": "8683:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8683:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8706:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8706:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8709:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8709:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8702:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8702:3:7"
																},
																"nativeSrc": "8702:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8702:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8687:11:7",
																	"nodeType": "YulTypedName",
																	"src": "8687:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8720:41:7",
															"nodeType": "YulAssignment",
															"src": "8720:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8749:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "8749:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8731:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8731:17:7"
																},
																"nativeSrc": "8731:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8731:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8720:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "8720:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8938:22:7",
																"nodeType": "YulBlock",
																"src": "8938:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8940:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8940:16:7"
																			},
																			"nativeSrc": "8940:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8940:18:7"
																		},
																		"nativeSrc": "8940:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8940:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8871:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "8871:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8864:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8864:6:7"
																				},
																				"nativeSrc": "8864:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8864:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8894:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "8894:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8901:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "8901:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8910:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "8910:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8897:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "8897:3:7"
																						},
																						"nativeSrc": "8897:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "8897:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8891:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8891:2:7"
																				},
																				"nativeSrc": "8891:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8891:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8844:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8844:2:7"
																		},
																		"nativeSrc": "8844:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8844:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8824:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8824:6:7"
																},
																"nativeSrc": "8824:113:7",
																"nodeType": "YulFunctionCall",
																"src": "8824:113:7"
															},
															"nativeSrc": "8821:139:7",
															"nodeType": "YulIf",
															"src": "8821:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8557:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8588:1:7",
														"nodeType": "YulTypedName",
														"src": "8588:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8591:1:7",
														"nodeType": "YulTypedName",
														"src": "8591:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8597:7:7",
														"nodeType": "YulTypedName",
														"src": "8597:7:7",
														"type": ""
													}
												],
												"src": "8557:410:7"
											},
											{
												"body": {
													"nativeSrc": "9001:152:7",
													"nodeType": "YulBlock",
													"src": "9001:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9018:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9018:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9021:77:7",
																		"nodeType": "YulLiteral",
																		"src": "9021:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9011:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9011:6:7"
																},
																"nativeSrc": "9011:88:7",
																"nodeType": "YulFunctionCall",
																"src": "9011:88:7"
															},
															"nativeSrc": "9011:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "9011:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9115:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9115:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9118:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9118:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9108:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9108:6:7"
																},
																"nativeSrc": "9108:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9108:15:7"
															},
															"nativeSrc": "9108:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9108:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9139:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9139:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9142:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9142:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9132:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9132:6:7"
																},
																"nativeSrc": "9132:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9132:15:7"
															},
															"nativeSrc": "9132:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9132:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8973:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8973:180:7"
											},
											{
												"body": {
													"nativeSrc": "9201:143:7",
													"nodeType": "YulBlock",
													"src": "9201:143:7",
													"statements": [
														{
															"nativeSrc": "9211:25:7",
															"nodeType": "YulAssignment",
															"src": "9211:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9234:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9234:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9216:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9216:17:7"
																},
																"nativeSrc": "9216:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9216:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9211:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9211:1:7"
																}
															]
														},
														{
															"nativeSrc": "9245:25:7",
															"nodeType": "YulAssignment",
															"src": "9245:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9268:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9268:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9250:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9250:17:7"
																},
																"nativeSrc": "9250:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9250:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9245:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9245:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9292:22:7",
																"nodeType": "YulBlock",
																"src": "9292:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "9294:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9294:16:7"
																			},
																			"nativeSrc": "9294:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9294:18:7"
																		},
																		"nativeSrc": "9294:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9294:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9289:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9289:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9282:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9282:6:7"
																},
																"nativeSrc": "9282:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9282:9:7"
															},
															"nativeSrc": "9279:35:7",
															"nodeType": "YulIf",
															"src": "9279:35:7"
														},
														{
															"nativeSrc": "9324:14:7",
															"nodeType": "YulAssignment",
															"src": "9324:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9333:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9333:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9336:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9336:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9329:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9329:3:7"
																},
																"nativeSrc": "9329:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9329:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9324:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9324:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9159:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9190:1:7",
														"nodeType": "YulTypedName",
														"src": "9190:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9193:1:7",
														"nodeType": "YulTypedName",
														"src": "9193:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9199:1:7",
														"nodeType": "YulTypedName",
														"src": "9199:1:7",
														"type": ""
													}
												],
												"src": "9159:185:7"
											},
											{
												"body": {
													"nativeSrc": "9504:288:7",
													"nodeType": "YulBlock",
													"src": "9504:288:7",
													"statements": [
														{
															"nativeSrc": "9514:26:7",
															"nodeType": "YulAssignment",
															"src": "9514:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9526:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9526:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9537:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9537:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9522:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9522:3:7"
																},
																"nativeSrc": "9522:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9522:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9514:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9514:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9594:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9594:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9607:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9607:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9618:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9618:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9603:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9603:3:7"
																		},
																		"nativeSrc": "9603:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9603:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9550:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9550:43:7"
																},
																"nativeSrc": "9550:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9550:71:7"
															},
															"nativeSrc": "9550:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9550:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9675:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9675:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9688:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9688:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9699:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9699:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9684:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9684:3:7"
																		},
																		"nativeSrc": "9684:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9684:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9631:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9631:43:7"
																},
																"nativeSrc": "9631:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9631:72:7"
															},
															"nativeSrc": "9631:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9631:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9757:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9757:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9770:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9770:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9781:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9781:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9766:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9766:3:7"
																		},
																		"nativeSrc": "9766:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9766:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9713:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9713:43:7"
																},
																"nativeSrc": "9713:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9713:72:7"
															},
															"nativeSrc": "9713:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9713:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9350:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9460:9:7",
														"nodeType": "YulTypedName",
														"src": "9460:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9472:6:7",
														"nodeType": "YulTypedName",
														"src": "9472:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9480:6:7",
														"nodeType": "YulTypedName",
														"src": "9480:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9488:6:7",
														"nodeType": "YulTypedName",
														"src": "9488:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9499:4:7",
														"nodeType": "YulTypedName",
														"src": "9499:4:7",
														"type": ""
													}
												],
												"src": "9350:442:7"
											},
											{
												"body": {
													"nativeSrc": "9838:76:7",
													"nodeType": "YulBlock",
													"src": "9838:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "9892:16:7",
																"nodeType": "YulBlock",
																"src": "9892:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9901:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9901:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9904:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9904:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9894:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9894:6:7"
																			},
																			"nativeSrc": "9894:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9894:12:7"
																		},
																		"nativeSrc": "9894:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9894:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9861:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9861:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9883:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "9883:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9868:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "9868:14:7"
																				},
																				"nativeSrc": "9868:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9868:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9858:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "9858:2:7"
																		},
																		"nativeSrc": "9858:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9858:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9851:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9851:6:7"
																},
																"nativeSrc": "9851:40:7",
																"nodeType": "YulFunctionCall",
																"src": "9851:40:7"
															},
															"nativeSrc": "9848:60:7",
															"nodeType": "YulIf",
															"src": "9848:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "9798:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9831:5:7",
														"nodeType": "YulTypedName",
														"src": "9831:5:7",
														"type": ""
													}
												],
												"src": "9798:116:7"
											},
											{
												"body": {
													"nativeSrc": "9980:77:7",
													"nodeType": "YulBlock",
													"src": "9980:77:7",
													"statements": [
														{
															"nativeSrc": "9990:22:7",
															"nodeType": "YulAssignment",
															"src": "9990:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10005:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10005:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9999:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9999:5:7"
																},
																"nativeSrc": "9999:13:7",
																"nodeType": "YulFunctionCall",
																"src": "9999:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9990:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9990:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10045:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "10045:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "10021:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "10021:23:7"
																},
																"nativeSrc": "10021:30:7",
																"nodeType": "YulFunctionCall",
																"src": "10021:30:7"
															},
															"nativeSrc": "10021:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "10021:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "9920:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9958:6:7",
														"nodeType": "YulTypedName",
														"src": "9958:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9966:3:7",
														"nodeType": "YulTypedName",
														"src": "9966:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9974:5:7",
														"nodeType": "YulTypedName",
														"src": "9974:5:7",
														"type": ""
													}
												],
												"src": "9920:137:7"
											},
											{
												"body": {
													"nativeSrc": "10137:271:7",
													"nodeType": "YulBlock",
													"src": "10137:271:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "10183:83:7",
																"nodeType": "YulBlock",
																"src": "10183:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10185:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "10185:77:7"
																			},
																			"nativeSrc": "10185:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10185:79:7"
																		},
																		"nativeSrc": "10185:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10185:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10158:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10158:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10167:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10167:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10154:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10154:3:7"
																		},
																		"nativeSrc": "10154:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10154:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10179:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10179:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10150:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10150:3:7"
																},
																"nativeSrc": "10150:32:7",
																"nodeType": "YulFunctionCall",
																"src": "10150:32:7"
															},
															"nativeSrc": "10147:119:7",
															"nodeType": "YulIf",
															"src": "10147:119:7"
														},
														{
															"nativeSrc": "10276:125:7",
															"nodeType": "YulBlock",
															"src": "10276:125:7",
															"statements": [
																{
																	"nativeSrc": "10291:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10291:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10305:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10305:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10295:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10295:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10320:71:7",
																	"nodeType": "YulAssignment",
																	"src": "10320:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10363:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10363:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10374:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10374:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10359:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10359:3:7"
																				},
																				"nativeSrc": "10359:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10359:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10383:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10383:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "10330:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "10330:28:7"
																		},
																		"nativeSrc": "10330:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10330:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10320:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10320:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "10063:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10107:9:7",
														"nodeType": "YulTypedName",
														"src": "10107:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10118:7:7",
														"nodeType": "YulTypedName",
														"src": "10118:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10130:6:7",
														"nodeType": "YulTypedName",
														"src": "10130:6:7",
														"type": ""
													}
												],
												"src": "10063:345:7"
											},
											{
												"body": {
													"nativeSrc": "10540:206:7",
													"nodeType": "YulBlock",
													"src": "10540:206:7",
													"statements": [
														{
															"nativeSrc": "10550:26:7",
															"nodeType": "YulAssignment",
															"src": "10550:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10562:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10562:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10573:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10573:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10558:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10558:3:7"
																},
																"nativeSrc": "10558:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10558:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10550:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10550:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10630:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10630:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10643:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10643:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10654:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10654:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10639:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10639:3:7"
																		},
																		"nativeSrc": "10639:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10639:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10586:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10586:43:7"
																},
																"nativeSrc": "10586:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10586:71:7"
															},
															"nativeSrc": "10586:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10586:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10711:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10711:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10724:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10724:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10735:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10735:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10720:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10720:3:7"
																		},
																		"nativeSrc": "10720:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10720:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10667:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10667:43:7"
																},
																"nativeSrc": "10667:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10667:72:7"
															},
															"nativeSrc": "10667:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10667:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10414:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10504:9:7",
														"nodeType": "YulTypedName",
														"src": "10504:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10516:6:7",
														"nodeType": "YulTypedName",
														"src": "10516:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10524:6:7",
														"nodeType": "YulTypedName",
														"src": "10524:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10535:4:7",
														"nodeType": "YulTypedName",
														"src": "10535:4:7",
														"type": ""
													}
												],
												"src": "10414:332:7"
											},
											{
												"body": {
													"nativeSrc": "10878:206:7",
													"nodeType": "YulBlock",
													"src": "10878:206:7",
													"statements": [
														{
															"nativeSrc": "10888:26:7",
															"nodeType": "YulAssignment",
															"src": "10888:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10900:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10900:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10911:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10911:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10896:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10896:3:7"
																},
																"nativeSrc": "10896:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10896:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10888:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10888:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10968:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10968:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10981:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10981:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10992:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10992:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10977:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10977:3:7"
																		},
																		"nativeSrc": "10977:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10977:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10924:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10924:43:7"
																},
																"nativeSrc": "10924:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10924:71:7"
															},
															"nativeSrc": "10924:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10924:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11049:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11049:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11062:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11062:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11073:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11073:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11058:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11058:3:7"
																		},
																		"nativeSrc": "11058:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11058:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11005:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11005:43:7"
																},
																"nativeSrc": "11005:72:7",
																"nodeType": "YulFunctionCall",
																"src": "11005:72:7"
															},
															"nativeSrc": "11005:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "11005:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10752:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10842:9:7",
														"nodeType": "YulTypedName",
														"src": "10842:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10854:6:7",
														"nodeType": "YulTypedName",
														"src": "10854:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10862:6:7",
														"nodeType": "YulTypedName",
														"src": "10862:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10873:4:7",
														"nodeType": "YulTypedName",
														"src": "10873:4:7",
														"type": ""
													}
												],
												"src": "10752:332:7"
											},
											{
												"body": {
													"nativeSrc": "11244:288:7",
													"nodeType": "YulBlock",
													"src": "11244:288:7",
													"statements": [
														{
															"nativeSrc": "11254:26:7",
															"nodeType": "YulAssignment",
															"src": "11254:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11266:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11266:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11277:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11277:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11262:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11262:3:7"
																},
																"nativeSrc": "11262:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11262:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11254:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11254:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11334:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11334:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11347:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11347:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11358:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11358:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11343:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11343:3:7"
																		},
																		"nativeSrc": "11343:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11343:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11290:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11290:43:7"
																},
																"nativeSrc": "11290:71:7",
																"nodeType": "YulFunctionCall",
																"src": "11290:71:7"
															},
															"nativeSrc": "11290:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "11290:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11415:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11415:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11428:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11428:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11439:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11439:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11424:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11424:3:7"
																		},
																		"nativeSrc": "11424:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11424:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11371:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11371:43:7"
																},
																"nativeSrc": "11371:72:7",
																"nodeType": "YulFunctionCall",
																"src": "11371:72:7"
															},
															"nativeSrc": "11371:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "11371:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11497:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11497:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11510:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11510:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11521:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11521:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11506:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11506:3:7"
																		},
																		"nativeSrc": "11506:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11506:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11453:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11453:43:7"
																},
																"nativeSrc": "11453:72:7",
																"nodeType": "YulFunctionCall",
																"src": "11453:72:7"
															},
															"nativeSrc": "11453:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "11453:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11090:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11200:9:7",
														"nodeType": "YulTypedName",
														"src": "11200:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11212:6:7",
														"nodeType": "YulTypedName",
														"src": "11212:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11220:6:7",
														"nodeType": "YulTypedName",
														"src": "11220:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11228:6:7",
														"nodeType": "YulTypedName",
														"src": "11228:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11239:4:7",
														"nodeType": "YulTypedName",
														"src": "11239:4:7",
														"type": ""
													}
												],
												"src": "11090:442:7"
											},
											{
												"body": {
													"nativeSrc": "11582:147:7",
													"nodeType": "YulBlock",
													"src": "11582:147:7",
													"statements": [
														{
															"nativeSrc": "11592:25:7",
															"nodeType": "YulAssignment",
															"src": "11592:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11615:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11615:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11597:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11597:17:7"
																},
																"nativeSrc": "11597:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11597:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11592:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11592:1:7"
																}
															]
														},
														{
															"nativeSrc": "11626:25:7",
															"nodeType": "YulAssignment",
															"src": "11626:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11649:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11649:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11631:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11631:17:7"
																},
																"nativeSrc": "11631:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11631:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11626:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11626:1:7"
																}
															]
														},
														{
															"nativeSrc": "11660:16:7",
															"nodeType": "YulAssignment",
															"src": "11660:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11671:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11671:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11674:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11674:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11667:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11667:3:7"
																},
																"nativeSrc": "11667:9:7",
																"nodeType": "YulFunctionCall",
																"src": "11667:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11660:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11660:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11700:22:7",
																"nodeType": "YulBlock",
																"src": "11700:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11702:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11702:16:7"
																			},
																			"nativeSrc": "11702:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11702:18:7"
																		},
																		"nativeSrc": "11702:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11702:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11692:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11692:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11695:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11695:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11689:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "11689:2:7"
																},
																"nativeSrc": "11689:10:7",
																"nodeType": "YulFunctionCall",
																"src": "11689:10:7"
															},
															"nativeSrc": "11686:36:7",
															"nodeType": "YulIf",
															"src": "11686:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11538:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11569:1:7",
														"nodeType": "YulTypedName",
														"src": "11569:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11572:1:7",
														"nodeType": "YulTypedName",
														"src": "11572:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11578:3:7",
														"nodeType": "YulTypedName",
														"src": "11578:3:7",
														"type": ""
													}
												],
												"src": "11538:191:7"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"969": [
									{
										"length": 32,
										"start": 1468
									},
									{
										"length": 32,
										"start": 1948
									},
									{
										"length": 32,
										"start": 2056
									},
									{
										"length": 32,
										"start": 2414
									},
									{
										"length": 32,
										"start": 2971
									},
									{
										"length": 32,
										"start": 3345
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610171575f3560e01c806370a08231116100dc578063ba08765211610095578063ce96cb771161006f578063ce96cb77146104f9578063d905777e14610529578063dd62ed3e14610559578063ef8b30f71461058957610171565b8063ba08765214610469578063c63d75b614610499578063c6e6f592146104c957610171565b806370a082311461035b57806394bf804d1461038b57806395d89b41146103bb578063a9059cbb146103d9578063b3d7f6b914610409578063b460af941461043957610171565b806323b872dd1161012e57806323b872dd1461025f578063313ce5671461028f57806338d52e0f146102ad578063402d267d146102cb5780634cdad506146102fb5780636e553f651461032b57610171565b806301e1d1141461017557806306fdde031461019357806307a2d13a146101b1578063095ea7b3146101e15780630a28a4771461021157806318160ddd14610241575b5f5ffd5b61017d6105b9565b60405161018a91906115f0565b60405180910390f35b61019b610657565b6040516101a89190611679565b60405180910390f35b6101cb60048036038101906101c691906116c7565b6106e7565b6040516101d891906115f0565b60405180910390f35b6101fb60048036038101906101f6919061174c565b610727565b60405161020891906117a4565b60405180910390f35b61022b600480360381019061022691906116c7565b610749565b60405161023891906115f0565b60405180910390f35b61024961075a565b60405161025691906115f0565b60405180910390f35b610279600480360381019061027491906117bd565b610763565b60405161028691906117a4565b60405180910390f35b610297610791565b6040516102a49190611828565b60405180910390f35b6102b5610799565b6040516102c29190611850565b60405180910390f35b6102e560048036038101906102e09190611869565b6107c0565b6040516102f291906115f0565b60405180910390f35b610315600480360381019061031091906116c7565b6107e9565b60405161032291906115f0565b60405180910390f35b61034560048036038101906103409190611894565b6107fa565b60405161035291906115f0565b60405180910390f35b61037560048036038101906103709190611869565b61091b565b60405161038291906115f0565b60405180910390f35b6103a560048036038101906103a09190611894565b610960565b6040516103b291906115f0565b60405180910390f35b6103c3610a81565b6040516103d09190611679565b60405180910390f35b6103f360048036038101906103ee919061174c565b610b11565b60405161040091906117a4565b60405180910390f35b610423600480360381019061041e91906116c7565b610b33565b60405161043091906115f0565b60405180910390f35b610453600480360381019061044e91906118d2565b610b44565b60405161046091906115f0565b60405180910390f35b610483600480360381019061047e91906118d2565b610cba565b60405161049091906115f0565b60405180910390f35b6104b360048036038101906104ae9190611869565b610e30565b6040516104c091906115f0565b60405180910390f35b6104e360048036038101906104de91906116c7565b610e59565b6040516104f091906115f0565b60405180910390f35b610513600480360381019061050e9190611869565b610e99565b60405161052091906115f0565b60405180910390f35b610543600480360381019061053e9190611869565b610eb2565b60405161055091906115f0565b60405180910390f35b610573600480360381019061056e9190611922565b610ec3565b60405161058091906115f0565b60405180910390f35b6105a3600480360381019061059e91906116c7565b610f45565b6040516105b091906115f0565b60405180910390f35b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106139190611850565b602060405180830381865afa15801561062e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106529190611974565b905090565b606060038054610666906119cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610692906119cc565b80156106dd5780601f106106b4576101008083540402835291602001916106dd565b820191905f5260205f20905b8154815290600101906020018083116106c057829003601f168201915b5050505050905090565b5f5f6106f161075a565b90505f811461071d57806107036105b9565b8461070e9190611a29565b6107189190611a97565b61071f565b825b915050919050565b5f5f610731610f56565b905061073e818585610f5d565b600191505092915050565b5f61075382610e59565b9050919050565b5f600254905090565b5f5f61076d610f56565b905061077a858285610f6f565b610785858585611002565b60019150509392505050565b5f6012905090565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050919050565b5f6107f3826106e7565b9050919050565b5f61080483610f45565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161086393929190611ac7565b6020604051808303815f875af115801561087f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108a39190611b26565b506108ae82826110f2565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7858460405161090d929190611b51565b60405180910390a392915050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f61096a83610b33565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016109c993929190611ac7565b6020604051808303815f875af11580156109e5573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a099190611b26565b50610a1482846110f2565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78386604051610a73929190611b51565b60405180910390a392915050565b606060048054610a90906119cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610abc906119cc565b8015610b075780601f10610ade57610100808354040283529160200191610b07565b820191905f5260205f20905b815481529060010190602001808311610aea57829003601f168201915b5050505050905090565b5f5f610b1b610f56565b9050610b28818585611002565b600191505092915050565b5f610b3d826106e7565b9050919050565b5f610b4e84610749565b90508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b8f57610b8e823383610f6f565b5b610b998282611171565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84866040518363ffffffff1660e01b8152600401610bf4929190611b78565b6020604051808303815f875af1158015610c10573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c349190611b26565b508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8785604051610cab929190611b51565b60405180910390a49392505050565b5f610cc4846107e9565b90508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d0557610d04823386610f6f565b5b610d0f8285611171565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b8152600401610d6a929190611b78565b6020604051808303815f875af1158015610d86573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610daa9190611b26565b508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8488604051610e21929190611b51565b60405180910390a49392505050565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050919050565b5f5f610e6361075a565b90505f8114610e8f57610e746105b9565b8184610e809190611a29565b610e8a9190611a97565b610e91565b825b915050919050565b5f610eab610ea68361091b565b6106e7565b9050919050565b5f610ebc8261091b565b9050919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f610f4f82610e59565b9050919050565b5f33905090565b610f6a83838360016111f0565b505050565b5f610f7a8484610ec3565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610ffc5781811015610fed578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610fe493929190611b9f565b60405180910390fd5b610ffb84848484035f6111f0565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611072575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016110699190611850565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110e2575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110d99190611850565b60405180910390fd5b6110ed8383836113bf565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611162575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016111599190611850565b60405180910390fd5b61116d5f83836113bf565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111e1575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016111d89190611850565b60405180910390fd5b6111ec825f836113bf565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611260575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016112579190611850565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112d0575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016112c79190611850565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156113b9578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516113b091906115f0565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361140f578060025f8282546114039190611bd4565b925050819055506114dd565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611498578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161148f93929190611b9f565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611524578060025f828254039250508190555061156e565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115cb91906115f0565b60405180910390a3505050565b5f819050919050565b6115ea816115d8565b82525050565b5f6020820190506116035f8301846115e1565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61164b82611609565b6116558185611613565b9350611665818560208601611623565b61166e81611631565b840191505092915050565b5f6020820190508181035f8301526116918184611641565b905092915050565b5f5ffd5b6116a6816115d8565b81146116b0575f5ffd5b50565b5f813590506116c18161169d565b92915050565b5f602082840312156116dc576116db611699565b5b5f6116e9848285016116b3565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61171b826116f2565b9050919050565b61172b81611711565b8114611735575f5ffd5b50565b5f8135905061174681611722565b92915050565b5f5f6040838503121561176257611761611699565b5b5f61176f85828601611738565b9250506020611780858286016116b3565b9150509250929050565b5f8115159050919050565b61179e8161178a565b82525050565b5f6020820190506117b75f830184611795565b92915050565b5f5f5f606084860312156117d4576117d3611699565b5b5f6117e186828701611738565b93505060206117f286828701611738565b9250506040611803868287016116b3565b9150509250925092565b5f60ff82169050919050565b6118228161180d565b82525050565b5f60208201905061183b5f830184611819565b92915050565b61184a81611711565b82525050565b5f6020820190506118635f830184611841565b92915050565b5f6020828403121561187e5761187d611699565b5b5f61188b84828501611738565b91505092915050565b5f5f604083850312156118aa576118a9611699565b5b5f6118b7858286016116b3565b92505060206118c885828601611738565b9150509250929050565b5f5f5f606084860312156118e9576118e8611699565b5b5f6118f6868287016116b3565b935050602061190786828701611738565b925050604061191886828701611738565b9150509250925092565b5f5f6040838503121561193857611937611699565b5b5f61194585828601611738565b925050602061195685828601611738565b9150509250929050565b5f8151905061196e8161169d565b92915050565b5f6020828403121561198957611988611699565b5b5f61199684828501611960565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806119e357607f821691505b6020821081036119f6576119f561199f565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a33826115d8565b9150611a3e836115d8565b9250828202611a4c816115d8565b91508282048414831517611a6357611a626119fc565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611aa1826115d8565b9150611aac836115d8565b925082611abc57611abb611a6a565b5b828204905092915050565b5f606082019050611ada5f830186611841565b611ae76020830185611841565b611af460408301846115e1565b949350505050565b611b058161178a565b8114611b0f575f5ffd5b50565b5f81519050611b2081611afc565b92915050565b5f60208284031215611b3b57611b3a611699565b5b5f611b4884828501611b12565b91505092915050565b5f604082019050611b645f8301856115e1565b611b7160208301846115e1565b9392505050565b5f604082019050611b8b5f830185611841565b611b9860208301846115e1565b9392505050565b5f606082019050611bb25f830186611841565b611bbf60208301856115e1565b611bcc60408301846115e1565b949350505050565b5f611bde826115d8565b9150611be9836115d8565b9250828201905080821115611c0157611c006119fc565b5b9291505056fea2646970667358221220d90a7bf830422d1c8298f70788475340d164e43316cb89801d1a956b6b3a601a64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x171 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xBA087652 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xCE96CB77 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCE96CB77 EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0xD905777E EQ PUSH2 0x529 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0xEF8B30F7 EQ PUSH2 0x589 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0xBA087652 EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0xC63D75B6 EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0xC6E6F592 EQ PUSH2 0x4C9 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x94BF804D EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xB3D7F6B9 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0xB460AF94 EQ PUSH2 0x439 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x402D267D EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x4CDAD506 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x6E553F65 EQ PUSH2 0x32B JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x1E1D114 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x7A2D13A EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xA28A477 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x241 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x17D PUSH2 0x5B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0x657 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x749 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH2 0x75A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x17BD JUMP JUMPDEST PUSH2 0x763 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH2 0x791 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH2 0x799 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x315 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x1894 JUMP JUMPDEST PUSH2 0x960 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C3 PUSH2 0xA81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x1679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x174C JUMP JUMPDEST PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x17A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x423 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41E SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0xB33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x453 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44E SWAP2 SWAP1 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0xB44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x483 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DE SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x513 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50E SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x520 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x543 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x550 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x573 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x1922 JUMP JUMPDEST PUSH2 0xEC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x580 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59E SWAP2 SWAP1 PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x613 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x62E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x652 SWAP2 SWAP1 PUSH2 0x1974 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x666 SWAP1 PUSH2 0x19CC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x692 SWAP1 PUSH2 0x19CC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x6F1 PUSH2 0x75A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 EQ PUSH2 0x71D JUMPI DUP1 PUSH2 0x703 PUSH2 0x5B9 JUMP JUMPDEST DUP5 PUSH2 0x70E SWAP2 SWAP1 PUSH2 0x1A29 JUMP JUMPDEST PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST DUP3 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x731 PUSH2 0xF56 JUMP JUMPDEST SWAP1 POP PUSH2 0x73E DUP2 DUP6 DUP6 PUSH2 0xF5D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x753 DUP3 PUSH2 0xE59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x76D PUSH2 0xF56 JUMP JUMPDEST SWAP1 POP PUSH2 0x77A DUP6 DUP3 DUP6 PUSH2 0xF6F JUMP JUMPDEST PUSH2 0x785 DUP6 DUP6 DUP6 PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7F3 DUP3 PUSH2 0x6E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x804 DUP4 PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x863 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x87F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST POP PUSH2 0x8AE DUP3 DUP3 PUSH2 0x10F2 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP6 DUP5 PUSH1 0x40 MLOAD PUSH2 0x90D SWAP3 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x96A DUP4 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9E5 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA09 SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST POP PUSH2 0xA14 DUP3 DUP5 PUSH2 0x10F2 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP4 DUP7 PUSH1 0x40 MLOAD PUSH2 0xA73 SWAP3 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA90 SWAP1 PUSH2 0x19CC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xABC SWAP1 PUSH2 0x19CC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB07 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xADE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB07 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAEA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xB1B PUSH2 0xF56 JUMP JUMPDEST SWAP1 POP PUSH2 0xB28 DUP2 DUP6 DUP6 PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB3D DUP3 PUSH2 0x6E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB4E DUP5 PUSH2 0x749 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB8F JUMPI PUSH2 0xB8E DUP3 CALLER DUP4 PUSH2 0xF6F JUMP JUMPDEST JUMPDEST PUSH2 0xB99 DUP3 DUP3 PUSH2 0x1171 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B78 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC10 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC34 SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFBDE797D201C681B91056529119E0B02407C7BB96A4A2C75C01FC9667232C8DB DUP8 DUP6 PUSH1 0x40 MLOAD PUSH2 0xCAB SWAP3 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCC4 DUP5 PUSH2 0x7E9 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD05 JUMPI PUSH2 0xD04 DUP3 CALLER DUP7 PUSH2 0xF6F JUMP JUMPDEST JUMPDEST PUSH2 0xD0F DUP3 DUP6 PUSH2 0x1171 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6A SWAP3 SWAP2 SWAP1 PUSH2 0x1B78 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD86 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDAA SWAP2 SWAP1 PUSH2 0x1B26 JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFBDE797D201C681B91056529119E0B02407C7BB96A4A2C75C01FC9667232C8DB DUP5 DUP9 PUSH1 0x40 MLOAD PUSH2 0xE21 SWAP3 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xE63 PUSH2 0x75A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 EQ PUSH2 0xE8F JUMPI PUSH2 0xE74 PUSH2 0x5B9 JUMP JUMPDEST DUP2 DUP5 PUSH2 0xE80 SWAP2 SWAP1 PUSH2 0x1A29 JUMP JUMPDEST PUSH2 0xE8A SWAP2 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0xE91 JUMP JUMPDEST DUP3 JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEAB PUSH2 0xEA6 DUP4 PUSH2 0x91B JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEBC DUP3 PUSH2 0x91B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF4F DUP3 PUSH2 0xE59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF6A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11F0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF7A DUP5 DUP5 PUSH2 0xEC3 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xFFC JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xFED JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFFB DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x11F0 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1072 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1069 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10E2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D9 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10ED DUP4 DUP4 DUP4 PUSH2 0x13BF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1162 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1159 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x116D PUSH0 DUP4 DUP4 PUSH2 0x13BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11E1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D8 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11EC DUP3 PUSH0 DUP4 PUSH2 0x13BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1260 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1257 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12D0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C7 SWAP2 SWAP1 PUSH2 0x1850 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x13B9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x13B0 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x140F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1403 SWAP2 SWAP1 PUSH2 0x1BD4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x14DD JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1498 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1524 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x156E JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x15CB SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15EA DUP2 PUSH2 0x15D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1603 PUSH0 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x164B DUP3 PUSH2 0x1609 JUMP JUMPDEST PUSH2 0x1655 DUP2 DUP6 PUSH2 0x1613 JUMP JUMPDEST SWAP4 POP PUSH2 0x1665 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1623 JUMP JUMPDEST PUSH2 0x166E DUP2 PUSH2 0x1631 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1691 DUP2 DUP5 PUSH2 0x1641 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x16A6 DUP2 PUSH2 0x15D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x16B0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16C1 DUP2 PUSH2 0x169D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16DC JUMPI PUSH2 0x16DB PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16E9 DUP5 DUP3 DUP6 ADD PUSH2 0x16B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x171B DUP3 PUSH2 0x16F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x172B DUP2 PUSH2 0x1711 JUMP JUMPDEST DUP2 EQ PUSH2 0x1735 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1746 DUP2 PUSH2 0x1722 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1762 JUMPI PUSH2 0x1761 PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x176F DUP6 DUP3 DUP7 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1780 DUP6 DUP3 DUP7 ADD PUSH2 0x16B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x179E DUP2 PUSH2 0x178A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17B7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1795 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17D4 JUMPI PUSH2 0x17D3 PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17E1 DUP7 DUP3 DUP8 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x17F2 DUP7 DUP3 DUP8 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1803 DUP7 DUP3 DUP8 ADD PUSH2 0x16B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1822 DUP2 PUSH2 0x180D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x183B PUSH0 DUP4 ADD DUP5 PUSH2 0x1819 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x184A DUP2 PUSH2 0x1711 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1863 PUSH0 DUP4 ADD DUP5 PUSH2 0x1841 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x187E JUMPI PUSH2 0x187D PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x188B DUP5 DUP3 DUP6 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18AA JUMPI PUSH2 0x18A9 PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18B7 DUP6 DUP3 DUP7 ADD PUSH2 0x16B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18C8 DUP6 DUP3 DUP7 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18E9 JUMPI PUSH2 0x18E8 PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18F6 DUP7 DUP3 DUP8 ADD PUSH2 0x16B3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1907 DUP7 DUP3 DUP8 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1918 DUP7 DUP3 DUP8 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1938 JUMPI PUSH2 0x1937 PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1945 DUP6 DUP3 DUP7 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1956 DUP6 DUP3 DUP7 ADD PUSH2 0x1738 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x196E DUP2 PUSH2 0x169D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1989 JUMPI PUSH2 0x1988 PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1996 DUP5 DUP3 DUP6 ADD PUSH2 0x1960 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x19E3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x19F6 JUMPI PUSH2 0x19F5 PUSH2 0x199F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A33 DUP3 PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A3E DUP4 PUSH2 0x15D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1A4C DUP2 PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1A63 JUMPI PUSH2 0x1A62 PUSH2 0x19FC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1AA1 DUP3 PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AAC DUP4 PUSH2 0x15D8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1ABC JUMPI PUSH2 0x1ABB PUSH2 0x1A6A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1ADA PUSH0 DUP4 ADD DUP7 PUSH2 0x1841 JUMP JUMPDEST PUSH2 0x1AE7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1841 JUMP JUMPDEST PUSH2 0x1AF4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1B05 DUP2 PUSH2 0x178A JUMP JUMPDEST DUP2 EQ PUSH2 0x1B0F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B20 DUP2 PUSH2 0x1AFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B3B JUMPI PUSH2 0x1B3A PUSH2 0x1699 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B48 DUP5 DUP3 DUP6 ADD PUSH2 0x1B12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B64 PUSH0 DUP4 ADD DUP6 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x1B71 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B8B PUSH0 DUP4 ADD DUP6 PUSH2 0x1841 JUMP JUMPDEST PUSH2 0x1B98 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1BB2 PUSH0 DUP4 ADD DUP7 PUSH2 0x1841 JUMP JUMPDEST PUSH2 0x1BBF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0x1BCC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15E1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BDE DUP3 PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE9 DUP4 PUSH2 0x15D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C01 JUMPI PUSH2 0x1C00 PUSH2 0x19FC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 EXP PUSH28 0xF830422D1C8298F70788475340D164E43316CB89801D1A956B6B3A60 BYTE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "219:5601:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3322:161;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3989:333:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4786:140:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;526:103:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5211:108;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4993:138;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;685:515;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1274:467:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3296:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4596:122:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1755:755;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2624:646;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5360:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3538:333;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5525:131;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5706:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4390:139:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3322:161;3374:7;3445:6;:16;;;3470:4;3445:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3438:38;;3322:161;:::o;1760:89:2:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3989:333:6:-;4073:7;4092:14;4109:13;:11;:13::i;:::-;4092:30;;4269:1;4259:6;:11;:56;;4309:6;4292:13;:11;:13::i;:::-;4283:6;:22;;;;:::i;:::-;4282:33;;;;:::i;:::-;4259:56;;;4273:6;4259:56;4252:63;;;3989:333;;;:::o;3979:186:2:-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;4786:140:6:-;4870:7;4896:23;4912:6;4896:15;:23::i;:::-;4889:30;;4786:140;;;:::o;2830:97:2:-;2882:7;2908:12;;2901:19;;2830:97;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;526:103:6:-;581:7;615:6;600:22;;526:103;:::o;5211:108::-;5269:7;5295:17;5288:24;;5211:108;;;:::o;4993:138::-;5075:7;5101:23;5117:6;5101:15;:23::i;:::-;5094:30;;4993:138;;;:::o;685:515::-;782:14;931:22;946:6;931:14;:22::i;:::-;922:31;;1012:6;:19;;;1032:10;1052:4;1059:6;1012:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1076:23;1082:8;1092:6;1076:5;:23::i;:::-;1168:8;1148:45;;1156:10;1148:45;;;1178:6;1186;1148:45;;;;;;;:::i;:::-;;;;;;;;685:515;;;;:::o;2985:116:2:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;1274:467:6:-;1368:14;1475:19;1487:6;1475:11;:19::i;:::-;1466:28;;1553:6;:19;;;1573:10;1593:4;1600:6;1553:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1617:23;1623:8;1633:6;1617:5;:23::i;:::-;1709:8;1689:45;;1697:10;1689:45;;;1719:6;1727;1689:45;;;;;;;:::i;:::-;;;;;;;;1274:467;;;;:::o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3296:178::-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;4596:122:6:-;4662:7;4688:23;4704:6;4688:15;:23::i;:::-;4681:30;;4596:122;;;:::o;1755:755::-;1876:14;1978:23;1994:6;1978:15;:23::i;:::-;1969:32;;2096:5;2082:19;;:10;:19;;;2078:92;;2117:42;2133:5;2140:10;2152:6;2117:15;:42::i;:::-;2078:92;2265:20;2271:5;2278:6;2265:5;:20::i;:::-;2367:6;:15;;;2383:8;2393:6;2367:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2481:5;2450:53;;2471:8;2450:53;;2459:10;2450:53;;;2488:6;2496;2450:53;;;;;;;:::i;:::-;;;;;;;;1755:755;;;;;:::o;2624:646::-;2743:14;2849:21;2863:6;2849:13;:21::i;:::-;2840:30;;2965:5;2951:19;;:10;:19;;;2947:92;;2986:42;3002:5;3009:10;3021:6;2986:15;:42::i;:::-;2947:92;3097:20;3103:5;3110:6;3097:5;:20::i;:::-;3127:6;:15;;;3143:8;3153:6;3127:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3241:5;3210:53;;3231:8;3210:53;;3219:10;3210:53;;;3248:6;3256;3210:53;;;;;;;:::i;:::-;;;;;;;;2624:646;;;;;:::o;5360:105::-;5415:7;5441:17;5434:24;;5360:105;;;:::o;3538:333::-;3622:7;3641:14;3658:13;:11;:13::i;:::-;3641:30;;3818:1;3808:6;:11;:56;;3851:13;:11;:13::i;:::-;3841:6;3832;:15;;;;:::i;:::-;3831:33;;;;:::i;:::-;3808:56;;;3822:6;3808:56;3801:63;;;3538:333;;;:::o;5525:131::-;5590:7;5616:33;5632:16;5642:5;5632:9;:16::i;:::-;5616:15;:33::i;:::-;5609:40;;5525:131;;;:::o;5706:112::-;5769:7;5795:16;5805:5;5795:9;:16::i;:::-;5788:23;;5706:112;;;:::o;3532:140:2:-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;4390:139:6:-;4473:7;4499:23;4515:6;4499:15;:23::i;:::-;4492:30;;4390:139;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8707:128:2:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;7439:208::-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;7965:206::-;8054:1;8035:21;;:7;:21;;;8031:89;;8106:1;8079:30;;;;;;;;;;;:::i;:::-;;;;;;;;8031:89;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;:::-;7965:206;;:::o;9682:432::-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:77:7:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:99::-;494:6;528:5;522:12;512:22;;442:99;;;:::o;547:169::-;631:11;665:6;660:3;653:19;705:4;700:3;696:14;681:29;;547:169;;;;:::o;722:139::-;811:6;806:3;801;795:23;852:1;843:6;838:3;834:16;827:27;722:139;;;:::o;867:102::-;908:6;959:2;955:7;950:2;943:5;939:14;935:28;925:38;;867:102;;;:::o;975:377::-;1063:3;1091:39;1124:5;1091:39;:::i;:::-;1146:71;1210:6;1205:3;1146:71;:::i;:::-;1139:78;;1226:65;1284:6;1279:3;1272:4;1265:5;1261:16;1226:65;:::i;:::-;1316:29;1338:6;1316:29;:::i;:::-;1311:3;1307:39;1300:46;;1067:285;975:377;;;;:::o;1358:313::-;1471:4;1509:2;1498:9;1494:18;1486:26;;1558:9;1552:4;1548:20;1544:1;1533:9;1529:17;1522:47;1586:78;1659:4;1650:6;1586:78;:::i;:::-;1578:86;;1358:313;;;;:::o;1758:117::-;1867:1;1864;1857:12;2004:122;2077:24;2095:5;2077:24;:::i;:::-;2070:5;2067:35;2057:63;;2116:1;2113;2106:12;2057:63;2004:122;:::o;2132:139::-;2178:5;2216:6;2203:20;2194:29;;2232:33;2259:5;2232:33;:::i;:::-;2132:139;;;;:::o;2277:329::-;2336:6;2385:2;2373:9;2364:7;2360:23;2356:32;2353:119;;;2391:79;;:::i;:::-;2353:119;2511:1;2536:53;2581:7;2572:6;2561:9;2557:22;2536:53;:::i;:::-;2526:63;;2482:117;2277:329;;;;:::o;2612:126::-;2649:7;2689:42;2682:5;2678:54;2667:65;;2612:126;;;:::o;2744:96::-;2781:7;2810:24;2828:5;2810:24;:::i;:::-;2799:35;;2744:96;;;:::o;2846:122::-;2919:24;2937:5;2919:24;:::i;:::-;2912:5;2909:35;2899:63;;2958:1;2955;2948:12;2899:63;2846:122;:::o;2974:139::-;3020:5;3058:6;3045:20;3036:29;;3074:33;3101:5;3074:33;:::i;:::-;2974:139;;;;:::o;3119:474::-;3187:6;3195;3244:2;3232:9;3223:7;3219:23;3215:32;3212:119;;;3250:79;;:::i;:::-;3212:119;3370:1;3395:53;3440:7;3431:6;3420:9;3416:22;3395:53;:::i;:::-;3385:63;;3341:117;3497:2;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3468:118;3119:474;;;;;:::o;3599:90::-;3633:7;3676:5;3669:13;3662:21;3651:32;;3599:90;;;:::o;3695:109::-;3776:21;3791:5;3776:21;:::i;:::-;3771:3;3764:34;3695:109;;:::o;3810:210::-;3897:4;3935:2;3924:9;3920:18;3912:26;;3948:65;4010:1;3999:9;3995:17;3986:6;3948:65;:::i;:::-;3810:210;;;;:::o;4026:619::-;4103:6;4111;4119;4168:2;4156:9;4147:7;4143:23;4139:32;4136:119;;;4174:79;;:::i;:::-;4136:119;4294:1;4319:53;4364:7;4355:6;4344:9;4340:22;4319:53;:::i;:::-;4309:63;;4265:117;4421:2;4447:53;4492:7;4483:6;4472:9;4468:22;4447:53;:::i;:::-;4437:63;;4392:118;4549:2;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4520:118;4026:619;;;;;:::o;4651:86::-;4686:7;4726:4;4719:5;4715:16;4704:27;;4651:86;;;:::o;4743:112::-;4826:22;4842:5;4826:22;:::i;:::-;4821:3;4814:35;4743:112;;:::o;4861:214::-;4950:4;4988:2;4977:9;4973:18;4965:26;;5001:67;5065:1;5054:9;5050:17;5041:6;5001:67;:::i;:::-;4861:214;;;;:::o;5081:118::-;5168:24;5186:5;5168:24;:::i;:::-;5163:3;5156:37;5081:118;;:::o;5205:222::-;5298:4;5336:2;5325:9;5321:18;5313:26;;5349:71;5417:1;5406:9;5402:17;5393:6;5349:71;:::i;:::-;5205:222;;;;:::o;5433:329::-;5492:6;5541:2;5529:9;5520:7;5516:23;5512:32;5509:119;;;5547:79;;:::i;:::-;5509:119;5667:1;5692:53;5737:7;5728:6;5717:9;5713:22;5692:53;:::i;:::-;5682:63;;5638:117;5433:329;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:619::-;6325:6;6333;6341;6390:2;6378:9;6369:7;6365:23;6361:32;6358:119;;;6396:79;;:::i;:::-;6358:119;6516:1;6541:53;6586:7;6577:6;6566:9;6562:22;6541:53;:::i;:::-;6531:63;;6487:117;6643:2;6669:53;6714:7;6705:6;6694:9;6690:22;6669:53;:::i;:::-;6659:63;;6614:118;6771:2;6797:53;6842:7;6833:6;6822:9;6818:22;6797:53;:::i;:::-;6787:63;;6742:118;6248:619;;;;;:::o;6873:474::-;6941:6;6949;6998:2;6986:9;6977:7;6973:23;6969:32;6966:119;;;7004:79;;:::i;:::-;6966:119;7124:1;7149:53;7194:7;7185:6;7174:9;7170:22;7149:53;:::i;:::-;7139:63;;7095:117;7251:2;7277:53;7322:7;7313:6;7302:9;7298:22;7277:53;:::i;:::-;7267:63;;7222:118;6873:474;;;;;:::o;7353:143::-;7410:5;7441:6;7435:13;7426:22;;7457:33;7484:5;7457:33;:::i;:::-;7353:143;;;;:::o;7502:351::-;7572:6;7621:2;7609:9;7600:7;7596:23;7592:32;7589:119;;;7627:79;;:::i;:::-;7589:119;7747:1;7772:64;7828:7;7819:6;7808:9;7804:22;7772:64;:::i;:::-;7762:74;;7718:128;7502:351;;;;:::o;7859:180::-;7907:77;7904:1;7897:88;8004:4;8001:1;7994:15;8028:4;8025:1;8018:15;8045:320;8089:6;8126:1;8120:4;8116:12;8106:22;;8173:1;8167:4;8163:12;8194:18;8184:81;;8250:4;8242:6;8238:17;8228:27;;8184:81;8312:2;8304:6;8301:14;8281:18;8278:38;8275:84;;8331:18;;:::i;:::-;8275:84;8096:269;8045:320;;;:::o;8371:180::-;8419:77;8416:1;8409:88;8516:4;8513:1;8506:15;8540:4;8537:1;8530:15;8557:410;8597:7;8620:20;8638:1;8620:20;:::i;:::-;8615:25;;8654:20;8672:1;8654:20;:::i;:::-;8649:25;;8709:1;8706;8702:9;8731:30;8749:11;8731:30;:::i;:::-;8720:41;;8910:1;8901:7;8897:15;8894:1;8891:22;8871:1;8864:9;8844:83;8821:139;;8940:18;;:::i;:::-;8821:139;8605:362;8557:410;;;;:::o;8973:180::-;9021:77;9018:1;9011:88;9118:4;9115:1;9108:15;9142:4;9139:1;9132:15;9159:185;9199:1;9216:20;9234:1;9216:20;:::i;:::-;9211:25;;9250:20;9268:1;9250:20;:::i;:::-;9245:25;;9289:1;9279:35;;9294:18;;:::i;:::-;9279:35;9336:1;9333;9329:9;9324:14;;9159:185;;;;:::o;9350:442::-;9499:4;9537:2;9526:9;9522:18;9514:26;;9550:71;9618:1;9607:9;9603:17;9594:6;9550:71;:::i;:::-;9631:72;9699:2;9688:9;9684:18;9675:6;9631:72;:::i;:::-;9713;9781:2;9770:9;9766:18;9757:6;9713:72;:::i;:::-;9350:442;;;;;;:::o;9798:116::-;9868:21;9883:5;9868:21;:::i;:::-;9861:5;9858:32;9848:60;;9904:1;9901;9894:12;9848:60;9798:116;:::o;9920:137::-;9974:5;10005:6;9999:13;9990:22;;10021:30;10045:5;10021:30;:::i;:::-;9920:137;;;;:::o;10063:345::-;10130:6;10179:2;10167:9;10158:7;10154:23;10150:32;10147:119;;;10185:79;;:::i;:::-;10147:119;10305:1;10330:61;10383:7;10374:6;10363:9;10359:22;10330:61;:::i;:::-;10320:71;;10276:125;10063:345;;;;:::o;10414:332::-;10535:4;10573:2;10562:9;10558:18;10550:26;;10586:71;10654:1;10643:9;10639:17;10630:6;10586:71;:::i;:::-;10667:72;10735:2;10724:9;10720:18;10711:6;10667:72;:::i;:::-;10414:332;;;;;:::o;10752:::-;10873:4;10911:2;10900:9;10896:18;10888:26;;10924:71;10992:1;10981:9;10977:17;10968:6;10924:71;:::i;:::-;11005:72;11073:2;11062:9;11058:18;11049:6;11005:72;:::i;:::-;10752:332;;;;;:::o;11090:442::-;11239:4;11277:2;11266:9;11262:18;11254:26;;11290:71;11358:1;11347:9;11343:17;11334:6;11290:71;:::i;:::-;11371:72;11439:2;11428:9;11424:18;11415:6;11371:72;:::i;:::-;11453;11521:2;11510:9;11506:18;11497:6;11453:72;:::i;:::-;11090:442;;;;;;:::o;11538:191::-;11578:3;11597:20;11615:1;11597:20;:::i;:::-;11592:25;;11631:20;11649:1;11631:20;:::i;:::-;11626:25;;11674:1;11671;11667:9;11660:16;;11695:3;11692:1;11689:10;11686:36;;;11702:18;;:::i;:::-;11686:36;11538:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1445800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"asset()": "infinite",
								"balanceOf(address)": "2851",
								"convertToAssets(uint256)": "infinite",
								"convertToShares(uint256)": "infinite",
								"decimals()": "383",
								"deposit(uint256,address)": "infinite",
								"maxDeposit(address)": "730",
								"maxMint(address)": "708",
								"maxRedeem(address)": "2936",
								"maxWithdraw(address)": "infinite",
								"mint(uint256,address)": "infinite",
								"name()": "infinite",
								"previewDeposit(uint256)": "infinite",
								"previewMint(uint256)": "infinite",
								"previewRedeem(uint256)": "infinite",
								"previewWithdraw(uint256)": "infinite",
								"redeem(uint256,address,address)": "infinite",
								"symbol()": "infinite",
								"totalAssets()": "infinite",
								"totalSupply()": "2566",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"withdraw(uint256,address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 219,
									"end": 5820,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 219,
									"end": 5820,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 219,
									"end": 5820,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 332,
									"end": 486,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 332,
									"end": 486,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 332,
									"end": 486,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 332,
									"end": 486,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 332,
									"end": 486,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 332,
									"end": 486,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 332,
									"end": 486,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 332,
									"end": 486,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 332,
									"end": 486,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 438,
									"end": 443,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 445,
									"end": 452,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 473,
									"end": 479,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 464,
									"end": 479,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 464,
									"end": 479,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 464,
									"end": 479,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 464,
									"end": 479,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 464,
									"end": 479,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 464,
									"end": 479,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 464,
									"end": 479,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 464,
									"end": 479,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 464,
									"end": 479,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 464,
									"end": 479,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 332,
									"end": 486,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 219,
									"end": 5820,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 219,
									"end": 5820,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 677,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 568,
									"end": 677,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 618,
									"end": 625,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 665,
									"end": 670,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 647,
									"end": 671,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 647,
									"end": 671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 647,
									"end": 671,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 647,
									"end": 671,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 636,
									"end": 671,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 636,
									"end": 671,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 677,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 568,
									"end": 677,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 568,
									"end": 677,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 677,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 683,
									"end": 831,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 683,
									"end": 831,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 769,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 800,
									"end": 805,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 769,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 769,
									"end": 806,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 769,
									"end": 806,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 769,
									"end": 806,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 762,
									"end": 767,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 759,
									"end": 807,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 749,
									"end": 825,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 749,
									"end": 825,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 821,
									"end": 822,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 818,
									"end": 819,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 811,
									"end": 823,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 749,
									"end": 825,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 749,
									"end": 825,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 683,
									"end": 831,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 683,
									"end": 831,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 907,
									"end": 912,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 938,
									"end": 944,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 932,
									"end": 945,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 923,
									"end": 945,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 923,
									"end": 945,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 954,
									"end": 1000,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 954,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 837,
									"end": 1006,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 837,
									"end": 1006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1012,
									"end": 1129,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1012,
									"end": 1129,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1121,
									"end": 1122,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1118,
									"end": 1119,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1111,
									"end": 1123,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1135,
									"end": 1252,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1135,
									"end": 1252,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1244,
									"end": 1245,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1241,
									"end": 1242,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1234,
									"end": 1246,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1258,
									"end": 1360,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1258,
									"end": 1360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1299,
									"end": 1305,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1350,
									"end": 1352,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1346,
									"end": 1353,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1334,
									"end": 1339,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1330,
									"end": 1344,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1354,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1316,
									"end": 1354,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1316,
									"end": 1354,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1258,
									"end": 1360,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1258,
									"end": 1360,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1258,
									"end": 1360,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1258,
									"end": 1360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1366,
									"end": 1546,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1366,
									"end": 1546,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1414,
									"end": 1491,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1411,
									"end": 1412,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1404,
									"end": 1492,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1511,
									"end": 1515,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1501,
									"end": 1516,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1535,
									"end": 1539,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1532,
									"end": 1533,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1525,
									"end": 1540,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1833,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1552,
									"end": 1833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1635,
									"end": 1662,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 1657,
									"end": 1661,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1635,
									"end": 1662,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1662,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1635,
									"end": 1662,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 1635,
									"end": 1662,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1627,
									"end": 1633,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1663,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1765,
									"end": 1771,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1753,
									"end": 1763,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1750,
									"end": 1772,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1717,
									"end": 1727,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1714,
									"end": 1748,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1711,
									"end": 1773,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1708,
									"end": 1796,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1708,
									"end": 1796,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 1708,
									"end": 1796,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1776,
									"end": 1794,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 1776,
									"end": 1794,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1776,
									"end": 1794,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1776,
									"end": 1794,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 1776,
									"end": 1794,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1708,
									"end": 1796,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 1708,
									"end": 1796,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1816,
									"end": 1826,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1812,
									"end": 1814,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1805,
									"end": 1827,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1595,
									"end": 1833,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1833,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1833,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1552,
									"end": 1833,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1839,
									"end": 1968,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 1839,
									"end": 1968,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1873,
									"end": 1879,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1900,
									"end": 1920,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 1900,
									"end": 1920,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1900,
									"end": 1920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1900,
									"end": 1920,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 1900,
									"end": 1920,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1890,
									"end": 1920,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1890,
									"end": 1920,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1929,
									"end": 1962,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1957,
									"end": 1961,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1949,
									"end": 1955,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1929,
									"end": 1962,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1929,
									"end": 1962,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1929,
									"end": 1962,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1929,
									"end": 1962,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1839,
									"end": 1968,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1839,
									"end": 1968,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1839,
									"end": 1968,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1839,
									"end": 1968,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 2282,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 1974,
									"end": 2282,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2036,
									"end": 2040,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2126,
									"end": 2144,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2118,
									"end": 2124,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2115,
									"end": 2145,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2112,
									"end": 2168,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2112,
									"end": 2168,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 2112,
									"end": 2168,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2148,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2148,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 2148,
									"end": 2166,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2148,
									"end": 2166,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2148,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2112,
									"end": 2168,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 2112,
									"end": 2168,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2186,
									"end": 2215,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2208,
									"end": 2214,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2186,
									"end": 2215,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2186,
									"end": 2215,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2186,
									"end": 2215,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2186,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2178,
									"end": 2215,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2178,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2270,
									"end": 2274,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2264,
									"end": 2268,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2260,
									"end": 2275,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2252,
									"end": 2275,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2252,
									"end": 2275,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 2282,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 2282,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 2282,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 2282,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2288,
									"end": 2427,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 2288,
									"end": 2427,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2383,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2372,
									"end": 2375,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2367,
									"end": 2370,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2361,
									"end": 2384,
									"name": "MCOPY",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2419,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2409,
									"end": 2415,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2404,
									"end": 2407,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2400,
									"end": 2416,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2393,
									"end": 2420,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2288,
									"end": 2427,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2288,
									"end": 2427,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2288,
									"end": 2427,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2288,
									"end": 2427,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2433,
									"end": 2867,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 2433,
									"end": 2867,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2522,
									"end": 2527,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2547,
									"end": 2613,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2563,
									"end": 2612,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 2605,
									"end": 2611,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2563,
									"end": 2612,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 2563,
									"end": 2612,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2563,
									"end": 2612,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 2563,
									"end": 2612,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2547,
									"end": 2613,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 2547,
									"end": 2613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2547,
									"end": 2613,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2547,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2538,
									"end": 2613,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2538,
									"end": 2613,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2636,
									"end": 2642,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2629,
									"end": 2634,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2622,
									"end": 2643,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2678,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2667,
									"end": 2672,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2663,
									"end": 2679,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2712,
									"end": 2715,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2703,
									"end": 2709,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2698,
									"end": 2701,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2694,
									"end": 2710,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2691,
									"end": 2716,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2688,
									"end": 2800,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2688,
									"end": 2800,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 2688,
									"end": 2800,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2719,
									"end": 2798,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 2719,
									"end": 2798,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 2719,
									"end": 2798,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2719,
									"end": 2798,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 2719,
									"end": 2798,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2688,
									"end": 2800,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 2688,
									"end": 2800,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2809,
									"end": 2861,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2854,
									"end": 2860,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2849,
									"end": 2852,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2844,
									"end": 2847,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2809,
									"end": 2861,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 2809,
									"end": 2861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2809,
									"end": 2861,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2809,
									"end": 2861,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2528,
									"end": 2867,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2433,
									"end": 2867,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2433,
									"end": 2867,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2433,
									"end": 2867,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2433,
									"end": 2867,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2433,
									"end": 2867,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2433,
									"end": 2867,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2887,
									"end": 3242,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 2887,
									"end": 3242,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2954,
									"end": 2959,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3003,
									"end": 3006,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2996,
									"end": 3000,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2988,
									"end": 2994,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2984,
									"end": 3001,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2980,
									"end": 3007,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 2970,
									"end": 3092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 2970,
									"end": 3092,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3011,
									"end": 3090,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3011,
									"end": 3090,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3011,
									"end": 3090,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3011,
									"end": 3090,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3011,
									"end": 3090,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2970,
									"end": 3092,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 2970,
									"end": 3092,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3121,
									"end": 3127,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3115,
									"end": 3128,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3146,
									"end": 3236,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3232,
									"end": 3235,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3224,
									"end": 3230,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3217,
									"end": 3221,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3209,
									"end": 3215,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3205,
									"end": 3222,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3146,
									"end": 3236,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 3146,
									"end": 3236,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3146,
									"end": 3236,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3146,
									"end": 3236,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3137,
									"end": 3236,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3137,
									"end": 3236,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2960,
									"end": 3242,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2887,
									"end": 3242,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2887,
									"end": 3242,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2887,
									"end": 3242,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2887,
									"end": 3242,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2887,
									"end": 3242,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3248,
									"end": 4283,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3248,
									"end": 4283,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3369,
									"end": 3375,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3377,
									"end": 3383,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3385,
									"end": 3391,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3434,
									"end": 3436,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3422,
									"end": 3431,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3413,
									"end": 3420,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3409,
									"end": 3432,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3405,
									"end": 3437,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 3402,
									"end": 3521,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3402,
									"end": 3521,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 3402,
									"end": 3521,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3440,
									"end": 3519,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 3440,
									"end": 3519,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 3440,
									"end": 3519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3440,
									"end": 3519,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 3440,
									"end": 3519,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3402,
									"end": 3521,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 3402,
									"end": 3521,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3560,
									"end": 3561,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3585,
									"end": 3662,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 3654,
									"end": 3661,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3645,
									"end": 3651,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3634,
									"end": 3643,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3630,
									"end": 3652,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3585,
									"end": 3662,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 3585,
									"end": 3662,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3585,
									"end": 3662,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 3585,
									"end": 3662,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3575,
									"end": 3662,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3575,
									"end": 3662,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3531,
									"end": 3672,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3732,
									"end": 3734,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3721,
									"end": 3730,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3717,
									"end": 3735,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3711,
									"end": 3736,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3763,
									"end": 3781,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3755,
									"end": 3761,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3752,
									"end": 3782,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3749,
									"end": 3866,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3749,
									"end": 3866,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 3749,
									"end": 3866,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3785,
									"end": 3864,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 3785,
									"end": 3864,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 3785,
									"end": 3864,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3785,
									"end": 3864,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 3785,
									"end": 3864,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3749,
									"end": 3866,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 3749,
									"end": 3866,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3890,
									"end": 3964,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 3956,
									"end": 3963,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3947,
									"end": 3953,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3936,
									"end": 3945,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3932,
									"end": 3954,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3890,
									"end": 3964,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 3890,
									"end": 3964,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3890,
									"end": 3964,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 3890,
									"end": 3964,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3880,
									"end": 3964,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3880,
									"end": 3964,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3682,
									"end": 3974,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4034,
									"end": 4036,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4023,
									"end": 4032,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4019,
									"end": 4037,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4013,
									"end": 4038,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4065,
									"end": 4083,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4057,
									"end": 4063,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4054,
									"end": 4084,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4051,
									"end": 4168,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4051,
									"end": 4168,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 4051,
									"end": 4168,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4087,
									"end": 4166,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 4087,
									"end": 4166,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 4087,
									"end": 4166,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4087,
									"end": 4166,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 4087,
									"end": 4166,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4051,
									"end": 4168,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 4051,
									"end": 4168,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4192,
									"end": 4266,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 4258,
									"end": 4265,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4249,
									"end": 4255,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4238,
									"end": 4247,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 4234,
									"end": 4256,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4192,
									"end": 4266,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 4192,
									"end": 4266,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4192,
									"end": 4266,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 4192,
									"end": 4266,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4182,
									"end": 4266,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4182,
									"end": 4266,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3984,
									"end": 4276,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3248,
									"end": 4283,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3248,
									"end": 4283,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3248,
									"end": 4283,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3248,
									"end": 4283,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3248,
									"end": 4283,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3248,
									"end": 4283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4289,
									"end": 4388,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 4289,
									"end": 4388,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4341,
									"end": 4347,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4375,
									"end": 4380,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4369,
									"end": 4381,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4359,
									"end": 4381,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4359,
									"end": 4381,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4289,
									"end": 4388,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4289,
									"end": 4388,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4289,
									"end": 4388,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4289,
									"end": 4388,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4394,
									"end": 4574,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 4394,
									"end": 4574,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4442,
									"end": 4519,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4439,
									"end": 4440,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4432,
									"end": 4520,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4539,
									"end": 4543,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 4536,
									"end": 4537,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4529,
									"end": 4544,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4563,
									"end": 4567,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4560,
									"end": 4561,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4553,
									"end": 4568,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4580,
									"end": 4900,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 4580,
									"end": 4900,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4624,
									"end": 4630,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4661,
									"end": 4662,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4655,
									"end": 4659,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4651,
									"end": 4663,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 4641,
									"end": 4663,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4641,
									"end": 4663,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4708,
									"end": 4709,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4702,
									"end": 4706,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4698,
									"end": 4710,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4729,
									"end": 4747,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4719,
									"end": 4800,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 4719,
									"end": 4800,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4785,
									"end": 4789,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 4777,
									"end": 4783,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4773,
									"end": 4790,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4763,
									"end": 4790,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4763,
									"end": 4790,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4719,
									"end": 4800,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 4719,
									"end": 4800,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4847,
									"end": 4849,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4839,
									"end": 4845,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4836,
									"end": 4850,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4816,
									"end": 4834,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4813,
									"end": 4851,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4810,
									"end": 4894,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 4810,
									"end": 4894,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 4884,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 4866,
									"end": 4884,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 4866,
									"end": 4884,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 4884,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 4866,
									"end": 4884,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4810,
									"end": 4894,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 4810,
									"end": 4894,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4631,
									"end": 4900,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4580,
									"end": 4900,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4580,
									"end": 4900,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4580,
									"end": 4900,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4580,
									"end": 4900,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4906,
									"end": 5047,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 4906,
									"end": 5047,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4955,
									"end": 4959,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4978,
									"end": 4981,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4970,
									"end": 4981,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4970,
									"end": 4981,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5001,
									"end": 5004,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4998,
									"end": 4999,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4991,
									"end": 5005,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5035,
									"end": 5039,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5032,
									"end": 5033,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5022,
									"end": 5040,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 5014,
									"end": 5040,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5014,
									"end": 5040,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4906,
									"end": 5047,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4906,
									"end": 5047,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4906,
									"end": 5047,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4906,
									"end": 5047,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5053,
									"end": 5146,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 5053,
									"end": 5146,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5090,
									"end": 5096,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5137,
									"end": 5139,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5132,
									"end": 5134,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5125,
									"end": 5130,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5121,
									"end": 5135,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5117,
									"end": 5140,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 5107,
									"end": 5140,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5107,
									"end": 5140,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5053,
									"end": 5146,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5053,
									"end": 5146,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5053,
									"end": 5146,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5053,
									"end": 5146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5152,
									"end": 5259,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 5152,
									"end": 5259,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5196,
									"end": 5204,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5246,
									"end": 5251,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5240,
									"end": 5244,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5236,
									"end": 5252,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 5215,
									"end": 5252,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5215,
									"end": 5252,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5152,
									"end": 5259,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5152,
									"end": 5259,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5152,
									"end": 5259,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5152,
									"end": 5259,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5152,
									"end": 5259,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5265,
									"end": 5658,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 5265,
									"end": 5658,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5334,
									"end": 5340,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5384,
									"end": 5385,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 5372,
									"end": 5382,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5368,
									"end": 5386,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5407,
									"end": 5504,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 5437,
									"end": 5503,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5426,
									"end": 5435,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5407,
									"end": 5504,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 5407,
									"end": 5504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5407,
									"end": 5504,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 5407,
									"end": 5504,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5525,
									"end": 5564,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 5555,
									"end": 5563,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5544,
									"end": 5553,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5525,
									"end": 5564,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 5525,
									"end": 5564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5525,
									"end": 5564,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 5525,
									"end": 5564,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5513,
									"end": 5564,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 5513,
									"end": 5564,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5597,
									"end": 5601,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5593,
									"end": 5602,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5586,
									"end": 5591,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5582,
									"end": 5603,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5573,
									"end": 5603,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5573,
									"end": 5603,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5646,
									"end": 5650,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5636,
									"end": 5644,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5632,
									"end": 5651,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5625,
									"end": 5630,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5622,
									"end": 5652,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5612,
									"end": 5652,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5612,
									"end": 5652,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5341,
									"end": 5658,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5341,
									"end": 5658,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5265,
									"end": 5658,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5265,
									"end": 5658,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5265,
									"end": 5658,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5265,
									"end": 5658,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5265,
									"end": 5658,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5265,
									"end": 5658,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5664,
									"end": 5741,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 5664,
									"end": 5741,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5701,
									"end": 5708,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5730,
									"end": 5735,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5719,
									"end": 5735,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5719,
									"end": 5735,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5664,
									"end": 5741,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5664,
									"end": 5741,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5664,
									"end": 5741,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5664,
									"end": 5741,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5747,
									"end": 5807,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 5747,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5775,
									"end": 5778,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5796,
									"end": 5801,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5789,
									"end": 5801,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5789,
									"end": 5801,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5747,
									"end": 5807,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5747,
									"end": 5807,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5747,
									"end": 5807,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5747,
									"end": 5807,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5813,
									"end": 5955,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 5813,
									"end": 5955,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5863,
									"end": 5872,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5896,
									"end": 5949,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 5914,
									"end": 5948,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 5923,
									"end": 5947,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 5941,
									"end": 5946,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5923,
									"end": 5947,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 5923,
									"end": 5947,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5923,
									"end": 5947,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 5923,
									"end": 5947,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5914,
									"end": 5948,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 5914,
									"end": 5948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5914,
									"end": 5948,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 5914,
									"end": 5948,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5896,
									"end": 5949,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 5896,
									"end": 5949,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5896,
									"end": 5949,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 5896,
									"end": 5949,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5883,
									"end": 5949,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5883,
									"end": 5949,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5813,
									"end": 5955,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5813,
									"end": 5955,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5813,
									"end": 5955,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5813,
									"end": 5955,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5961,
									"end": 6036,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 5961,
									"end": 6036,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6004,
									"end": 6007,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6025,
									"end": 6030,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6018,
									"end": 6030,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6018,
									"end": 6030,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5961,
									"end": 6036,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5961,
									"end": 6036,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5961,
									"end": 6036,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5961,
									"end": 6036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6042,
									"end": 6311,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 6042,
									"end": 6311,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6152,
									"end": 6191,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 6183,
									"end": 6190,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6152,
									"end": 6191,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 6152,
									"end": 6191,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6152,
									"end": 6191,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 6152,
									"end": 6191,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6213,
									"end": 6304,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 6262,
									"end": 6303,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 6286,
									"end": 6302,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6262,
									"end": 6303,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6262,
									"end": 6303,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6262,
									"end": 6303,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 6262,
									"end": 6303,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6254,
									"end": 6260,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6247,
									"end": 6251,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6241,
									"end": 6252,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 6213,
									"end": 6304,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 6213,
									"end": 6304,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6213,
									"end": 6304,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 6213,
									"end": 6304,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6207,
									"end": 6211,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6200,
									"end": 6305,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6118,
									"end": 6311,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6042,
									"end": 6311,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6042,
									"end": 6311,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6042,
									"end": 6311,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6042,
									"end": 6311,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6317,
									"end": 6390,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 6317,
									"end": 6390,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6362,
									"end": 6365,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6383,
									"end": 6384,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6376,
									"end": 6384,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6376,
									"end": 6384,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6317,
									"end": 6390,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6317,
									"end": 6390,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6396,
									"end": 6585,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 6396,
									"end": 6585,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6473,
									"end": 6505,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 6473,
									"end": 6505,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 6473,
									"end": 6505,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6473,
									"end": 6505,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 6473,
									"end": 6505,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6514,
									"end": 6579,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 6572,
									"end": 6578,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6564,
									"end": 6570,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6558,
									"end": 6562,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6514,
									"end": 6579,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 6514,
									"end": 6579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6514,
									"end": 6579,
									"name": "tag",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 6514,
									"end": 6579,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6449,
									"end": 6585,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6396,
									"end": 6585,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6396,
									"end": 6585,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6396,
									"end": 6585,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6591,
									"end": 6777,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 6591,
									"end": 6777,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6771,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 6651,
									"end": 6771,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6668,
									"end": 6671,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6661,
									"end": 6666,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6658,
									"end": 6672,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6771,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6771,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 6651,
									"end": 6771,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6722,
									"end": 6761,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 6759,
									"end": 6760,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6752,
									"end": 6757,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6722,
									"end": 6761,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 6722,
									"end": 6761,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6722,
									"end": 6761,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 6722,
									"end": 6761,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6695,
									"end": 6696,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6688,
									"end": 6693,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6684,
									"end": 6697,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6675,
									"end": 6697,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6675,
									"end": 6697,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6771,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 6651,
									"end": 6771,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6651,
									"end": 6771,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 6651,
									"end": 6771,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6591,
									"end": 6777,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6591,
									"end": 6777,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6591,
									"end": 6777,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6783,
									"end": 7326,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 6783,
									"end": 7326,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6884,
									"end": 6886,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6879,
									"end": 6882,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6876,
									"end": 6887,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6873,
									"end": 7319,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6873,
									"end": 7319,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 6873,
									"end": 7319,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6918,
									"end": 6956,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 6950,
									"end": 6955,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6918,
									"end": 6956,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 6918,
									"end": 6956,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6918,
									"end": 6956,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 6918,
									"end": 6956,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7002,
									"end": 7031,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 7020,
									"end": 7030,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7002,
									"end": 7031,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 7002,
									"end": 7031,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7002,
									"end": 7031,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 7002,
									"end": 7031,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6992,
									"end": 7000,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6988,
									"end": 7032,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7185,
									"end": 7187,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7173,
									"end": 7183,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7170,
									"end": 7188,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7167,
									"end": 7216,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7167,
									"end": 7216,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 7167,
									"end": 7216,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7206,
									"end": 7214,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7191,
									"end": 7214,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7191,
									"end": 7214,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7167,
									"end": 7216,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 7167,
									"end": 7216,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7229,
									"end": 7309,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 7285,
									"end": 7307,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 7303,
									"end": 7306,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7285,
									"end": 7307,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 7285,
									"end": 7307,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7285,
									"end": 7307,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 7285,
									"end": 7307,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7275,
									"end": 7283,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7271,
									"end": 7308,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7258,
									"end": 7269,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7229,
									"end": 7309,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 7229,
									"end": 7309,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7229,
									"end": 7309,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 7229,
									"end": 7309,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6888,
									"end": 7319,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6888,
									"end": 7319,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6873,
									"end": 7319,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 6873,
									"end": 7319,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6783,
									"end": 7326,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6783,
									"end": 7326,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6783,
									"end": 7326,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6783,
									"end": 7326,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7332,
									"end": 7449,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 7332,
									"end": 7449,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7386,
									"end": 7394,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7436,
									"end": 7441,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7430,
									"end": 7434,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7426,
									"end": 7442,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 7405,
									"end": 7442,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7405,
									"end": 7442,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7332,
									"end": 7449,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7332,
									"end": 7449,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7332,
									"end": 7449,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7332,
									"end": 7449,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7332,
									"end": 7449,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7455,
									"end": 7624,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 7455,
									"end": 7624,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7499,
									"end": 7505,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7532,
									"end": 7583,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 7580,
									"end": 7581,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7576,
									"end": 7582,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7568,
									"end": 7573,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7565,
									"end": 7566,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 7561,
									"end": 7574,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7532,
									"end": 7583,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 7532,
									"end": 7583,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7532,
									"end": 7583,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 7532,
									"end": 7583,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7528,
									"end": 7584,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7613,
									"end": 7617,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7607,
									"end": 7611,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7603,
									"end": 7618,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7593,
									"end": 7618,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7593,
									"end": 7618,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7506,
									"end": 7624,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7455,
									"end": 7624,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7455,
									"end": 7624,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7455,
									"end": 7624,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7455,
									"end": 7624,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7455,
									"end": 7624,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7629,
									"end": 7924,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 7629,
									"end": 7924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7705,
									"end": 7709,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7851,
									"end": 7880,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 7876,
									"end": 7879,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7870,
									"end": 7874,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7851,
									"end": 7880,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 7851,
									"end": 7880,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7851,
									"end": 7880,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 7851,
									"end": 7880,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7843,
									"end": 7880,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7843,
									"end": 7880,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7913,
									"end": 7916,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7910,
									"end": 7911,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 7906,
									"end": 7917,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7900,
									"end": 7904,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7897,
									"end": 7918,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 7889,
									"end": 7918,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7889,
									"end": 7918,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7629,
									"end": 7924,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7629,
									"end": 7924,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7629,
									"end": 7924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7629,
									"end": 7924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7629,
									"end": 7924,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7929,
									"end": 9324,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 7929,
									"end": 9324,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8046,
									"end": 8083,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 8079,
									"end": 8082,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8046,
									"end": 8083,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 8046,
									"end": 8083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8046,
									"end": 8083,
									"name": "tag",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 8046,
									"end": 8083,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8148,
									"end": 8166,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8140,
									"end": 8146,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8137,
									"end": 8167,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8134,
									"end": 8190,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8134,
									"end": 8190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 8134,
									"end": 8190,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8170,
									"end": 8188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 8170,
									"end": 8188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 8170,
									"end": 8188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8170,
									"end": 8188,
									"name": "tag",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 8170,
									"end": 8188,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8134,
									"end": 8190,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 8134,
									"end": 8190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8214,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8240,
									"end": 8251,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 8214,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 8214,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8214,
									"end": 8252,
									"name": "tag",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 8214,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8299,
									"end": 8366,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 8359,
									"end": 8365,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8351,
									"end": 8357,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8345,
									"end": 8349,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8299,
									"end": 8366,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 8299,
									"end": 8366,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8299,
									"end": 8366,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 8299,
									"end": 8366,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8393,
									"end": 8394,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8417,
									"end": 8421,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8404,
									"end": 8421,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8404,
									"end": 8421,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8449,
									"end": 8451,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8441,
									"end": 8447,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8438,
									"end": 8452,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8466,
									"end": 8467,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8461,
									"end": 9079,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8461,
									"end": 9079,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 8461,
									"end": 9079,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 8461,
									"end": 9079,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9123,
									"end": 9124,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9140,
									"end": 9146,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9137,
									"end": 9214,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9137,
									"end": 9214,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 9137,
									"end": 9214,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9189,
									"end": 9198,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9184,
									"end": 9187,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 9180,
									"end": 9199,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9174,
									"end": 9200,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 9165,
									"end": 9200,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9165,
									"end": 9200,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9137,
									"end": 9214,
									"name": "tag",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 9137,
									"end": 9214,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9240,
									"end": 9307,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 9300,
									"end": 9306,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9293,
									"end": 9298,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9240,
									"end": 9307,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 9240,
									"end": 9307,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9240,
									"end": 9307,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 9240,
									"end": 9307,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9234,
									"end": 9238,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9227,
									"end": 9308,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 9096,
									"end": 9318,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8431,
									"end": 9318,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 8431,
									"end": 9318,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8461,
									"end": 9079,
									"name": "tag",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 8461,
									"end": 9079,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8513,
									"end": 8517,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8509,
									"end": 8518,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 8501,
									"end": 8507,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8497,
									"end": 8519,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8547,
									"end": 8584,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 8579,
									"end": 8583,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8547,
									"end": 8584,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 8547,
									"end": 8584,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8547,
									"end": 8584,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 8547,
									"end": 8584,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8606,
									"end": 8607,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8620,
									"end": 8828,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 8620,
									"end": 8828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8634,
									"end": 8641,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8631,
									"end": 8632,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8628,
									"end": 8642,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8620,
									"end": 8828,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8620,
									"end": 8828,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 8620,
									"end": 8828,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8713,
									"end": 8722,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8708,
									"end": 8711,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8704,
									"end": 8723,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8698,
									"end": 8724,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8690,
									"end": 8696,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8683,
									"end": 8725,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8764,
									"end": 8765,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8756,
									"end": 8762,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8752,
									"end": 8766,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8742,
									"end": 8766,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8742,
									"end": 8766,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8811,
									"end": 8813,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8800,
									"end": 8809,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8796,
									"end": 8814,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8783,
									"end": 8814,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 8783,
									"end": 8814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8657,
									"end": 8661,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8654,
									"end": 8655,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8650,
									"end": 8662,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8645,
									"end": 8662,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8645,
									"end": 8662,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8620,
									"end": 8828,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 8620,
									"end": 8828,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8620,
									"end": 8828,
									"name": "tag",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 8620,
									"end": 8828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8856,
									"end": 8862,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8847,
									"end": 8854,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8844,
									"end": 8863,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8841,
									"end": 9020,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8841,
									"end": 9020,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 8841,
									"end": 9020,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8914,
									"end": 8923,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8909,
									"end": 8912,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8905,
									"end": 8924,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8899,
									"end": 8925,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8957,
									"end": 9005,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 8999,
									"end": 9003,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8991,
									"end": 8997,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8987,
									"end": 9004,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8976,
									"end": 8985,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8957,
									"end": 9005,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 8957,
									"end": 9005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8957,
									"end": 9005,
									"name": "tag",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 8957,
									"end": 9005,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8949,
									"end": 8955,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8864,
									"end": 9020,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8841,
									"end": 9020,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 8841,
									"end": 9020,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9066,
									"end": 9067,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9062,
									"end": 9063,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 9054,
									"end": 9060,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 9050,
									"end": 9064,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 9046,
									"end": 9068,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9040,
									"end": 9044,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 9033,
									"end": 9069,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8468,
									"end": 9079,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8468,
									"end": 9079,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8468,
									"end": 9079,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8431,
									"end": 9318,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 8431,
									"end": 9318,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8431,
									"end": 9318,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8021,
									"end": 9324,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8021,
									"end": 9324,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8021,
									"end": 9324,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7929,
									"end": 9324,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7929,
									"end": 9324,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7929,
									"end": 9324,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 219,
									"end": 5820,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 219,
									"end": 5820,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 219,
									"end": 5820,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 219,
									"end": 5820,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 219,
									"end": 5820,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 219,
									"end": 5820,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 219,
									"end": 5820,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 219,
									"end": 5820,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 219,
									"end": 5820,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 219,
									"end": 5820,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "969"
								},
								{
									"begin": 219,
									"end": 5820,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 219,
									"end": 5820,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 219,
									"end": 5820,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d90a7bf830422d1c8298f70788475340d164e43316cb89801d1a956b6b3a601a64736f6c634300081c0033",
									".code": [
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "BA087652"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "CE96CB77"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "CE96CB77"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "D905777E"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "EF8B30F7"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "BA087652"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "C63D75B6"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "C6E6F592"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "94BF804D"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "B3D7F6B9"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "B460AF94"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "38D52E0F"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "402D267D"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "4CDAD506"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "6E553F65"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "1E1D114"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "7A2D13A"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "A28A477"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 219,
											"end": 5820,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 3322,
											"end": 3483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 3322,
											"end": 3483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3989,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3989,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 3989,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4786,
											"end": 4926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4786,
											"end": 4926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4786,
											"end": 4926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 526,
											"end": 629,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 526,
											"end": 629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 526,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 526,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 526,
											"end": 629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 526,
											"end": 629,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 526,
											"end": 629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 526,
											"end": 629,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 526,
											"end": 629,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 526,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 526,
											"end": 629,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 526,
											"end": 629,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 526,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 526,
											"end": 629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 526,
											"end": 629,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 526,
											"end": 629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 526,
											"end": 629,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 526,
											"end": 629,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 526,
											"end": 629,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 526,
											"end": 629,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 526,
											"end": 629,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 526,
											"end": 629,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 526,
											"end": 629,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 5211,
											"end": 5319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 5211,
											"end": 5319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 5211,
											"end": 5319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4993,
											"end": 5131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 4993,
											"end": 5131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4993,
											"end": 5131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 685,
											"end": 1200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 685,
											"end": 1200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 685,
											"end": 1200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1274,
											"end": 1741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1274,
											"end": 1741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1274,
											"end": 1741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4596,
											"end": 4718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 4596,
											"end": 4718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4596,
											"end": 4718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1755,
											"end": 2510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1755,
											"end": 2510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1755,
											"end": 2510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2624,
											"end": 3270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2624,
											"end": 3270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2624,
											"end": 3270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 5360,
											"end": 5465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 5360,
											"end": 5465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 5360,
											"end": 5465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3538,
											"end": 3871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3538,
											"end": 3871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 3538,
											"end": 3871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 5525,
											"end": 5656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 5525,
											"end": 5656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 5525,
											"end": 5656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 5706,
											"end": 5818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5706,
											"end": 5818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 5706,
											"end": 5818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4390,
											"end": 4529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 4390,
											"end": 4529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4390,
											"end": 4529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3381,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3451,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "969"
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3461,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 3470,
											"end": 3474,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3445,
											"end": 3476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3445,
											"end": 3476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3445,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3438,
											"end": 3476,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3438,
											"end": 3476,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3483,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3322,
											"end": 3483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4073,
											"end": 4080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4106,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4109,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 4109,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 4109,
											"end": 4122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4109,
											"end": 4122,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 4109,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4092,
											"end": 4122,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4269,
											"end": 4270,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4259,
											"end": 4265,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4259,
											"end": 4270,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4259,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 4259,
											"end": 4315,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4309,
											"end": 4315,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4292,
											"end": 4305,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4292,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 4292,
											"end": 4305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4292,
											"end": 4305,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4292,
											"end": 4305,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4283,
											"end": 4289,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4283,
											"end": 4305,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4283,
											"end": 4305,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4283,
											"end": 4305,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4283,
											"end": 4305,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4283,
											"end": 4305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4283,
											"end": 4305,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4283,
											"end": 4305,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 4282,
											"end": 4315,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 4282,
											"end": 4315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4315,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 4282,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4259,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4259,
											"end": 4315,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4259,
											"end": 4315,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 4259,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4273,
											"end": 4279,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4259,
											"end": 4315,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4259,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4252,
											"end": 4315,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4252,
											"end": 4315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4252,
											"end": 4315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4322,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3989,
											"end": 4322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4877,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4896,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4896,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 4896,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4896,
											"end": 4919,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 4896,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4889,
											"end": 4919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4889,
											"end": 4919,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4926,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4786,
											"end": 4926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 526,
											"end": 629,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 526,
											"end": 629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 581,
											"end": 588,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 621,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "969"
										},
										{
											"begin": 600,
											"end": 622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 526,
											"end": 629,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 526,
											"end": 629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5269,
											"end": 5276,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5295,
											"end": 5312,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5288,
											"end": 5312,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5288,
											"end": 5312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5075,
											"end": 5082,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 5117,
											"end": 5123,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 5101,
											"end": 5124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5124,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 5101,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5094,
											"end": 5124,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5094,
											"end": 5124,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4993,
											"end": 5131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 782,
											"end": 796,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 931,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 931,
											"end": 953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 931,
											"end": 953,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 931,
											"end": 953,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 922,
											"end": 953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 922,
											"end": 953,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "969"
										},
										{
											"begin": 1012,
											"end": 1031,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1012,
											"end": 1031,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1031,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1032,
											"end": 1042,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1056,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1065,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1012,
											"end": 1066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1012,
											"end": 1066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1082,
											"end": 1090,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1092,
											"end": 1098,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1076,
											"end": 1099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1099,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1076,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1176,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1193,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1148,
											"end": 1193,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1166,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1193,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1148,
											"end": 1193,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1193,
											"name": "PUSH",
											"source": 6,
											"value": "DCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7"
										},
										{
											"begin": 1178,
											"end": 1184,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1186,
											"end": 1192,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1193,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1148,
											"end": 1193,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1148,
											"end": 1193,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1193,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1193,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1148,
											"end": 1193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1193,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 1148,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1193,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1148,
											"end": 1193,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1193,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1193,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1193,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1193,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1193,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 685,
											"end": 1200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1368,
											"end": 1382,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1487,
											"end": 1493,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1475,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1475,
											"end": 1494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1475,
											"end": 1494,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1475,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1466,
											"end": 1494,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1466,
											"end": 1494,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "969"
										},
										{
											"begin": 1553,
											"end": 1572,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1553,
											"end": 1572,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1572,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1573,
											"end": 1583,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1597,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1606,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1553,
											"end": 1607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1553,
											"end": 1607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1617,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1623,
											"end": 1631,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1633,
											"end": 1639,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1617,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1617,
											"end": 1640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1617,
											"end": 1640,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 1617,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1709,
											"end": 1717,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1689,
											"end": 1734,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1689,
											"end": 1734,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1689,
											"end": 1734,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1689,
											"end": 1734,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1689,
											"end": 1734,
											"name": "PUSH",
											"source": 6,
											"value": "DCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7"
										},
										{
											"begin": 1719,
											"end": 1725,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1733,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1689,
											"end": 1734,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1689,
											"end": 1734,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1689,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1689,
											"end": 1734,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1689,
											"end": 1734,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1689,
											"end": 1734,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1689,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1689,
											"end": 1734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1689,
											"end": 1734,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 1689,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1689,
											"end": 1734,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1689,
											"end": 1734,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1689,
											"end": 1734,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1689,
											"end": 1734,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1689,
											"end": 1734,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1689,
											"end": 1734,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1689,
											"end": 1734,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4662,
											"end": 4669,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4688,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 4704,
											"end": 4710,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4688,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 4688,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4688,
											"end": 4711,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 4688,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4711,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4711,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4718,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1994,
											"end": 2000,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1978,
											"end": 2001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1978,
											"end": 2001,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 1978,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2001,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 2001,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2096,
											"end": 2101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2082,
											"end": 2101,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2101,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2082,
											"end": 2092,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2082,
											"end": 2101,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2082,
											"end": 2101,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2082,
											"end": 2101,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2078,
											"end": 2170,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2117,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 2133,
											"end": 2138,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2150,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2158,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2117,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2117,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2117,
											"end": 2159,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 2117,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2170,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2078,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2271,
											"end": 2276,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2278,
											"end": 2284,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2265,
											"end": 2285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2285,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2265,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2373,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "969"
										},
										{
											"begin": 2367,
											"end": 2382,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2367,
											"end": 2382,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2382,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 2383,
											"end": 2391,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 2367,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2367,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2471,
											"end": 2479,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2469,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "PUSH",
											"source": 6,
											"value": "FBDE797D201C681B91056529119E0B02407C7BB96A4A2C75C01FC9667232C8DB"
										},
										{
											"begin": 2488,
											"end": 2494,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2496,
											"end": 2502,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2450,
											"end": 2503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 2510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2757,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 2863,
											"end": 2869,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2849,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2840,
											"end": 2870,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2840,
											"end": 2870,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 2970,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2970,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2951,
											"end": 2970,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2961,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2970,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2951,
											"end": 2970,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2970,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2947,
											"end": 3039,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2986,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 3002,
											"end": 3007,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3009,
											"end": 3019,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3027,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2986,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2986,
											"end": 3028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2986,
											"end": 3028,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2986,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2947,
											"end": 3039,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2947,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3097,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3103,
											"end": 3108,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3116,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3097,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3097,
											"end": 3117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3097,
											"end": 3117,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3097,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3133,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "969"
										},
										{
											"begin": 3127,
											"end": 3142,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3127,
											"end": 3142,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3142,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 3143,
											"end": 3151,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3153,
											"end": 3159,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 3127,
											"end": 3160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 3127,
											"end": 3160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3241,
											"end": 3246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3210,
											"end": 3263,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3239,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3210,
											"end": 3263,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3219,
											"end": 3229,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3210,
											"end": 3263,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "FBDE797D201C681B91056529119E0B02407C7BB96A4A2C75C01FC9667232C8DB"
										},
										{
											"begin": 3248,
											"end": 3254,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3210,
											"end": 3263,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 3210,
											"end": 3263,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3263,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3210,
											"end": 3263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3263,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 3210,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3210,
											"end": 3263,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3263,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3263,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3263,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3263,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 3270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5415,
											"end": 5422,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5441,
											"end": 5458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5434,
											"end": 5458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5458,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3629,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3641,
											"end": 3655,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3658,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 3658,
											"end": 3669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3658,
											"end": 3671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3671,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 3658,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3641,
											"end": 3671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3641,
											"end": 3671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3819,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3808,
											"end": 3814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3819,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 3808,
											"end": 3864,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 3851,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 3851,
											"end": 3864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3864,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 3851,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3841,
											"end": 3847,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3832,
											"end": 3838,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3832,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 3832,
											"end": 3847,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3832,
											"end": 3847,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3832,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3832,
											"end": 3847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3832,
											"end": 3847,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 3832,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 3831,
											"end": 3864,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3831,
											"end": 3864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3864,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 3831,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 3808,
											"end": 3864,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3864,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 3808,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3822,
											"end": 3828,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3864,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 3808,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3864,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5590,
											"end": 5597,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5616,
											"end": 5649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 5632,
											"end": 5648,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 5642,
											"end": 5647,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5632,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 5632,
											"end": 5648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5632,
											"end": 5648,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 5632,
											"end": 5648,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5616,
											"end": 5631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 5616,
											"end": 5649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5616,
											"end": 5649,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 5616,
											"end": 5649,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5649,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5525,
											"end": 5656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5769,
											"end": 5776,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5795,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 5805,
											"end": 5810,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5795,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 5795,
											"end": 5811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5795,
											"end": 5811,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 5795,
											"end": 5811,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5788,
											"end": 5811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5788,
											"end": 5811,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4473,
											"end": 4480,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4499,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 4515,
											"end": 4521,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4499,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 4499,
											"end": 4522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4499,
											"end": 4522,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 4499,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4522,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4522,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7516,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 7553,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8055,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8042,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8107,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 8079,
											"end": 8109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 8137,
											"end": 8144,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8155,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8163,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 8129,
											"end": 8164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7965,
											"end": 8171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 442,
											"end": 541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 494,
											"end": 500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 533,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 522,
											"end": 534,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 512,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 512,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 547,
											"end": 716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 631,
											"end": 642,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 671,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 660,
											"end": 663,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 653,
											"end": 672,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 705,
											"end": 709,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 703,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 696,
											"end": 710,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 681,
											"end": 710,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 681,
											"end": 710,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 861,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 722,
											"end": 861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 811,
											"end": 817,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 806,
											"end": 809,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 801,
											"end": 804,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 795,
											"end": 818,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 852,
											"end": 853,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 849,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 838,
											"end": 841,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 834,
											"end": 850,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 827,
											"end": 854,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 867,
											"end": 969,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 867,
											"end": 969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 908,
											"end": 914,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 961,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 955,
											"end": 962,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 950,
											"end": 952,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 939,
											"end": 953,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 935,
											"end": 963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 925,
											"end": 963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 925,
											"end": 963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 867,
											"end": 969,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 867,
											"end": 969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 867,
											"end": 969,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 867,
											"end": 969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 1124,
											"end": 1129,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 1091,
											"end": 1130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 1210,
											"end": 1216,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1205,
											"end": 1208,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 1146,
											"end": 1217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1139,
											"end": 1217,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1139,
											"end": 1217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1282,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1276,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1265,
											"end": 1270,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1261,
											"end": 1277,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 1226,
											"end": 1291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 1338,
											"end": 1344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 1316,
											"end": 1345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1314,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1307,
											"end": 1346,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1346,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1346,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1067,
											"end": 1352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1471,
											"end": 1475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1509,
											"end": 1511,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1494,
											"end": 1512,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1486,
											"end": 1512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1486,
											"end": 1512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1556,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1568,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1544,
											"end": 1545,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1542,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1529,
											"end": 1546,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1522,
											"end": 1569,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 1659,
											"end": 1663,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1656,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 1586,
											"end": 1664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1578,
											"end": 1664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1578,
											"end": 1664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1758,
											"end": 1875,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 1758,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1869,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2004,
											"end": 2126,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 2004,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2077,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 2095,
											"end": 2100,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2077,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 2077,
											"end": 2101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2077,
											"end": 2101,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 2077,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2075,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2102,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2057,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 2057,
											"end": 2120,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2116,
											"end": 2117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2113,
											"end": 2114,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2118,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2057,
											"end": 2120,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 2057,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2004,
											"end": 2126,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2004,
											"end": 2126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2271,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 2132,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2178,
											"end": 2183,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2203,
											"end": 2223,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2194,
											"end": 2223,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2194,
											"end": 2223,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 2259,
											"end": 2264,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 2232,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2265,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 2232,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2271,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2271,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2277,
											"end": 2606,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 2277,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2342,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2385,
											"end": 2387,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2373,
											"end": 2382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2364,
											"end": 2371,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2360,
											"end": 2383,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2353,
											"end": 2472,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2353,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 2353,
											"end": 2472,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2391,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 2391,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 2391,
											"end": 2470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2391,
											"end": 2470,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 2391,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2353,
											"end": 2472,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 2353,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2512,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2536,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 2581,
											"end": 2588,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2572,
											"end": 2578,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2570,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2579,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 2536,
											"end": 2589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2589,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 2536,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2526,
											"end": 2589,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2526,
											"end": 2589,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2482,
											"end": 2599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2277,
											"end": 2606,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2277,
											"end": 2606,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2277,
											"end": 2606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2277,
											"end": 2606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2277,
											"end": 2606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2612,
											"end": 2738,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 2612,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2649,
											"end": 2656,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2689,
											"end": 2731,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2682,
											"end": 2687,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2678,
											"end": 2732,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2732,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2732,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2612,
											"end": 2738,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2612,
											"end": 2738,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2612,
											"end": 2738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2612,
											"end": 2738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2840,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 2744,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2788,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2810,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 2828,
											"end": 2833,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 2810,
											"end": 2834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2834,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 2810,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2799,
											"end": 2834,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2799,
											"end": 2834,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2840,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2968,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 2846,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 2937,
											"end": 2942,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 2919,
											"end": 2943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2917,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 2944,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2958,
											"end": 2959,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2956,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2960,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3020,
											"end": 3025,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3064,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3065,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3036,
											"end": 3065,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3036,
											"end": 3065,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 3101,
											"end": 3106,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 3074,
											"end": 3107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3187,
											"end": 3193,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3201,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3246,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3232,
											"end": 3241,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3223,
											"end": 3230,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3219,
											"end": 3242,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3215,
											"end": 3247,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 3250,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 3250,
											"end": 3329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3329,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 3250,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3371,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 3440,
											"end": 3447,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3431,
											"end": 3437,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3429,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3416,
											"end": 3438,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 3395,
											"end": 3448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3448,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 3395,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3448,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3448,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3341,
											"end": 3458,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3499,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 3568,
											"end": 3575,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3559,
											"end": 3565,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3548,
											"end": 3557,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3544,
											"end": 3566,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 3523,
											"end": 3576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3468,
											"end": 3586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3119,
											"end": 3593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3633,
											"end": 3640,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3681,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3669,
											"end": 3682,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3662,
											"end": 3683,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3683,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3683,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 3804,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 3695,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 3791,
											"end": 3796,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 3776,
											"end": 3797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 3797,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 3776,
											"end": 3797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3771,
											"end": 3774,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 3804,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 3804,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 3804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3901,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3935,
											"end": 3937,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3924,
											"end": 3933,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3920,
											"end": 3938,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3938,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 4010,
											"end": 4011,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4012,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 3948,
											"end": 4013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4103,
											"end": 4109,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4119,
											"end": 4125,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4170,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4156,
											"end": 4165,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4147,
											"end": 4154,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4166,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4171,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 4174,
											"end": 4253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 4364,
											"end": 4371,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4361,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4344,
											"end": 4353,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4340,
											"end": 4362,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 4319,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4421,
											"end": 4423,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 4492,
											"end": 4499,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4483,
											"end": 4489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4472,
											"end": 4481,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 4447,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4510,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4551,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 4638,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4715,
											"end": 4731,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 4826,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4821,
											"end": 4824,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4814,
											"end": 4849,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4950,
											"end": 4954,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5063,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 5001,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 5168,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5163,
											"end": 5166,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5302,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5338,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5334,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 5349,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5492,
											"end": 5498,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5543,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5529,
											"end": 5538,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5520,
											"end": 5527,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5516,
											"end": 5539,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5512,
											"end": 5544,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 5547,
											"end": 5626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5668,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 5737,
											"end": 5744,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5717,
											"end": 5726,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5713,
											"end": 5735,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 5692,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5638,
											"end": 5755,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 5899,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 6044,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5990,
											"end": 6107,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6117,
											"end": 6235,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5768,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6867,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 6248,
											"end": 6867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6325,
											"end": 6331,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6333,
											"end": 6339,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6341,
											"end": 6347,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6390,
											"end": 6392,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6378,
											"end": 6387,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6369,
											"end": 6376,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6388,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6361,
											"end": 6393,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6358,
											"end": 6477,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6358,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 6358,
											"end": 6477,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6396,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 6396,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 6396,
											"end": 6475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6396,
											"end": 6475,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 6396,
											"end": 6475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6358,
											"end": 6477,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 6358,
											"end": 6477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6516,
											"end": 6517,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 6586,
											"end": 6593,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6577,
											"end": 6583,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6566,
											"end": 6575,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6562,
											"end": 6584,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6541,
											"end": 6594,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 6541,
											"end": 6594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6541,
											"end": 6594,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 6541,
											"end": 6594,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6594,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6531,
											"end": 6594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6487,
											"end": 6604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6643,
											"end": 6645,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6669,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 6714,
											"end": 6721,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6705,
											"end": 6711,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6694,
											"end": 6703,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6690,
											"end": 6712,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6669,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 6669,
											"end": 6722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6669,
											"end": 6722,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 6669,
											"end": 6722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6659,
											"end": 6722,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6659,
											"end": 6722,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6614,
											"end": 6732,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6771,
											"end": 6773,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6797,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6833,
											"end": 6839,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6822,
											"end": 6831,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6818,
											"end": 6840,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6797,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 6797,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6797,
											"end": 6850,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 6797,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6787,
											"end": 6850,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6787,
											"end": 6850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6860,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6867,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6867,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6867,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 7347,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 6873,
											"end": 7347,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6941,
											"end": 6947,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6949,
											"end": 6955,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6998,
											"end": 7000,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6986,
											"end": 6995,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6977,
											"end": 6984,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6973,
											"end": 6996,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6969,
											"end": 7001,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6966,
											"end": 7085,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6966,
											"end": 7085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 6966,
											"end": 7085,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7004,
											"end": 7083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 7004,
											"end": 7083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 7004,
											"end": 7083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7004,
											"end": 7083,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 7004,
											"end": 7083,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6966,
											"end": 7085,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 6966,
											"end": 7085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7124,
											"end": 7125,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7149,
											"end": 7202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 7194,
											"end": 7201,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7185,
											"end": 7191,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7174,
											"end": 7183,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7170,
											"end": 7192,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 7149,
											"end": 7202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7202,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 7149,
											"end": 7202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7139,
											"end": 7202,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7139,
											"end": 7202,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7095,
											"end": 7212,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7251,
											"end": 7253,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7277,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 7322,
											"end": 7329,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7313,
											"end": 7319,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7302,
											"end": 7311,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7320,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7277,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 7277,
											"end": 7330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7277,
											"end": 7330,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 7277,
											"end": 7330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7267,
											"end": 7330,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7267,
											"end": 7330,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7222,
											"end": 7340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 7347,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 7347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 7347,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 7347,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 7347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 7347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7496,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 7353,
											"end": 7496,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7410,
											"end": 7415,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7441,
											"end": 7447,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7435,
											"end": 7448,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7426,
											"end": 7448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7426,
											"end": 7448,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7457,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 7484,
											"end": 7489,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7457,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 7457,
											"end": 7490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7457,
											"end": 7490,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 7457,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7496,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7496,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7496,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7496,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7502,
											"end": 7853,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 7502,
											"end": 7853,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7572,
											"end": 7578,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7621,
											"end": 7623,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7609,
											"end": 7618,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7600,
											"end": 7607,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7596,
											"end": 7619,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7592,
											"end": 7624,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7589,
											"end": 7708,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7589,
											"end": 7708,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 7589,
											"end": 7708,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7627,
											"end": 7706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 7627,
											"end": 7706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 7627,
											"end": 7706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7627,
											"end": 7706,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 7627,
											"end": 7706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7589,
											"end": 7708,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 7589,
											"end": 7708,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7747,
											"end": 7748,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7772,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 7828,
											"end": 7835,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7819,
											"end": 7825,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 7817,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7804,
											"end": 7826,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 7772,
											"end": 7836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7836,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 7772,
											"end": 7836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7762,
											"end": 7836,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7762,
											"end": 7836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7718,
											"end": 7846,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7502,
											"end": 7853,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7502,
											"end": 7853,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7502,
											"end": 7853,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7502,
											"end": 7853,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7502,
											"end": 7853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 8039,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 7859,
											"end": 8039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7907,
											"end": 7984,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7904,
											"end": 7905,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7897,
											"end": 7985,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8004,
											"end": 8008,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 8001,
											"end": 8002,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7994,
											"end": 8009,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8028,
											"end": 8032,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8025,
											"end": 8026,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8018,
											"end": 8033,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8045,
											"end": 8365,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 8045,
											"end": 8365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8089,
											"end": 8095,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8126,
											"end": 8127,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8120,
											"end": 8124,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8116,
											"end": 8128,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8106,
											"end": 8128,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8106,
											"end": 8128,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8167,
											"end": 8171,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8163,
											"end": 8175,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8194,
											"end": 8212,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8184,
											"end": 8265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 8184,
											"end": 8265,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8250,
											"end": 8254,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 8242,
											"end": 8248,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8238,
											"end": 8255,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8228,
											"end": 8255,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8228,
											"end": 8255,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8184,
											"end": 8265,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 8184,
											"end": 8265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8312,
											"end": 8314,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8304,
											"end": 8310,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8301,
											"end": 8315,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8281,
											"end": 8299,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8278,
											"end": 8316,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8275,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 8275,
											"end": 8359,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8331,
											"end": 8349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 8331,
											"end": 8349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 8331,
											"end": 8349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8331,
											"end": 8349,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 8331,
											"end": 8349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8275,
											"end": 8359,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 8275,
											"end": 8359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8096,
											"end": 8365,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8045,
											"end": 8365,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8045,
											"end": 8365,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8045,
											"end": 8365,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8045,
											"end": 8365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8371,
											"end": 8551,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 8371,
											"end": 8551,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8419,
											"end": 8496,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8416,
											"end": 8417,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8409,
											"end": 8497,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8516,
											"end": 8520,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 8513,
											"end": 8514,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8506,
											"end": 8521,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8540,
											"end": 8544,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8537,
											"end": 8538,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8530,
											"end": 8545,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8967,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 8557,
											"end": 8967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8597,
											"end": 8604,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8620,
											"end": 8640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 8638,
											"end": 8639,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8620,
											"end": 8640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 8620,
											"end": 8640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8620,
											"end": 8640,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 8620,
											"end": 8640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8615,
											"end": 8640,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8615,
											"end": 8640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8654,
											"end": 8674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 8672,
											"end": 8673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8654,
											"end": 8674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 8654,
											"end": 8674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8654,
											"end": 8674,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 8654,
											"end": 8674,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8649,
											"end": 8674,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8649,
											"end": 8674,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8709,
											"end": 8710,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8706,
											"end": 8707,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8702,
											"end": 8711,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8731,
											"end": 8761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 8749,
											"end": 8760,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8731,
											"end": 8761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 8731,
											"end": 8761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8731,
											"end": 8761,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 8731,
											"end": 8761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8720,
											"end": 8761,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8720,
											"end": 8761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8910,
											"end": 8911,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8901,
											"end": 8908,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8897,
											"end": 8912,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8894,
											"end": 8895,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8891,
											"end": 8913,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8871,
											"end": 8872,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8864,
											"end": 8873,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8844,
											"end": 8927,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 8821,
											"end": 8960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 8821,
											"end": 8960,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8940,
											"end": 8958,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 8940,
											"end": 8958,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 8940,
											"end": 8958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8940,
											"end": 8958,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 8940,
											"end": 8958,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8821,
											"end": 8960,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 8821,
											"end": 8960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8605,
											"end": 8967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8967,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8967,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8967,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8557,
											"end": 8967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8973,
											"end": 9153,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 8973,
											"end": 9153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9021,
											"end": 9098,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9018,
											"end": 9019,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9011,
											"end": 9099,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9118,
											"end": 9122,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 9115,
											"end": 9116,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9108,
											"end": 9123,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9142,
											"end": 9146,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9139,
											"end": 9140,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9132,
											"end": 9147,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9344,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 9159,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9199,
											"end": 9200,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9216,
											"end": 9236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 9234,
											"end": 9235,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9216,
											"end": 9236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 9216,
											"end": 9236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9216,
											"end": 9236,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 9216,
											"end": 9236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9211,
											"end": 9236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9211,
											"end": 9236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9250,
											"end": 9270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 9268,
											"end": 9269,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9250,
											"end": 9270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 9250,
											"end": 9270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9250,
											"end": 9270,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 9250,
											"end": 9270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9245,
											"end": 9270,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9245,
											"end": 9270,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9289,
											"end": 9290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9279,
											"end": 9314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 9279,
											"end": 9314,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 9294,
											"end": 9312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9279,
											"end": 9314,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 9279,
											"end": 9314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9336,
											"end": 9337,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9333,
											"end": 9334,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9338,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9338,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9344,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9344,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9344,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9344,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9350,
											"end": 9792,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 9350,
											"end": 9792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9499,
											"end": 9503,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9537,
											"end": 9539,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9526,
											"end": 9535,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9514,
											"end": 9540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9514,
											"end": 9540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9550,
											"end": 9621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 9618,
											"end": 9619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9607,
											"end": 9616,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9603,
											"end": 9620,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9594,
											"end": 9600,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9550,
											"end": 9621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 9550,
											"end": 9621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9550,
											"end": 9621,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 9550,
											"end": 9621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9631,
											"end": 9703,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 9699,
											"end": 9701,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9688,
											"end": 9697,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9684,
											"end": 9702,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9675,
											"end": 9681,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9631,
											"end": 9703,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 9631,
											"end": 9703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9631,
											"end": 9703,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 9631,
											"end": 9703,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9713,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 9781,
											"end": 9783,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9770,
											"end": 9779,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9766,
											"end": 9784,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9757,
											"end": 9763,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9713,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 9713,
											"end": 9785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9713,
											"end": 9785,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 9713,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9350,
											"end": 9792,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 9350,
											"end": 9792,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9350,
											"end": 9792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9350,
											"end": 9792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9350,
											"end": 9792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9350,
											"end": 9792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9350,
											"end": 9792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9798,
											"end": 9914,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 9798,
											"end": 9914,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9868,
											"end": 9889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 9883,
											"end": 9888,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9868,
											"end": 9889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 9868,
											"end": 9889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9868,
											"end": 9889,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 9868,
											"end": 9889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9861,
											"end": 9866,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9858,
											"end": 9890,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 9908,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 9848,
											"end": 9908,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9904,
											"end": 9905,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9901,
											"end": 9902,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9894,
											"end": 9906,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 9908,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 9848,
											"end": 9908,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9798,
											"end": 9914,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9798,
											"end": 9914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9920,
											"end": 10057,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 9920,
											"end": 10057,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9974,
											"end": 9979,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10005,
											"end": 10011,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9999,
											"end": 10012,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9990,
											"end": 10012,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9990,
											"end": 10012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10021,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 10045,
											"end": 10050,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10021,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 10021,
											"end": 10051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10021,
											"end": 10051,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 10021,
											"end": 10051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9920,
											"end": 10057,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9920,
											"end": 10057,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9920,
											"end": 10057,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9920,
											"end": 10057,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9920,
											"end": 10057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10063,
											"end": 10408,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 10063,
											"end": 10408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10130,
											"end": 10136,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10179,
											"end": 10181,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10167,
											"end": 10176,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10158,
											"end": 10165,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10154,
											"end": 10177,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10150,
											"end": 10182,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 10147,
											"end": 10266,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10147,
											"end": 10266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 10147,
											"end": 10266,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10185,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 10185,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 10185,
											"end": 10264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10185,
											"end": 10264,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 10185,
											"end": 10264,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10147,
											"end": 10266,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 10147,
											"end": 10266,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10305,
											"end": 10306,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10330,
											"end": 10391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 10383,
											"end": 10390,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10374,
											"end": 10380,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10363,
											"end": 10372,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10359,
											"end": 10381,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10330,
											"end": 10391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 10330,
											"end": 10391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10330,
											"end": 10391,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 10330,
											"end": 10391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10320,
											"end": 10391,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10320,
											"end": 10391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10276,
											"end": 10401,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10063,
											"end": 10408,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10063,
											"end": 10408,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10063,
											"end": 10408,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10063,
											"end": 10408,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10063,
											"end": 10408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10414,
											"end": 10746,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 10414,
											"end": 10746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10535,
											"end": 10539,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10573,
											"end": 10575,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10562,
											"end": 10571,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10558,
											"end": 10576,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10576,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10586,
											"end": 10657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 10654,
											"end": 10655,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10643,
											"end": 10652,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10639,
											"end": 10656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10630,
											"end": 10636,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10586,
											"end": 10657,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 10586,
											"end": 10657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10586,
											"end": 10657,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 10586,
											"end": 10657,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10667,
											"end": 10739,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 10735,
											"end": 10737,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10724,
											"end": 10733,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10720,
											"end": 10738,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10711,
											"end": 10717,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10667,
											"end": 10739,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 10667,
											"end": 10739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10667,
											"end": 10739,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 10667,
											"end": 10739,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10414,
											"end": 10746,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10414,
											"end": 10746,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10414,
											"end": 10746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10414,
											"end": 10746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10414,
											"end": 10746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10414,
											"end": 10746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10752,
											"end": 11084,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 10752,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10873,
											"end": 10877,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10911,
											"end": 10913,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10900,
											"end": 10909,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10896,
											"end": 10914,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10888,
											"end": 10914,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10888,
											"end": 10914,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10924,
											"end": 10995,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 10992,
											"end": 10993,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10981,
											"end": 10990,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10977,
											"end": 10994,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10968,
											"end": 10974,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10924,
											"end": 10995,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 10924,
											"end": 10995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10924,
											"end": 10995,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 10924,
											"end": 10995,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11005,
											"end": 11077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 11073,
											"end": 11075,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11062,
											"end": 11071,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11058,
											"end": 11076,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11049,
											"end": 11055,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11005,
											"end": 11077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 11005,
											"end": 11077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11005,
											"end": 11077,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 11005,
											"end": 11077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10752,
											"end": 11084,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10752,
											"end": 11084,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10752,
											"end": 11084,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10752,
											"end": 11084,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10752,
											"end": 11084,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10752,
											"end": 11084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11532,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 11090,
											"end": 11532,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11239,
											"end": 11243,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11277,
											"end": 11279,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 11266,
											"end": 11275,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11262,
											"end": 11280,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11254,
											"end": 11280,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11254,
											"end": 11280,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11290,
											"end": 11361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 11358,
											"end": 11359,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11347,
											"end": 11356,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11343,
											"end": 11360,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11334,
											"end": 11340,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11290,
											"end": 11361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 11290,
											"end": 11361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11290,
											"end": 11361,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 11290,
											"end": 11361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11371,
											"end": 11443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 11439,
											"end": 11441,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11428,
											"end": 11437,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11424,
											"end": 11442,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11415,
											"end": 11421,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11371,
											"end": 11443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 11371,
											"end": 11443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11371,
											"end": 11443,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 11371,
											"end": 11443,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 11521,
											"end": 11523,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11510,
											"end": 11519,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11506,
											"end": 11524,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11497,
											"end": 11503,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 11453,
											"end": 11525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11525,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 11453,
											"end": 11525,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11532,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11532,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11532,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11532,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11532,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11532,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11090,
											"end": 11532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11538,
											"end": 11729,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 11538,
											"end": 11729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11578,
											"end": 11581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11597,
											"end": 11617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 11615,
											"end": 11616,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11597,
											"end": 11617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 11597,
											"end": 11617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11597,
											"end": 11617,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 11597,
											"end": 11617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11592,
											"end": 11617,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11592,
											"end": 11617,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11631,
											"end": 11651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 11649,
											"end": 11650,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11631,
											"end": 11651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 11631,
											"end": 11651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11631,
											"end": 11651,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 11631,
											"end": 11651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11626,
											"end": 11651,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11626,
											"end": 11651,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11674,
											"end": 11675,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11671,
											"end": 11672,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11667,
											"end": 11676,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11660,
											"end": 11676,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11660,
											"end": 11676,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11695,
											"end": 11698,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11692,
											"end": 11693,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11689,
											"end": 11699,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11686,
											"end": 11722,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11686,
											"end": 11722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 11686,
											"end": 11722,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11702,
											"end": 11720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 11702,
											"end": 11720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 11702,
											"end": 11720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11702,
											"end": 11720,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 11702,
											"end": 11720,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11686,
											"end": 11722,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 11686,
											"end": 11722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11538,
											"end": 11729,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11538,
											"end": 11729,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11538,
											"end": 11729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11538,
											"end": 11729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11538,
											"end": 11729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC4626.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Ddfi_lpl/valut/vault02.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"asset()": "38d52e0f",
							"balanceOf(address)": "70a08231",
							"convertToAssets(uint256)": "07a2d13a",
							"convertToShares(uint256)": "c6e6f592",
							"decimals()": "313ce567",
							"deposit(uint256,address)": "6e553f65",
							"maxDeposit(address)": "402d267d",
							"maxMint(address)": "c63d75b6",
							"maxRedeem(address)": "d905777e",
							"maxWithdraw(address)": "ce96cb77",
							"mint(uint256,address)": "94bf804d",
							"name()": "06fdde03",
							"previewDeposit(uint256)": "ef8b30f7",
							"previewMint(uint256)": "b3d7f6b9",
							"previewRedeem(uint256)": "4cdad506",
							"previewWithdraw(uint256)": "0a28a477",
							"redeem(uint256,address,address)": "ba087652",
							"symbol()": "95d89b41",
							"totalAssets()": "01e1d114",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256,address,address)": "b460af94"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"asset_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"asset()\":{\"details\":\"Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"convertToAssets(uint256)\":{\"details\":\"Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"convertToShares(uint256)\":{\"details\":\"Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"deposit(uint256,address)\":{\"details\":\"Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"maxRedeem(address)\":{\"details\":\"Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault, through a redeem call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock. - MUST NOT revert.\"},\"maxWithdraw(address)\":{\"details\":\"Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the Vault, through a withdraw call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST NOT revert.\"},\"mint(uint256,address)\":{\"details\":\"Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"previewDeposit(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"previewMint(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting.\"},\"previewRedeem(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their redemption at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the   same transaction. - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the   redemption would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by redeeming.\"},\"previewWithdraw(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if   called   in the same transaction. - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though   the withdrawal would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"redeem(uint256,address,address)\":{\"details\":\"Burns exactly shares from owner and sends assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   redeem execution, and are accounted for during redeem. - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalAssets()\":{\"details\":\"Returns the total amount of the underlying asset that is \\u201cmanaged\\u201d by Vault. - SHOULD include any compounding that occurs from yield. - MUST be inclusive of any fees that are charged against assets in the Vault. - MUST NOT revert.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"withdraw(uint256,address,address)\":{\"details\":\"Burns shares from owner and sends exactly assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   withdraw execution, and are accounted for during withdraw. - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ddfi_lpl/valut/vault02.sol\":\"ERC4626\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x23460d4a98e568bde8b7ecaa2316853778032106b489c03be29db1abb0e712c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47b8be8c67117387069c0880d69b8df0bef52b54ba01a7f4b90c04f50655bd30\",\"dweb:/ipfs/QmNNpBXysQBbF3GSNTDsP39VBnFEBYUVeg1EWDaHzSsWSz\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Ddfi_lpl/valut/vault02.sol\":{\"keccak256\":\"0x02388c08c904118d614ef8afab19c6d41a002d18a444219df29990606395e082\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5cb82e169024667fe439daa19bcc9e34133c41e91e882c1c873272add0e7cf\",\"dweb:/ipfs/QmQiQZx2DZhmqBk8V8eG2JHcV3gsBB9MQYQq4H9YUQrFYr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 329,
								"contract": "contracts/Ddfi_lpl/valut/vault02.sol:ERC4626",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 335,
								"contract": "contracts/Ddfi_lpl/valut/vault02.sol:ERC4626",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 337,
								"contract": "contracts/Ddfi_lpl/valut/vault02.sol:ERC4626",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 339,
								"contract": "contracts/Ddfi_lpl/valut/vault02.sol:ERC4626",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 341,
								"contract": "contracts/Ddfi_lpl/valut/vault02.sol:ERC4626",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC4626.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC4626.sol",
					"exportedSymbols": {
						"IERC20": [
							899
						],
						"IERC20Metadata": [
							925
						],
						"IERC4626": [
							169
						]
					},
					"id": 170,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 170,
							"sourceUnit": 900,
							"src": "133:49:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 899,
										"src": "141:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "../token/ERC20/extensions/IERC20Metadata.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 170,
							"sourceUnit": 926,
							"src": "183:76:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 925,
										"src": "191:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"421:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 899,
										"src": "421:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "421:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC20Metadata",
										"nameLocations": [
											"429:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 925,
										"src": "429:14:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "429:14:0"
								}
							],
							"canonicalName": "IERC4626",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:137:0",
								"text": " @dev Interface of the ERC-4626 \"Tokenized Vault Standard\", as defined in\n https://eips.ethereum.org/EIPS/eip-4626[ERC-4626]."
							},
							"fullyImplemented": false,
							"id": 169,
							"linearizedBaseContracts": [
								169,
								925,
								899
							],
							"name": "IERC4626",
							"nameLocation": "409:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "dcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7",
									"id": 20,
									"name": "Deposit",
									"nameLocation": "456:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "480:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "464:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "504:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "488:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "488:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": false,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "519:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "511:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "535:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "527:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:79:0"
									},
									"src": "450:93:0"
								},
								{
									"anonymous": false,
									"eventSelector": "fbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db",
									"id": 32,
									"name": "Withdraw",
									"nameLocation": "555:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "589:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "573:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"indexed": true,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "621:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "605:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "605:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "655:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "639:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": false,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "678:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "670:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": false,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "702:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "694:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "563:151:0"
									},
									"src": "549:166:0"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "721:207:0",
										"text": " @dev Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing.\n - MUST be an ERC-20 token contract.\n - MUST NOT revert."
									},
									"functionSelector": "38d52e0f",
									"id": 38,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asset",
									"nameLocation": "942:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "947:2:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "assetTokenAddress",
												"nameLocation": "981:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "973:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:27:0"
									},
									"scope": 169,
									"src": "933:67:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "1006:286:0",
										"text": " @dev Returns the total amount of the underlying asset that is “managed” by Vault.\n - SHOULD include any compounding that occurs from yield.\n - MUST be inclusive of any fees that are charged against assets in the Vault.\n - MUST NOT revert."
									},
									"functionSelector": "01e1d114",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalAssets",
									"nameLocation": "1306:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1317:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "totalManagedAssets",
												"nameLocation": "1351:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1343:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1342:28:0"
									},
									"scope": 169,
									"src": "1297:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1377:720:0",
										"text": " @dev Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal\n scenario where all the conditions are met.\n - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n - MUST NOT show any variations depending on the caller.\n - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n - MUST NOT revert.\n NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n from."
									},
									"functionSelector": "c6e6f592",
									"id": 52,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "convertToShares",
									"nameLocation": "2111:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "2135:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2127:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2127:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2126:16:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "2174:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2166:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2165:16:0"
									},
									"scope": 169,
									"src": "2102:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2188:720:0",
										"text": " @dev Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal\n scenario where all the conditions are met.\n - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n - MUST NOT show any variations depending on the caller.\n - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n - MUST NOT revert.\n NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n from."
									},
									"functionSelector": "07a2d13a",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "convertToAssets",
									"nameLocation": "2922:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "2946:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2938:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2938:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2937:16:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "2985:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2977:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2977:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2976:16:0"
									},
									"scope": 169,
									"src": "2913:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2999:386:0",
										"text": " @dev Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver,\n through a deposit call.\n - MUST return a limited value if receiver is subject to some deposit limit.\n - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited.\n - MUST NOT revert."
									},
									"functionSelector": "402d267d",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxDeposit",
									"nameLocation": "3399:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3418:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3410:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3409:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "maxAssets",
												"nameLocation": "3459:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3451:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:19:0"
									},
									"scope": 169,
									"src": "3390:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3476:1012:0",
										"text": " @dev Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given\n current on-chain conditions.\n - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit\n   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called\n   in the same transaction.\n - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the\n   deposit would be accepted, regardless if the user has enough tokens approved, etc.\n - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by depositing."
									},
									"functionSelector": "ef8b30f7",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "previewDeposit",
									"nameLocation": "4502:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "4525:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "4517:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4517:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4516:16:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "4564:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "4556:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4556:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4555:16:0"
									},
									"scope": 169,
									"src": "4493:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "4578:651:0",
										"text": " @dev Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens.\n - MUST emit the Deposit event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n   deposit execution, and are accounted for during deposit.\n - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not\n   approving enough underlying tokens to the Vault contract, etc).\n NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."
									},
									"functionSelector": "6e553f65",
									"id": 86,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "5243:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "5259:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "5251:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5251:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5275:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "5267:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5250:34:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "5311:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "5303:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5303:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5302:16:0"
									},
									"scope": 169,
									"src": "5234:85:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "5325:341:0",
										"text": " @dev Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call.\n - MUST return a limited value if receiver is subject to some mint limit.\n - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted.\n - MUST NOT revert."
									},
									"functionSelector": "c63d75b6",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxMint",
									"nameLocation": "5680:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5696:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "5688:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5688:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5687:18:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "maxShares",
												"nameLocation": "5737:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "5729:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5728:19:0"
									},
									"scope": 169,
									"src": "5671:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "5754:984:0",
										"text": " @dev Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given\n current on-chain conditions.\n - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call\n   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the\n   same transaction.\n - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint\n   would be accepted, regardless if the user has enough tokens approved, etc.\n - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by minting."
									},
									"functionSelector": "b3d7f6b9",
									"id": 102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "previewMint",
									"nameLocation": "6752:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "6772:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "6764:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6764:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6763:16:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "6811:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "6803:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6803:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6802:16:0"
									},
									"scope": 169,
									"src": "6743:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "6825:642:0",
										"text": " @dev Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens.\n - MUST emit the Deposit event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint\n   execution, and are accounted for during mint.\n - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not\n   approving enough underlying tokens to the Vault contract, etc).\n NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."
									},
									"functionSelector": "94bf804d",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "7481:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "7494:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "7486:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "7510:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "7502:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7502:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7485:34:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "7546:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "7538:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7538:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7537:16:0"
									},
									"scope": 169,
									"src": "7472:82:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "7560:293:0",
										"text": " @dev Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the\n Vault, through a withdraw call.\n - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n - MUST NOT revert."
									},
									"functionSelector": "ce96cb77",
									"id": 120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxWithdraw",
									"nameLocation": "7867:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7887:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "7879:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7879:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7878:15:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "maxAssets",
												"nameLocation": "7925:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "7917:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7916:19:0"
									},
									"scope": 169,
									"src": "7858:78:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "7942:1034:0",
										"text": " @dev Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block,\n given current on-chain conditions.\n - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw\n   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if\n   called\n   in the same transaction.\n - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though\n   the withdrawal would be accepted, regardless if the user has enough shares, etc.\n - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by depositing."
									},
									"functionSelector": "0a28a477",
									"id": 128,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "previewWithdraw",
									"nameLocation": "8990:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "9014:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "9006:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9006:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9005:16:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "9053:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "9045:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9045:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9044:16:0"
									},
									"scope": 169,
									"src": "8981:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "9067:670:0",
										"text": " @dev Burns shares from owner and sends exactly assets of underlying tokens to receiver.\n - MUST emit the Withdraw event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n   withdraw execution, and are accounted for during withdraw.\n - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner\n   not having enough shares, etc).\n Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n Those methods should be performed separately."
									},
									"functionSelector": "b460af94",
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "9751:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "9768:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "9760:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9760:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "9784:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "9776:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9776:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9802:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "9794:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9794:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9759:49:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "9835:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "9827:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9826:16:0"
									},
									"scope": 169,
									"src": "9742:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "9849:381:0",
										"text": " @dev Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault,\n through a redeem call.\n - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock.\n - MUST NOT revert."
									},
									"functionSelector": "d905777e",
									"id": 148,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxRedeem",
									"nameLocation": "10244:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10262:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "10254:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10254:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10253:15:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "maxShares",
												"nameLocation": "10300:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "10292:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10291:19:0"
									},
									"scope": 169,
									"src": "10235:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "10317:1009:0",
										"text": " @dev Allows an on-chain or off-chain user to simulate the effects of their redemption at the current block,\n given current on-chain conditions.\n - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call\n   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the\n   same transaction.\n - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the\n   redemption would be accepted, regardless if the user has enough shares, etc.\n - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by redeeming."
									},
									"functionSelector": "4cdad506",
									"id": 156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "previewRedeem",
									"nameLocation": "11340:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "11362:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "11354:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11353:16:0"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "11401:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "11393:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11393:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11392:16:0"
									},
									"scope": 169,
									"src": "11331:78:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "11415:661:0",
										"text": " @dev Burns exactly shares from owner and sends assets of underlying tokens to receiver.\n - MUST emit the Withdraw event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n   redeem execution, and are accounted for during redeem.\n - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner\n   not having enough shares, etc).\n NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n Those methods should be performed separately."
									},
									"functionSelector": "ba087652",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "redeem",
									"nameLocation": "12090:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "12105:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "12097:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12097:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "12121:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "12113:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12113:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12139:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "12131:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12131:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12096:49:0"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "12172:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "12164:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12164:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12163:16:0"
									},
									"scope": 169,
									"src": "12081:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 170,
							"src": "399:11783:0",
							"usedErrors": [],
							"usedEvents": [
								20,
								32,
								833,
								842
							]
						}
					],
					"src": "107:12076:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							306
						],
						"IERC20Errors": [
							211
						],
						"IERC721Errors": [
							259
						]
					},
					"id": 307,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 171,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 172,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 211,
							"linearizedBaseContracts": [
								211
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 181,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 186,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 191,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 200,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 205,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 210,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 307,
							"src": "280:1764:1",
							"usedErrors": [
								181,
								186,
								191,
								200,
								205,
								210
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 212,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 259,
							"linearizedBaseContracts": [
								259
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 217,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 222,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 231,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 236,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 241,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 248,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 253,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 258,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 307,
							"src": "2190:2092:1",
							"usedErrors": [
								217,
								222,
								231,
								236,
								241,
								248,
								253,
								258
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 260,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 306,
							"linearizedBaseContracts": [
								306
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 271,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 276,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 281,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 288,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 293,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 298,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 305,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 307,
							"src": "4430:2107:1",
							"usedErrors": [
								271,
								276,
								281,
								288,
								293,
								298,
								305
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							955
						],
						"ERC20": [
							821
						],
						"IERC20": [
							899
						],
						"IERC20Errors": [
							211
						],
						"IERC20Metadata": [
							925
						]
					},
					"id": 822,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 308,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 310,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 822,
							"sourceUnit": 900,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 309,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 899,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 312,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 822,
							"sourceUnit": 926,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 311,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 925,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 822,
							"sourceUnit": 956,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 313,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 955,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 316,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 822,
							"sourceUnit": 307,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 315,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 211,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 318,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 955,
										"src": "1133:7:2"
									},
									"id": 319,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 320,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 899,
										"src": "1142:6:2"
									},
									"id": 321,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 322,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 925,
										"src": "1150:14:2"
									},
									"id": 323,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 324,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 211,
										"src": "1166:12:2"
									},
									"id": 325,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 317,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 821,
							"linearizedBaseContracts": [
								821,
								211,
								925,
								899,
								955
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 329,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 821,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 328,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 326,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 327,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 335,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 821,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 334,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 330,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 333,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 331,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 332,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 337,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 821,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 336,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 339,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 821,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 338,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 341,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 821,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 340,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 349,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 350,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 353,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 354,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 356,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 358,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 343,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 345,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 821,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										912
									],
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 364,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 339,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 363,
												"id": 365,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 361,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 821,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										918
									],
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 373,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 341,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 372,
												"id": 374,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 370,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 821,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										924
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 381,
												"id": 383,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 379,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 821,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										848
									],
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "2891:36:2",
										"statements": [
											{
												"expression": {
													"id": 391,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 337,
													"src": "2908:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 392,
												"nodeType": "Return",
												"src": "2901:19:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:2"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 821,
									"src": "2830:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										856
									],
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "3059:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 402,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "3076:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 404,
													"indexExpression": {
														"id": 403,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "3086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 401,
												"id": 405,
												"nodeType": "Return",
												"src": "3069:25:2"
											}
										]
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3004:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:2"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3050:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:2"
									},
									"scope": 821,
									"src": "2985:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										866
									],
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "3371:103:2",
										"statements": [
											{
												"assignments": [
													418
												],
												"declarations": [
													{
														"constant": false,
														"id": 418,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 430,
														"src": "3381:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 417,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 421,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 419,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "3397:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 423,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "3429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 424,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "3436:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 425,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 422,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "3419:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 416,
												"id": 429,
												"nodeType": "Return",
												"src": "3456:11:2"
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "3314:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "3326:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:2"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "3365:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 414,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:2"
									},
									"scope": 821,
									"src": "3296:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "3621:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 441,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "3638:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 443,
														"indexExpression": {
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "3650:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 445,
													"indexExpression": {
														"id": 444,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "3657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 440,
												"id": 446,
												"nodeType": "Return",
												"src": "3631:34:2"
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3566:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:2"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "3612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:2"
									},
									"scope": 821,
									"src": "3532:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										886
									],
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "4058:107:2",
										"statements": [
											{
												"assignments": [
													459
												],
												"declarations": [
													{
														"constant": false,
														"id": 459,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 471,
														"src": "4068:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 458,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 462,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 460,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "4084:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 464,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "4115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 465,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "4122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 466,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 463,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															712,
															772
														],
														"referencedDeclaration": 712,
														"src": "4106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 457,
												"id": 470,
												"nodeType": "Return",
												"src": "4147:11:2"
											}
										]
									},
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "4013:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:2"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "4052:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 455,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:2"
									},
									"scope": 821,
									"src": "3979:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										898
									],
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "4850:151:2",
										"statements": [
											{
												"assignments": [
													485
												],
												"declarations": [
													{
														"constant": false,
														"id": 485,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 503,
														"src": "4860:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 484,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 488,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 486,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "4878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 490,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "4916:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 491,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "4922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "4931:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 489,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "4900:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 496,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "4957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "4963:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "4967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 495,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "4947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 500,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 483,
												"id": 502,
												"nodeType": "Return",
												"src": "4983:11:2"
											}
										]
									},
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "4779:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "4793:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "4805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:2"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "4844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 481,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:2"
									},
									"scope": 821,
									"src": "4757:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "5443:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 514,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "5457:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 515,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 518,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 528,
												"nodeType": "IfStatement",
												"src": "5453:86:2",
												"trueBody": {
													"id": 527,
													"nodeType": "Block",
													"src": "5477:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 523,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 521,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 520,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "5498:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 526,
															"nodeType": "RevertStatement",
															"src": "5491:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 529,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "5552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 530,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 543,
												"nodeType": "IfStatement",
												"src": "5548:86:2",
												"trueBody": {
													"id": 542,
													"nodeType": "Block",
													"src": "5570:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 538,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 536,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 535,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 191,
																	"src": "5591:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 541,
															"nodeType": "RevertStatement",
															"src": "5584:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 545,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "5651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 546,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "5657:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 547,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "5661:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 544,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "5643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:2"
											}
										]
									},
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "5393:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "5407:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "5419:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:2"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:2"
									},
									"scope": 821,
									"src": "5374:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "6064:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 561,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "6078:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 562,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 565,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 598,
													"nodeType": "Block",
													"src": "6252:362:2",
													"statements": [
														{
															"assignments": [
																573
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 573,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 598,
																	"src": "6266:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 572,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 577,
															"initialValue": {
																"baseExpression": {
																	"id": 574,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "6288:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 576,
																"indexExpression": {
																	"id": 575,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "6298:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 578,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "6321:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 579,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "6335:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 588,
															"nodeType": "IfStatement",
															"src": "6317:115:2",
															"trueBody": {
																"id": 587,
																"nodeType": "Block",
																"src": "6342:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 582,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 554,
																					"src": "6392:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 583,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 573,
																					"src": "6398:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 584,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 558,
																					"src": "6411:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 581,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 181,
																				"src": "6367:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 586,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:2"
																	}
																]
															}
														},
														{
															"id": 597,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 589,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 329,
																				"src": "6552:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 591,
																			"indexExpression": {
																				"id": 590,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 554,
																				"src": "6562:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 592,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 573,
																				"src": "6570:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 593,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 558,
																				"src": "6584:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 596,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:2"
																}
															]
														}
													]
												},
												"id": 599,
												"nodeType": "IfStatement",
												"src": "6074:540:2",
												"trueBody": {
													"id": 571,
													"nodeType": "Block",
													"src": "6098:148:2",
													"statements": [
														{
															"expression": {
																"id": 569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 567,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 337,
																	"src": "6214:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 568,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "6230:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 570,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 600,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "6628:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 601,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 619,
													"nodeType": "Block",
													"src": "6843:206:2",
													"statements": [
														{
															"id": 618,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 612,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 329,
																				"src": "7002:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 614,
																			"indexExpression": {
																				"id": 613,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 556,
																				"src": "7012:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 615,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 558,
																			"src": "7019:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 617,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:2"
																}
															]
														}
													]
												},
												"id": 620,
												"nodeType": "IfStatement",
												"src": "6624:425:2",
												"trueBody": {
													"id": 611,
													"nodeType": "Block",
													"src": "6646:191:2",
													"statements": [
														{
															"id": 610,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 606,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 337,
																			"src": "6791:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 607,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 558,
																			"src": "6807:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 609,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 622,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "7073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 623,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "7079:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 624,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "7083:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 621,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 833,
														"src": "7064:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "EmitStatement",
												"src": "7059:30:2"
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "6006:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "6020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "6032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:2"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:2"
									},
									"scope": 821,
									"src": "5989:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "7495:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 636,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "7509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 637,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 650,
												"nodeType": "IfStatement",
												"src": "7505:91:2",
												"trueBody": {
													"id": 649,
													"nodeType": "Block",
													"src": "7532:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 645,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 643,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 642,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 191,
																	"src": "7553:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 648,
															"nodeType": "RevertStatement",
															"src": "7546:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 652,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "7625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "7634:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 651,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "7605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:2"
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "7454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "7471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:2"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:2"
									},
									"scope": 821,
									"src": "7439:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "8021:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 669,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "8035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 670,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 673,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 683,
												"nodeType": "IfStatement",
												"src": "8031:89:2",
												"trueBody": {
													"id": 682,
													"nodeType": "Block",
													"src": "8058:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 678,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 676,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 675,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "8079:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 681,
															"nodeType": "RevertStatement",
															"src": "8072:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 685,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "8137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 686,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 690,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "8158:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 684,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "8129:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:2"
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "7980:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "7997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:2"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:2"
									},
									"scope": 821,
									"src": "7965:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "8781:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 705,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "8800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "8807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 707,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "8816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 704,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															712,
															772
														],
														"referencedDeclaration": 772,
														"src": "8791:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 710,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:2"
											}
										]
									},
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "8725:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "8740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "8757:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:2"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:2"
									},
									"scope": 821,
									"src": "8707:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "9780:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 724,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "9794:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 725,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 728,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 738,
												"nodeType": "IfStatement",
												"src": "9790:89:2",
												"trueBody": {
													"id": 737,
													"nodeType": "Block",
													"src": "9815:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 733,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 731,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 730,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "9836:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 736,
															"nodeType": "RevertStatement",
															"src": "9829:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "9892:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 740,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 753,
												"nodeType": "IfStatement",
												"src": "9888:90:2",
												"trueBody": {
													"id": 752,
													"nodeType": "Block",
													"src": "9915:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 748,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 746,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 745,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "9936:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 751,
															"nodeType": "RevertStatement",
															"src": "9929:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 754,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "9987:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 757,
															"indexExpression": {
																"id": 755,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 715,
																"src": "9999:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 758,
														"indexExpression": {
															"id": 756,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "10006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 759,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "10017:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 761,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:2"
											},
											{
												"condition": {
													"id": 762,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 721,
													"src": "10036:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 770,
												"nodeType": "IfStatement",
												"src": "10032:76:2",
												"trueBody": {
													"id": 769,
													"nodeType": "Block",
													"src": "10047:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 764,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 715,
																		"src": "10075:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 765,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "10082:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 766,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 719,
																		"src": "10091:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 763,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "10066:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 768,
															"nodeType": "EmitStatement",
															"src": "10061:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 713,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "9700:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "9715:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "9732:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "9747:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 720,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:2"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:2"
									},
									"scope": 821,
									"src": "9682:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "10485:387:2",
										"statements": [
											{
												"assignments": [
													783
												],
												"declarations": [
													{
														"constant": false,
														"id": 783,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 819,
														"src": "10495:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 782,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 788,
												"initialValue": {
													"arguments": [
														{
															"id": 785,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "10532:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 786,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "10539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 784,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 448,
														"src": "10522:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 789,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "10561:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 791,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 790,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 794,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 818,
												"nodeType": "IfStatement",
												"src": "10557:309:2",
												"trueBody": {
													"id": 817,
													"nodeType": "Block",
													"src": "10599:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 796,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "10617:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 797,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "10636:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 806,
															"nodeType": "IfStatement",
															"src": "10613:130:2",
															"trueBody": {
																"id": 805,
																"nodeType": "Block",
																"src": "10643:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 800,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 777,
																					"src": "10695:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 801,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 783,
																					"src": "10704:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 802,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 779,
																					"src": "10722:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 799,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 200,
																				"src": "10668:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 804,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:2"
																	}
																]
															}
														},
														{
															"id": 816,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 808,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 775,
																				"src": "10793:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 809,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 777,
																				"src": "10800:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 812,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 810,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 783,
																					"src": "10809:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 811,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 779,
																					"src": "10828:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 813,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 807,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				712,
																				772
																			],
																			"referencedDeclaration": 772,
																			"src": "10784:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 815,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "10421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "10436:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "10453:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:2"
									},
									"returnParameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:2"
									},
									"scope": 821,
									"src": "10396:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 822,
							"src": "1106:9768:2",
							"usedErrors": [
								181,
								186,
								191,
								200,
								205,
								210
							],
							"usedEvents": [
								833,
								842
							]
						}
					],
					"src": "105:10770:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							899
						]
					},
					"id": 900,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 823,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 824,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 899,
							"linearizedBaseContracts": [
								899
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 833,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 834,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 842,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 848,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 899,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 856,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 899,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 866,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 863,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 899,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 899,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 886,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 883,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 899,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 898,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 895,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 899,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 900,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								833,
								842
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							899
						],
						"IERC20Metadata": [
							925
						]
					},
					"id": 926,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 901,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 903,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 926,
							"sourceUnit": 900,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 902,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 899,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 905,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 899,
										"src": "306:6:4"
									},
									"id": 906,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 904,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 925,
							"linearizedBaseContracts": [
								925,
								899
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 907,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 912,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 909,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 925,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 913,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 918,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 915,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 925,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 924,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 921,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 925,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 926,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								833,
								842
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							955
						]
					},
					"id": 956,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 927,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 928,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 955,
							"linearizedBaseContracts": [
								955
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 933,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 932,
												"id": 935,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 955,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 942,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 941,
												"id": 944,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 939,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 955,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 950,
												"id": 952,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 955,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 956,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/Ddfi_lpl/valut/vault02.sol": {
				"ast": {
					"absolutePath": "contracts/Ddfi_lpl/valut/vault02.sol",
					"exportedSymbols": {
						"ERC20": [
							821
						],
						"ERC4626": [
							1355
						],
						"IERC20Metadata": [
							925
						],
						"IERC4626": [
							169
						]
					},
					"id": 1356,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 957,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".27"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC4626.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC4626.sol",
							"id": 959,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1356,
							"sourceUnit": 170,
							"src": "58:73:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 958,
										"name": "IERC4626",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 169,
										"src": "66:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 962,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1356,
							"sourceUnit": 822,
							"src": "133:84:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 960,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 821,
										"src": "141:5:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 961,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 925,
										"src": "148:14:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 963,
										"name": "ERC20",
										"nameLocations": [
											"239:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 821,
										"src": "239:5:6"
									},
									"id": 964,
									"nodeType": "InheritanceSpecifier",
									"src": "239:5:6"
								},
								{
									"baseName": {
										"id": 965,
										"name": "IERC4626",
										"nameLocations": [
											"246:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 169,
										"src": "246:8:6"
									},
									"id": 966,
									"nodeType": "InheritanceSpecifier",
									"src": "246:8:6"
								}
							],
							"canonicalName": "ERC4626",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1355,
							"linearizedBaseContracts": [
								1355,
								169,
								821,
								211,
								925,
								899,
								955
							],
							"name": "ERC4626",
							"nameLocation": "228:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 969,
									"mutability": "immutable",
									"name": "_asset",
									"nameLocation": "320:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1355,
									"src": "296:30:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$821",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 968,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 967,
											"name": "ERC20",
											"nameLocations": [
												"296:5:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 821,
											"src": "296:5:6"
										},
										"referencedDeclaration": 821,
										"src": "296:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$821",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 987,
										"nodeType": "Block",
										"src": "454:32:6",
										"statements": [
											{
												"expression": {
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 983,
														"name": "_asset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "464:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$821",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 984,
														"name": "asset_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "473:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$821",
															"typeString": "contract ERC20"
														}
													},
													"src": "464:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$821",
														"typeString": "contract ERC20"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "464:15:6"
											}
										]
									},
									"id": 988,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 979,
													"name": "name_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 974,
													"src": "438:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 980,
													"name": "symbol_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 976,
													"src": "445:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 981,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 978,
												"name": "ERC20",
												"nameLocations": [
													"432:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 821,
												"src": "432:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "432:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "asset_",
												"nameLocation": "359:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "353:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$821",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"id": 971,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 970,
														"name": "ERC20",
														"nameLocations": [
															"353:5:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 821,
														"src": "353:5:6"
													},
													"referencedDeclaration": 821,
													"src": "353:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$821",
														"typeString": "contract ERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "389:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "375:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 973,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "375:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "418:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "404:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 975,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "404:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "343:88:6"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "454:0:6"
									},
									"scope": 1355,
									"src": "332:154:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										38
									],
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "590:39:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 996,
															"name": "_asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "615:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$821",
																"typeString": "contract ERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ERC20_$821",
																"typeString": "contract ERC20"
															}
														],
														"id": 995,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "607:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 994,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "607:7:6",
															"typeDescriptions": {}
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "607:15:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 993,
												"id": 998,
												"nodeType": "Return",
												"src": "600:22:6"
											}
										]
									},
									"functionSelector": "38d52e0f",
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "asset",
									"nameLocation": "535:5:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 990,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "563:8:6"
									},
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "540:2:6"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "581:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "580:9:6"
									},
									"scope": 1355,
									"src": "526:103:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										86
									],
									"body": {
										"id": 1040,
										"nodeType": "Block",
										"src": "798:402:6",
										"statements": [
											{
												"expression": {
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1009,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "922:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1011,
																"name": "assets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "946:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1010,
															"name": "previewDeposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "931:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "931:22:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "922:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "922:31:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1018,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1032:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1036:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1032:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1022,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1052:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC4626_$1355",
																		"typeString": "contract ERC4626"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC4626_$1355",
																		"typeString": "contract ERC4626"
																	}
																],
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1044:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1020,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1044:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1044:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1024,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "1059:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1015,
															"name": "_asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "1012:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$821",
																"typeString": "contract ERC20"
															}
														},
														"id": 1017,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1019:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 504,
														"src": "1012:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1012:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "1012:54:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1028,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "1082:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1029,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "1092:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1027,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "1076:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1076:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "1076:23:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1033,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1156:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1160:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1156:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1035,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "1168:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1036,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "1178:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1037,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "1186:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1032,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1148:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1148:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1039,
												"nodeType": "EmitStatement",
												"src": "1143:50:6"
											}
										]
									},
									"functionSelector": "6e553f65",
									"id": 1041,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "694:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "719:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "711:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "711:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "743:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "735:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "735:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:56:6"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "790:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "782:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "781:16:6"
									},
									"scope": 1355,
									"src": "685:515:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										112
									],
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "1384:357:6",
										"statements": [
											{
												"expression": {
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1050,
														"name": "assets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1048,
														"src": "1466:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1052,
																"name": "shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1043,
																"src": "1487:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1051,
															"name": "previewMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "1475:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1475:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1466:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "1466:28:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1059,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1573:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1577:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1573:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1063,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1593:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC4626_$1355",
																		"typeString": "contract ERC4626"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC4626_$1355",
																		"typeString": "contract ERC4626"
																	}
																],
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1585:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1061,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1585:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1585:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1065,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "1600:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1056,
															"name": "_asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "1553:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$821",
																"typeString": "contract ERC20"
															}
														},
														"id": 1058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1560:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 504,
														"src": "1553:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1553:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "1553:54:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1069,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "1623:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1070,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "1633:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1068,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "1617:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1617:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "1617:23:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1074,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1697:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1701:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1697:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1076,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "1709:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1077,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "1719:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1078,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "1727:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1073,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1689:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1689:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "EmitStatement",
												"src": "1684:50:6"
											}
										]
									},
									"functionSelector": "94bf804d",
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1283:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "1305:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "1297:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1297:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1329:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "1321:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1287:56:6"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "1376:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "1368:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1368:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1367:16:6"
									},
									"scope": 1355,
									"src": "1274:467:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										140
									],
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "1892:618:6",
										"statements": [
											{
												"expression": {
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1093,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "1969:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1095,
																"name": "assets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1084,
																"src": "1994:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1094,
															"name": "previewWithdraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "1978:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1978:23:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1969:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "1969:32:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1099,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2082:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2086:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2082:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1101,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "2096:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2082:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1111,
												"nodeType": "IfStatement",
												"src": "2078:92:6",
												"trueBody": {
													"id": 1110,
													"nodeType": "Block",
													"src": "2103:67:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1104,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1088,
																		"src": "2133:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1105,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2140:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2144:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2140:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1107,
																		"name": "shares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1091,
																		"src": "2152:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1103,
																	"name": "_spendAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "2117:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2117:42:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1109,
															"nodeType": "ExpressionStatement",
															"src": "2117:42:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1113,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "2271:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1114,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "2278:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1112,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "2265:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2265:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1116,
												"nodeType": "ExpressionStatement",
												"src": "2265:20:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1120,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "2383:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1121,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "2393:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1117,
															"name": "_asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "2367:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$821",
																"typeString": "contract ERC20"
															}
														},
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2374:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 431,
														"src": "2367:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2367:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "2367:33:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1125,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2459:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2463:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2459:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1127,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "2471:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1128,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "2481:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1129,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "2488:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1130,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "2496:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1124,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "2450:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2450:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1132,
												"nodeType": "EmitStatement",
												"src": "2445:58:6"
											}
										]
									},
									"functionSelector": "b460af94",
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1764:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "1790:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "1782:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1782:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1814:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "1806:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1806:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1840:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "1832:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:79:6"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "1884:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "1876:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1876:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1875:16:6"
									},
									"scope": 1355,
									"src": "1755:755:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										168
									],
									"body": {
										"id": 1185,
										"nodeType": "Block",
										"src": "2759:511:6",
										"statements": [
											{
												"expression": {
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1145,
														"name": "assets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "2840:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1147,
																"name": "shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1136,
																"src": "2863:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1146,
															"name": "previewRedeem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "2849:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2849:21:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2840:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1150,
												"nodeType": "ExpressionStatement",
												"src": "2840:30:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1151,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2951:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2955:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2951:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1153,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "2965:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2951:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1163,
												"nodeType": "IfStatement",
												"src": "2947:92:6",
												"trueBody": {
													"id": 1162,
													"nodeType": "Block",
													"src": "2972:67:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1156,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1140,
																		"src": "3002:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1157,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3009:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3013:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3009:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1159,
																		"name": "shares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1136,
																		"src": "3021:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1155,
																	"name": "_spendAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "2986:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2986:42:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1161,
															"nodeType": "ExpressionStatement",
															"src": "2986:42:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1165,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "3103:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1166,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "3110:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1164,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "3097:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3097:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "3097:20:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1172,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "3143:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1173,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "3153:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1169,
															"name": "_asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "3127:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$821",
																"typeString": "contract ERC20"
															}
														},
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3134:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 431,
														"src": "3127:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3127:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1175,
												"nodeType": "ExpressionStatement",
												"src": "3127:33:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1177,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3219:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3223:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3219:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1179,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "3231:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1180,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "3241:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1181,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "3248:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1182,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "3256:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1176,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "3210:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3210:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1184,
												"nodeType": "EmitStatement",
												"src": "3205:58:6"
											}
										]
									},
									"functionSelector": "ba087652",
									"id": 1186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "redeem",
									"nameLocation": "2633:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "2657:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "2649:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2649:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "2681:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "2673:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2673:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2707:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "2699:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2639:79:6"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "2751:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "2743:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2742:16:6"
									},
									"scope": 1355,
									"src": "2624:646:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "3383:100:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1195,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3470:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC4626_$1355",
																		"typeString": "contract ERC4626"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC4626_$1355",
																		"typeString": "contract ERC4626"
																	}
																],
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3462:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1193,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3462:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3462:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1191,
															"name": "_asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "3445:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$821",
																"typeString": "contract ERC20"
															}
														},
														"id": 1192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3452:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 407,
														"src": "3445:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3445:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1190,
												"id": 1198,
												"nodeType": "Return",
												"src": "3438:38:6"
											}
										]
									},
									"functionSelector": "01e1d114",
									"id": 1200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalAssets",
									"nameLocation": "3331:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3342:2:6"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1200,
												"src": "3374:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:9:6"
									},
									"scope": 1355,
									"src": "3322:161:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										52
									],
									"body": {
										"id": 1225,
										"nodeType": "Block",
										"src": "3631:240:6",
										"statements": [
											{
												"assignments": [
													1208
												],
												"declarations": [
													{
														"constant": false,
														"id": 1208,
														"mutability": "mutable",
														"name": "supply",
														"nameLocation": "3649:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1225,
														"src": "3641:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1207,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3641:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1211,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1209,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "3658:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3658:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3641:30:6"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1212,
															"name": "supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "3808:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3818:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3808:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1216,
																		"name": "assets",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1202,
																		"src": "3832:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1217,
																		"name": "supply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1208,
																		"src": "3841:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3832:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1219,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3831:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1220,
																"name": "totalAssets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1200,
																"src": "3851:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3851:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3831:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3808:56:6",
													"trueExpression": {
														"id": 1215,
														"name": "assets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "3822:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1206,
												"id": 1224,
												"nodeType": "Return",
												"src": "3801:63:6"
											}
										]
									},
									"functionSelector": "c6e6f592",
									"id": 1226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "convertToShares",
									"nameLocation": "3547:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "3580:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "3572:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3572:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3562:30:6"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "3622:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3622:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3621:9:6"
									},
									"scope": 1355,
									"src": "3538:333:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										60
									],
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "4082:240:6",
										"statements": [
											{
												"assignments": [
													1234
												],
												"declarations": [
													{
														"constant": false,
														"id": 1234,
														"mutability": "mutable",
														"name": "supply",
														"nameLocation": "4100:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1251,
														"src": "4092:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1233,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4092:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1237,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1235,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "4109:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4109:13:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4092:30:6"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1238,
															"name": "supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "4259:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4269:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4259:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1242,
																		"name": "shares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1228,
																		"src": "4283:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1243,
																			"name": "totalAssets",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1200,
																			"src": "4292:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4292:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4283:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1246,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4282:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1247,
															"name": "supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "4309:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4282:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4259:56:6",
													"trueExpression": {
														"id": 1241,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "4273:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1232,
												"id": 1250,
												"nodeType": "Return",
												"src": "4252:63:6"
											}
										]
									},
									"functionSelector": "07a2d13a",
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "convertToAssets",
									"nameLocation": "3998:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "4031:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "4023:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4023:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4013:30:6"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "4073:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4073:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:9:6"
									},
									"scope": 1355,
									"src": "3989:333:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "4482:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1260,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "4515:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1259,
														"name": "convertToShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1226,
														"src": "4499:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4499:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1258,
												"id": 1262,
												"nodeType": "Return",
												"src": "4492:30:6"
											}
										]
									},
									"functionSelector": "ef8b30f7",
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "previewDeposit",
									"nameLocation": "4399:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "4431:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "4423:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4413:30:6"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "4473:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4473:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:9:6"
									},
									"scope": 1355,
									"src": "4390:139:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										102
									],
									"body": {
										"id": 1275,
										"nodeType": "Block",
										"src": "4671:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1272,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "4704:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1271,
														"name": "convertToAssets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "4688:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4688:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1270,
												"id": 1274,
												"nodeType": "Return",
												"src": "4681:30:6"
											}
										]
									},
									"functionSelector": "b3d7f6b9",
									"id": 1276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "previewMint",
									"nameLocation": "4605:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "4625:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "4617:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4617:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4616:16:6"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "4662:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:9:6"
									},
									"scope": 1355,
									"src": "4596:122:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										128
									],
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "4879:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1284,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "4912:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1283,
														"name": "convertToShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1226,
														"src": "4896:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4896:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1282,
												"id": 1286,
												"nodeType": "Return",
												"src": "4889:30:6"
											}
										]
									},
									"functionSelector": "0a28a477",
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "previewWithdraw",
									"nameLocation": "4795:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "4828:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "4820:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4820:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4810:30:6"
									},
									"returnParameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "4870:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4869:9:6"
									},
									"scope": 1355,
									"src": "4786:140:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										156
									],
									"body": {
										"id": 1299,
										"nodeType": "Block",
										"src": "5084:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1296,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1290,
															"src": "5117:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1295,
														"name": "convertToAssets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "5101:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5101:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1294,
												"id": 1298,
												"nodeType": "Return",
												"src": "5094:30:6"
											}
										]
									},
									"functionSelector": "4cdad506",
									"id": 1300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "previewRedeem",
									"nameLocation": "5002:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "5033:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "5025:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5015:30:6"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "5075:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:6"
									},
									"scope": 1355,
									"src": "4993:138:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										68
									],
									"body": {
										"id": 1313,
										"nodeType": "Block",
										"src": "5278:41:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5300:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1308,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5300:7:6",
																	"typeDescriptions": {}
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																}
															],
															"id": 1307,
															"name": "type",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967269,
															"src": "5295:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1310,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5295:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_magic_meta_type_t_uint256",
															"typeString": "type(uint256)"
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "5309:3:6",
													"memberName": "max",
													"nodeType": "MemberAccess",
													"src": "5295:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1306,
												"id": 1312,
												"nodeType": "Return",
												"src": "5288:24:6"
											}
										]
									},
									"functionSelector": "402d267d",
									"id": 1314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxDeposit",
									"nameLocation": "5220:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "5231:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5231:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:9:6"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "5269:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5269:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5268:9:6"
									},
									"scope": 1355,
									"src": "5211:108:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										94
									],
									"body": {
										"id": 1327,
										"nodeType": "Block",
										"src": "5424:41:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5446:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1322,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5446:7:6",
																	"typeDescriptions": {}
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																}
															],
															"id": 1321,
															"name": "type",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967269,
															"src": "5441:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5441:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_magic_meta_type_t_uint256",
															"typeString": "type(uint256)"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "5455:3:6",
													"memberName": "max",
													"nodeType": "MemberAccess",
													"src": "5441:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1320,
												"id": 1326,
												"nodeType": "Return",
												"src": "5434:24:6"
											}
										]
									},
									"functionSelector": "c63d75b6",
									"id": 1328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxMint",
									"nameLocation": "5369:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "5377:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5377:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5376:9:6"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "5415:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5415:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5414:9:6"
									},
									"scope": 1355,
									"src": "5360:105:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										120
									],
									"body": {
										"id": 1341,
										"nodeType": "Block",
										"src": "5599:57:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1337,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1330,
																	"src": "5642:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1336,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "5632:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5632:16:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1335,
														"name": "convertToAssets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "5616:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5616:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1334,
												"id": 1340,
												"nodeType": "Return",
												"src": "5609:40:6"
											}
										]
									},
									"functionSelector": "ce96cb77",
									"id": 1342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxWithdraw",
									"nameLocation": "5534:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5554:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "5546:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5546:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5545:15:6"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "5590:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5590:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5589:9:6"
									},
									"scope": 1355,
									"src": "5525:131:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										148
									],
									"body": {
										"id": 1353,
										"nodeType": "Block",
										"src": "5778:40:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1350,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "5805:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1349,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "5795:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5795:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1348,
												"id": 1352,
												"nodeType": "Return",
												"src": "5788:23:6"
											}
										]
									},
									"functionSelector": "d905777e",
									"id": 1354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxRedeem",
									"nameLocation": "5715:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5733:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "5725:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:15:6"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "5769:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5769:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5768:9:6"
									},
									"scope": 1355,
									"src": "5706:112:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1356,
							"src": "219:5601:6",
							"usedErrors": [
								181,
								186,
								191,
								200,
								205,
								210
							],
							"usedEvents": [
								20,
								32,
								833,
								842
							]
						}
					],
					"src": "32:5817:6"
				},
				"id": 6
			}
		}
	}
}