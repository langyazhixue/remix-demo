{
	"id": "bf21d8289b094625bd6cd04102e9045e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol\";\nimport \"@openzeppelin/contracts/interfaces/IERC1363.sol\";\n\ncontract TokenReceiver is IERC1363Receiver {\n\taddress internal erc1363Token;\n\n\tconstructor(address erc1363Token_) {\n\t\terc1363Token = erc1363Token_;\n\t}\n\n\tmapping(address user => uint256 balance) public balances;\n\n\tfunction onTransferReceived(\n\t\taddress operator,\n\t\taddress from,\n\t\tuint256 value,\n\t\tbytes calldata data\n\t) external returns (bytes4) {\n\t\trequire(msg.sender == erc1363Token, \"not the expected token\");\n\t\tbalances[from] += value;\n\t\treturn this.onTransferReceived.selector;\n\t}\n\n\tfunction withdraw(uint256 value) external {\n\t\trequire(balances[msg.sender] >= value, \"balance too low\");\n\t\tbalances[msg.sender] -= value;\n\t\n\t\tIERC1363(erc1363Token).transfer(msg.sender, value);\n\t}\n\n}"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title IERC1363Receiver\n * @dev Interface for any contract that wants to support `transferAndCall` or `transferFromAndCall`\n * from ERC-1363 token contracts.\n */\ninterface IERC1363Receiver {\n    /**\n     * @dev Whenever ERC-1363 tokens are transferred to this contract via `transferAndCall` or `transferFromAndCall`\n     * by `operator` from `from`, this function is called.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))`\n     * (i.e. 0x88a7ca5c, or its own function selector).\n     *\n     * @param operator The address which called `transferAndCall` or `transferFromAndCall` function.\n     * @param from The address which the tokens are transferred from.\n     * @param value The amount of tokens transferred.\n     * @param data Additional data with no specified format.\n     * @return `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` if transfer is allowed unless throwing.\n     */\n    function onTransferReceived(\n        address operator,\n        address from,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol": {
				"IERC1363Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onTransferReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support `transferAndCall` or `transferFromAndCall` from ERC-1363 token contracts.",
						"kind": "dev",
						"methods": {
							"onTransferReceived(address,address,uint256,bytes)": {
								"details": "Whenever ERC-1363 tokens are transferred to this contract via `transferAndCall` or `transferFromAndCall` by `operator` from `from`, this function is called. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` (i.e. 0x88a7ca5c, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format.",
									"from": "The address which the tokens are transferred from.",
									"operator": "The address which called `transferAndCall` or `transferFromAndCall` function.",
									"value": "The amount of tokens transferred."
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` if transfer is allowed unless throwing."
								}
							}
						},
						"title": "IERC1363Receiver",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onTransferReceived(address,address,uint256,bytes)": "88a7ca5c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTransferReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support `transferAndCall` or `transferFromAndCall` from ERC-1363 token contracts.\",\"kind\":\"dev\",\"methods\":{\"onTransferReceived(address,address,uint256,bytes)\":{\"details\":\"Whenever ERC-1363 tokens are transferred to this contract via `transferAndCall` or `transferFromAndCall` by `operator` from `from`, this function is called. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onTransferReceived(address,address,uint256,bytes)\\\"))` (i.e. 0x88a7ca5c, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format.\",\"from\":\"The address which the tokens are transferred from.\",\"operator\":\"The address which called `transferAndCall` or `transferFromAndCall` function.\",\"value\":\"The amount of tokens transferred.\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onTransferReceived(address,address,uint256,bytes)\\\"))` if transfer is allowed unless throwing.\"}}},\"title\":\"IERC1363Receiver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol\":\"IERC1363Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol\":{\"keccak256\":\"0xc988322f9ed15c95b435e5fbb51767b0bd8c19a4a57ca360af409122cede64c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://baf96a3317c8b2d14dd805833efca40c9a38cbf4e2a9c375d88f98b2f1ea5232\",\"dweb:/ipfs/QmTKbzuQBM62yERCNWtfoEK12cFj4sQcEFLLN64h6kEmXn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol": {
				"TokenReceiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "erc1363Token_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onTransferReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onTransferReceived(address,address,uint256,bytes)": {
								"details": "Whenever ERC-1363 tokens are transferred to this contract via `transferAndCall` or `transferFromAndCall` by `operator` from `from`, this function is called. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` (i.e. 0x88a7ca5c, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format.",
									"from": "The address which the tokens are transferred from.",
									"operator": "The address which called `transferAndCall` or `transferFromAndCall` function.",
									"value": "The amount of tokens transferred."
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` if transfer is allowed unless throwing."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":183:870  contract TokenReceiver is IERC1363Receiver {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":262:333  constructor(address erc1363Token_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":316:329  erc1363Token_ */\n  dup1\n    /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":301:313  erc1363Token */\n  0x00\n  0x00\n    /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":301:329  erc1363Token = erc1363Token_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":262:333  constructor(address erc1363Token_) {... */\n  pop\n    /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":183:870  contract TokenReceiver is IERC1363Receiver {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":183:870  contract TokenReceiver is IERC1363Receiver {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":183:870  contract TokenReceiver is IERC1363Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x27e235e3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x88a7ca5c\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":336:392  mapping(address user => uint256 balance) public balances */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":671:867  function withdraw(uint256 value) external {... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":396:668  function onTransferReceived(... */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":336:392  mapping(address user => uint256 balance) public balances */\n    tag_9:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":671:867  function withdraw(uint256 value) external {... */\n    tag_15:\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":749:754  value */\n      dup1\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":725:733  balances */\n      0x01\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":725:745  balances[msg.sender] */\n      0x00\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":734:744  msg.sender */\n      caller\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":725:745  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":725:754  balances[msg.sender] >= value */\n      lt\n      iszero\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":717:774  require(balances[msg.sender] >= value, \"balance too low\") */\n      tag_23\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_24\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_23:\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":802:807  value */\n      dup1\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":778:786  balances */\n      0x01\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":778:798  balances[msg.sender] */\n      0x00\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":787:797  msg.sender */\n      caller\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":778:798  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":778:807  balances[msg.sender] -= value */\n      dup3\n      dup3\n      sload\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":822:834  erc1363Token */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":813:844  IERC1363(erc1363Token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":845:855  msg.sender */\n      caller\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":857:862  value */\n      dup4\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":813:863  IERC1363(erc1363Token).transfer(msg.sender, value) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_28\n      swap3\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_31\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_31:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      pop\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":671:867  function withdraw(uint256 value) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":396:668  function onTransferReceived(... */\n    tag_19:\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":521:527  bytes4 */\n      0x00\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":555:567  erc1363Token */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":541:567  msg.sender == erc1363Token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":541:551  msg.sender */\n      caller\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":541:567  msg.sender == erc1363Token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":533:594  require(msg.sender == erc1363Token, \"not the expected token\") */\n      tag_35\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_36\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_35:\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":616:621  value */\n      dup4\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":598:606  balances */\n      0x01\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":598:612  balances[from] */\n      0x00\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":607:611  from */\n      dup8\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":598:612  balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":598:621  balances[from] += value */\n      dup3\n      dup3\n      sload\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":632:664  this.onTransferReceived.selector */\n      shl(0xe0, 0x88a7ca5c)\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":625:664  return this.onTransferReceived.selector */\n      swap1\n      pop\n        /* \"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":396:668  function onTransferReceived(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_41:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_42:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_43:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_44:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_73\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_43\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_45:\n        /* \"#utility.yul\":641:665   */\n      tag_75\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_44\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_76\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_76:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_46:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_78\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_45\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_8:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_81\n      tag_41\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":917:1036   */\n    tag_80:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_82\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_46\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_47:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_48:\n        /* \"#utility.yul\":1346:1370   */\n      tag_85\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_47\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_11:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_87\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_48\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_49:\n        /* \"#utility.yul\":1684:1708   */\n      tag_89\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_47\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_90\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      0x00\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_90:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_50:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_92\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_49\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_14:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_95\n      tag_41\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":1960:2079   */\n    tag_94:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_96\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_50\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2336   */\n    tag_51:\n        /* \"#utility.yul\":2328:2329   */\n      0x00\n        /* \"#utility.yul\":2325:2326   */\n      0x00\n        /* \"#utility.yul\":2318:2330   */\n      revert\n        /* \"#utility.yul\":2342:2459   */\n    tag_52:\n        /* \"#utility.yul\":2451:2452   */\n      0x00\n        /* \"#utility.yul\":2448:2449   */\n      0x00\n        /* \"#utility.yul\":2441:2453   */\n      revert\n        /* \"#utility.yul\":2465:2582   */\n    tag_53:\n        /* \"#utility.yul\":2574:2575   */\n      0x00\n        /* \"#utility.yul\":2571:2572   */\n      0x00\n        /* \"#utility.yul\":2564:2576   */\n      revert\n        /* \"#utility.yul\":2601:3153   */\n    tag_54:\n        /* \"#utility.yul\":2658:2666   */\n      0x00\n        /* \"#utility.yul\":2668:2674   */\n      0x00\n        /* \"#utility.yul\":2718:2721   */\n      dup4\n        /* \"#utility.yul\":2711:2715   */\n      0x1f\n        /* \"#utility.yul\":2703:2709   */\n      dup5\n        /* \"#utility.yul\":2699:2716   */\n      add\n        /* \"#utility.yul\":2695:2722   */\n      slt\n        /* \"#utility.yul\":2685:2807   */\n      tag_101\n      jumpi\n        /* \"#utility.yul\":2726:2805   */\n      tag_102\n      tag_51\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":2685:2807   */\n    tag_101:\n        /* \"#utility.yul\":2839:2845   */\n      dup3\n        /* \"#utility.yul\":2826:2846   */\n      calldataload\n        /* \"#utility.yul\":2816:2846   */\n      swap1\n      pop\n        /* \"#utility.yul\":2869:2887   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2861:2867   */\n      dup2\n        /* \"#utility.yul\":2858:2888   */\n      gt\n        /* \"#utility.yul\":2855:2972   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":2891:2970   */\n      tag_104\n      tag_52\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":2855:2972   */\n    tag_103:\n        /* \"#utility.yul\":3005:3009   */\n      0x20\n        /* \"#utility.yul\":2997:3003   */\n      dup4\n        /* \"#utility.yul\":2993:3010   */\n      add\n        /* \"#utility.yul\":2981:3010   */\n      swap2\n      pop\n        /* \"#utility.yul\":3059:3062   */\n      dup4\n        /* \"#utility.yul\":3051:3055   */\n      0x01\n        /* \"#utility.yul\":3043:3049   */\n      dup3\n        /* \"#utility.yul\":3039:3056   */\n      mul\n        /* \"#utility.yul\":3029:3037   */\n      dup4\n        /* \"#utility.yul\":3025:3057   */\n      add\n        /* \"#utility.yul\":3022:3063   */\n      gt\n        /* \"#utility.yul\":3019:3147   */\n      iszero\n      tag_105\n      jumpi\n        /* \"#utility.yul\":3066:3145   */\n      tag_106\n      tag_53\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":3019:3147   */\n    tag_105:\n        /* \"#utility.yul\":2601:3153   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3159:4122   */\n    tag_18:\n        /* \"#utility.yul\":3256:3262   */\n      0x00\n        /* \"#utility.yul\":3264:3270   */\n      0x00\n        /* \"#utility.yul\":3272:3278   */\n      0x00\n        /* \"#utility.yul\":3280:3286   */\n      0x00\n        /* \"#utility.yul\":3288:3294   */\n      0x00\n        /* \"#utility.yul\":3337:3340   */\n      0x80\n        /* \"#utility.yul\":3325:3334   */\n      dup7\n        /* \"#utility.yul\":3316:3323   */\n      dup9\n        /* \"#utility.yul\":3312:3335   */\n      sub\n        /* \"#utility.yul\":3308:3341   */\n      slt\n        /* \"#utility.yul\":3305:3425   */\n      iszero\n      tag_108\n      jumpi\n        /* \"#utility.yul\":3344:3423   */\n      tag_109\n      tag_41\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3305:3425   */\n    tag_108:\n        /* \"#utility.yul\":3464:3465   */\n      0x00\n        /* \"#utility.yul\":3489:3542   */\n      tag_110\n        /* \"#utility.yul\":3534:3541   */\n      dup9\n        /* \"#utility.yul\":3525:3531   */\n      dup3\n        /* \"#utility.yul\":3514:3523   */\n      dup10\n        /* \"#utility.yul\":3510:3532   */\n      add\n        /* \"#utility.yul\":3489:3542   */\n      tag_46\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":3479:3542   */\n      swap6\n      pop\n        /* \"#utility.yul\":3435:3552   */\n      pop\n        /* \"#utility.yul\":3591:3593   */\n      0x20\n        /* \"#utility.yul\":3617:3670   */\n      tag_111\n        /* \"#utility.yul\":3662:3669   */\n      dup9\n        /* \"#utility.yul\":3653:3659   */\n      dup3\n        /* \"#utility.yul\":3642:3651   */\n      dup10\n        /* \"#utility.yul\":3638:3660   */\n      add\n        /* \"#utility.yul\":3617:3670   */\n      tag_46\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":3607:3670   */\n      swap5\n      pop\n        /* \"#utility.yul\":3562:3680   */\n      pop\n        /* \"#utility.yul\":3719:3721   */\n      0x40\n        /* \"#utility.yul\":3745:3798   */\n      tag_112\n        /* \"#utility.yul\":3790:3797   */\n      dup9\n        /* \"#utility.yul\":3781:3787   */\n      dup3\n        /* \"#utility.yul\":3770:3779   */\n      dup10\n        /* \"#utility.yul\":3766:3788   */\n      add\n        /* \"#utility.yul\":3745:3798   */\n      tag_50\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":3735:3798   */\n      swap4\n      pop\n        /* \"#utility.yul\":3690:3808   */\n      pop\n        /* \"#utility.yul\":3875:3877   */\n      0x60\n        /* \"#utility.yul\":3864:3873   */\n      dup7\n        /* \"#utility.yul\":3860:3878   */\n      add\n        /* \"#utility.yul\":3847:3879   */\n      calldataload\n        /* \"#utility.yul\":3906:3924   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3898:3904   */\n      dup2\n        /* \"#utility.yul\":3895:3925   */\n      gt\n        /* \"#utility.yul\":3892:4009   */\n      iszero\n      tag_113\n      jumpi\n        /* \"#utility.yul\":3928:4007   */\n      tag_114\n      tag_42\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":3892:4009   */\n    tag_113:\n        /* \"#utility.yul\":4041:4105   */\n      tag_115\n        /* \"#utility.yul\":4097:4104   */\n      dup9\n        /* \"#utility.yul\":4088:4094   */\n      dup3\n        /* \"#utility.yul\":4077:4086   */\n      dup10\n        /* \"#utility.yul\":4073:4095   */\n      add\n        /* \"#utility.yul\":4041:4105   */\n      tag_54\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":4023:4105   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":3818:4115   */\n      pop\n        /* \"#utility.yul\":3159:4122   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4128:4277   */\n    tag_55:\n        /* \"#utility.yul\":4164:4171   */\n      0x00\n        /* \"#utility.yul\":4204:4270   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4197:4202   */\n      dup3\n        /* \"#utility.yul\":4193:4271   */\n      and\n        /* \"#utility.yul\":4182:4271   */\n      swap1\n      pop\n        /* \"#utility.yul\":4128:4277   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4283:4398   */\n    tag_56:\n        /* \"#utility.yul\":4368:4391   */\n      tag_118\n        /* \"#utility.yul\":4385:4390   */\n      dup2\n        /* \"#utility.yul\":4368:4391   */\n      tag_55\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":4363:4366   */\n      dup3\n        /* \"#utility.yul\":4356:4392   */\n      mstore\n        /* \"#utility.yul\":4283:4398   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4404:4622   */\n    tag_21:\n        /* \"#utility.yul\":4495:4499   */\n      0x00\n        /* \"#utility.yul\":4533:4535   */\n      0x20\n        /* \"#utility.yul\":4522:4531   */\n      dup3\n        /* \"#utility.yul\":4518:4536   */\n      add\n        /* \"#utility.yul\":4510:4536   */\n      swap1\n      pop\n        /* \"#utility.yul\":4546:4615   */\n      tag_120\n        /* \"#utility.yul\":4612:4613   */\n      0x00\n        /* \"#utility.yul\":4601:4610   */\n      dup4\n        /* \"#utility.yul\":4597:4614   */\n      add\n        /* \"#utility.yul\":4588:4594   */\n      dup5\n        /* \"#utility.yul\":4546:4615   */\n      tag_56\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":4404:4622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4628:4797   */\n    tag_57:\n        /* \"#utility.yul\":4712:4723   */\n      0x00\n        /* \"#utility.yul\":4746:4752   */\n      dup3\n        /* \"#utility.yul\":4741:4744   */\n      dup3\n        /* \"#utility.yul\":4734:4753   */\n      mstore\n        /* \"#utility.yul\":4786:4790   */\n      0x20\n        /* \"#utility.yul\":4781:4784   */\n      dup3\n        /* \"#utility.yul\":4777:4791   */\n      add\n        /* \"#utility.yul\":4762:4791   */\n      swap1\n      pop\n        /* \"#utility.yul\":4628:4797   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4803:4968   */\n    tag_58:\n        /* \"#utility.yul\":4943:4960   */\n      0x62616c616e636520746f6f206c6f770000000000000000000000000000000000\n        /* \"#utility.yul\":4939:4940   */\n      0x00\n        /* \"#utility.yul\":4931:4937   */\n      dup3\n        /* \"#utility.yul\":4927:4941   */\n      add\n        /* \"#utility.yul\":4920:4961   */\n      mstore\n        /* \"#utility.yul\":4803:4968   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4974:5340   */\n    tag_59:\n        /* \"#utility.yul\":5116:5119   */\n      0x00\n        /* \"#utility.yul\":5137:5204   */\n      tag_124\n        /* \"#utility.yul\":5201:5203   */\n      0x0f\n        /* \"#utility.yul\":5196:5199   */\n      dup4\n        /* \"#utility.yul\":5137:5204   */\n      tag_57\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":5130:5204   */\n      swap2\n      pop\n        /* \"#utility.yul\":5213:5306   */\n      tag_125\n        /* \"#utility.yul\":5302:5305   */\n      dup3\n        /* \"#utility.yul\":5213:5306   */\n      tag_58\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":5331:5333   */\n      0x20\n        /* \"#utility.yul\":5326:5329   */\n      dup3\n        /* \"#utility.yul\":5322:5334   */\n      add\n        /* \"#utility.yul\":5315:5334   */\n      swap1\n      pop\n        /* \"#utility.yul\":4974:5340   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5346:5765   */\n    tag_25:\n        /* \"#utility.yul\":5512:5516   */\n      0x00\n        /* \"#utility.yul\":5550:5552   */\n      0x20\n        /* \"#utility.yul\":5539:5548   */\n      dup3\n        /* \"#utility.yul\":5535:5553   */\n      add\n        /* \"#utility.yul\":5527:5553   */\n      swap1\n      pop\n        /* \"#utility.yul\":5599:5608   */\n      dup2\n        /* \"#utility.yul\":5593:5597   */\n      dup2\n        /* \"#utility.yul\":5589:5609   */\n      sub\n        /* \"#utility.yul\":5585:5586   */\n      0x00\n        /* \"#utility.yul\":5574:5583   */\n      dup4\n        /* \"#utility.yul\":5570:5587   */\n      add\n        /* \"#utility.yul\":5563:5610   */\n      mstore\n        /* \"#utility.yul\":5627:5758   */\n      tag_127\n        /* \"#utility.yul\":5753:5757   */\n      dup2\n        /* \"#utility.yul\":5627:5758   */\n      tag_59\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":5619:5758   */\n      swap1\n      pop\n        /* \"#utility.yul\":5346:5765   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5771:5951   */\n    tag_60:\n        /* \"#utility.yul\":5819:5896   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5816:5817   */\n      0x00\n        /* \"#utility.yul\":5809:5897   */\n      mstore\n        /* \"#utility.yul\":5916:5920   */\n      0x11\n        /* \"#utility.yul\":5913:5914   */\n      0x04\n        /* \"#utility.yul\":5906:5921   */\n      mstore\n        /* \"#utility.yul\":5940:5944   */\n      0x24\n        /* \"#utility.yul\":5937:5938   */\n      0x00\n        /* \"#utility.yul\":5930:5945   */\n      revert\n        /* \"#utility.yul\":5957:6151   */\n    tag_27:\n        /* \"#utility.yul\":5997:6001   */\n      0x00\n        /* \"#utility.yul\":6017:6037   */\n      tag_130\n        /* \"#utility.yul\":6035:6036   */\n      dup3\n        /* \"#utility.yul\":6017:6037   */\n      tag_47\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":6012:6037   */\n      swap2\n      pop\n        /* \"#utility.yul\":6051:6071   */\n      tag_131\n        /* \"#utility.yul\":6069:6070   */\n      dup4\n        /* \"#utility.yul\":6051:6071   */\n      tag_47\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":6046:6071   */\n      swap3\n      pop\n        /* \"#utility.yul\":6095:6096   */\n      dup3\n        /* \"#utility.yul\":6092:6093   */\n      dup3\n        /* \"#utility.yul\":6088:6097   */\n      sub\n        /* \"#utility.yul\":6080:6097   */\n      swap1\n      pop\n        /* \"#utility.yul\":6119:6120   */\n      dup2\n        /* \"#utility.yul\":6113:6117   */\n      dup2\n        /* \"#utility.yul\":6110:6121   */\n      gt\n        /* \"#utility.yul\":6107:6144   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":6124:6142   */\n      tag_133\n      tag_60\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":6107:6144   */\n    tag_132:\n        /* \"#utility.yul\":5957:6151   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6157:6275   */\n    tag_61:\n        /* \"#utility.yul\":6244:6268   */\n      tag_135\n        /* \"#utility.yul\":6262:6267   */\n      dup2\n        /* \"#utility.yul\":6244:6268   */\n      tag_44\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":6239:6242   */\n      dup3\n        /* \"#utility.yul\":6232:6269   */\n      mstore\n        /* \"#utility.yul\":6157:6275   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6281:6613   */\n    tag_29:\n        /* \"#utility.yul\":6402:6406   */\n      0x00\n        /* \"#utility.yul\":6440:6442   */\n      0x40\n        /* \"#utility.yul\":6429:6438   */\n      dup3\n        /* \"#utility.yul\":6425:6443   */\n      add\n        /* \"#utility.yul\":6417:6443   */\n      swap1\n      pop\n        /* \"#utility.yul\":6453:6524   */\n      tag_137\n        /* \"#utility.yul\":6521:6522   */\n      0x00\n        /* \"#utility.yul\":6510:6519   */\n      dup4\n        /* \"#utility.yul\":6506:6523   */\n      add\n        /* \"#utility.yul\":6497:6503   */\n      dup6\n        /* \"#utility.yul\":6453:6524   */\n      tag_61\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":6534:6606   */\n      tag_138\n        /* \"#utility.yul\":6602:6604   */\n      0x20\n        /* \"#utility.yul\":6591:6600   */\n      dup4\n        /* \"#utility.yul\":6587:6605   */\n      add\n        /* \"#utility.yul\":6578:6584   */\n      dup5\n        /* \"#utility.yul\":6534:6606   */\n      tag_48\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":6281:6613   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6619:6709   */\n    tag_62:\n        /* \"#utility.yul\":6653:6660   */\n      0x00\n        /* \"#utility.yul\":6696:6701   */\n      dup2\n        /* \"#utility.yul\":6689:6702   */\n      iszero\n        /* \"#utility.yul\":6682:6703   */\n      iszero\n        /* \"#utility.yul\":6671:6703   */\n      swap1\n      pop\n        /* \"#utility.yul\":6619:6709   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6715:6831   */\n    tag_63:\n        /* \"#utility.yul\":6785:6806   */\n      tag_141\n        /* \"#utility.yul\":6800:6805   */\n      dup2\n        /* \"#utility.yul\":6785:6806   */\n      tag_62\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":6778:6783   */\n      dup2\n        /* \"#utility.yul\":6775:6807   */\n      eq\n        /* \"#utility.yul\":6765:6825   */\n      tag_142\n      jumpi\n        /* \"#utility.yul\":6821:6822   */\n      0x00\n        /* \"#utility.yul\":6818:6819   */\n      0x00\n        /* \"#utility.yul\":6811:6823   */\n      revert\n        /* \"#utility.yul\":6765:6825   */\n    tag_142:\n        /* \"#utility.yul\":6715:6831   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6837:6974   */\n    tag_64:\n        /* \"#utility.yul\":6891:6896   */\n      0x00\n        /* \"#utility.yul\":6922:6928   */\n      dup2\n        /* \"#utility.yul\":6916:6929   */\n      mload\n        /* \"#utility.yul\":6907:6929   */\n      swap1\n      pop\n        /* \"#utility.yul\":6938:6968   */\n      tag_144\n        /* \"#utility.yul\":6962:6967   */\n      dup2\n        /* \"#utility.yul\":6938:6968   */\n      tag_63\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":6837:6974   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6980:7325   */\n    tag_33:\n        /* \"#utility.yul\":7047:7053   */\n      0x00\n        /* \"#utility.yul\":7096:7098   */\n      0x20\n        /* \"#utility.yul\":7084:7093   */\n      dup3\n        /* \"#utility.yul\":7075:7082   */\n      dup5\n        /* \"#utility.yul\":7071:7094   */\n      sub\n        /* \"#utility.yul\":7067:7099   */\n      slt\n        /* \"#utility.yul\":7064:7183   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":7102:7181   */\n      tag_147\n      tag_41\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":7064:7183   */\n    tag_146:\n        /* \"#utility.yul\":7222:7223   */\n      0x00\n        /* \"#utility.yul\":7247:7308   */\n      tag_148\n        /* \"#utility.yul\":7300:7307   */\n      dup5\n        /* \"#utility.yul\":7291:7297   */\n      dup3\n        /* \"#utility.yul\":7280:7289   */\n      dup6\n        /* \"#utility.yul\":7276:7298   */\n      add\n        /* \"#utility.yul\":7247:7308   */\n      tag_64\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":7237:7308   */\n      swap2\n      pop\n        /* \"#utility.yul\":7193:7318   */\n      pop\n        /* \"#utility.yul\":6980:7325   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7331:7503   */\n    tag_65:\n        /* \"#utility.yul\":7471:7495   */\n      0x6e6f742074686520657870656374656420746f6b656e00000000000000000000\n        /* \"#utility.yul\":7467:7468   */\n      0x00\n        /* \"#utility.yul\":7459:7465   */\n      dup3\n        /* \"#utility.yul\":7455:7469   */\n      add\n        /* \"#utility.yul\":7448:7496   */\n      mstore\n        /* \"#utility.yul\":7331:7503   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7509:7875   */\n    tag_66:\n        /* \"#utility.yul\":7651:7654   */\n      0x00\n        /* \"#utility.yul\":7672:7739   */\n      tag_151\n        /* \"#utility.yul\":7736:7738   */\n      0x16\n        /* \"#utility.yul\":7731:7734   */\n      dup4\n        /* \"#utility.yul\":7672:7739   */\n      tag_57\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":7665:7739   */\n      swap2\n      pop\n        /* \"#utility.yul\":7748:7841   */\n      tag_152\n        /* \"#utility.yul\":7837:7840   */\n      dup3\n        /* \"#utility.yul\":7748:7841   */\n      tag_65\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":7866:7868   */\n      0x20\n        /* \"#utility.yul\":7861:7864   */\n      dup3\n        /* \"#utility.yul\":7857:7869   */\n      add\n        /* \"#utility.yul\":7850:7869   */\n      swap1\n      pop\n        /* \"#utility.yul\":7509:7875   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7881:8300   */\n    tag_37:\n        /* \"#utility.yul\":8047:8051   */\n      0x00\n        /* \"#utility.yul\":8085:8087   */\n      0x20\n        /* \"#utility.yul\":8074:8083   */\n      dup3\n        /* \"#utility.yul\":8070:8088   */\n      add\n        /* \"#utility.yul\":8062:8088   */\n      swap1\n      pop\n        /* \"#utility.yul\":8134:8143   */\n      dup2\n        /* \"#utility.yul\":8128:8132   */\n      dup2\n        /* \"#utility.yul\":8124:8144   */\n      sub\n        /* \"#utility.yul\":8120:8121   */\n      0x00\n        /* \"#utility.yul\":8109:8118   */\n      dup4\n        /* \"#utility.yul\":8105:8122   */\n      add\n        /* \"#utility.yul\":8098:8145   */\n      mstore\n        /* \"#utility.yul\":8162:8293   */\n      tag_154\n        /* \"#utility.yul\":8288:8292   */\n      dup2\n        /* \"#utility.yul\":8162:8293   */\n      tag_66\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":8154:8293   */\n      swap1\n      pop\n        /* \"#utility.yul\":7881:8300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8306:8497   */\n    tag_39:\n        /* \"#utility.yul\":8346:8349   */\n      0x00\n        /* \"#utility.yul\":8365:8385   */\n      tag_156\n        /* \"#utility.yul\":8383:8384   */\n      dup3\n        /* \"#utility.yul\":8365:8385   */\n      tag_47\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":8360:8385   */\n      swap2\n      pop\n        /* \"#utility.yul\":8399:8419   */\n      tag_157\n        /* \"#utility.yul\":8417:8418   */\n      dup4\n        /* \"#utility.yul\":8399:8419   */\n      tag_47\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":8394:8419   */\n      swap3\n      pop\n        /* \"#utility.yul\":8442:8443   */\n      dup3\n        /* \"#utility.yul\":8439:8440   */\n      dup3\n        /* \"#utility.yul\":8435:8444   */\n      add\n        /* \"#utility.yul\":8428:8444   */\n      swap1\n      pop\n        /* \"#utility.yul\":8463:8466   */\n      dup1\n        /* \"#utility.yul\":8460:8461   */\n      dup3\n        /* \"#utility.yul\":8457:8467   */\n      gt\n        /* \"#utility.yul\":8454:8490   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":8470:8488   */\n      tag_159\n      tag_60\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":8454:8490   */\n    tag_158:\n        /* \"#utility.yul\":8306:8497   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220498f4b2e8b11376eb1235521202f2decbde99b140a036fc1b6f509b0abf9b80c64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_215": {
									"entryPoint": null,
									"id": 215,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:7",
										"nodeType": "YulBlock",
										"src": "0:1199:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "922:274:7",
													"nodeType": "YulBlock",
													"src": "922:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:7",
																"nodeType": "YulBlock",
																"src": "968:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:7"
																			},
																			"nativeSrc": "970:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:7"
																		},
																		"nativeSrc": "970:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:7"
																		},
																		"nativeSrc": "939:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:7",
																		"nodeType": "YulLiteral",
																		"src": "964:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:7"
																},
																"nativeSrc": "935:32:7",
																"nodeType": "YulFunctionCall",
																"src": "935:32:7"
															},
															"nativeSrc": "932:119:7",
															"nodeType": "YulIf",
															"src": "932:119:7"
														},
														{
															"nativeSrc": "1061:128:7",
															"nodeType": "YulBlock",
															"src": "1061:128:7",
															"statements": [
																{
																	"nativeSrc": "1076:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:7"
																				},
																				"nativeSrc": "1147:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:7"
																		},
																		"nativeSrc": "1115:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:7",
														"nodeType": "YulTypedName",
														"src": "892:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:7",
														"nodeType": "YulTypedName",
														"src": "903:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:7",
														"nodeType": "YulTypedName",
														"src": "915:6:7",
														"type": ""
													}
												],
												"src": "845:351:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506040516108d13803806108d1833981810160405281019061003191906100d4565b805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100a38261007a565b9050919050565b6100b381610099565b81146100bd575f5ffd5b50565b5f815190506100ce816100aa565b92915050565b5f602082840312156100e9576100e8610076565b5b5f6100f6848285016100c0565b91505092915050565b6107c58061010c5f395ff3fe608060405234801561000f575f5ffd5b506004361061003f575f3560e01c806327e235e3146100435780632e1a7d4d1461007357806388a7ca5c1461008f575b5f5ffd5b61005d6004803603810190610058919061039d565b6100bf565b60405161006a91906103e0565b60405180910390f35b61008d60048036038101906100889190610423565b6100d4565b005b6100a960048036038101906100a491906104af565b610246565b6040516100b6919061056d565b60405180910390f35b6001602052805f5260405f205f915090505481565b8060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610154576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014b906105e0565b60405180910390fd5b8060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546101a0919061062b565b925050819055505f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161020292919061066d565b6020604051808303815f875af115801561021e573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061024291906106c9565b5050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cc9061073e565b60405180910390fd5b8360015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610321919061075c565b925050819055506388a7ca5c60e01b905095945050505050565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61036c82610343565b9050919050565b61037c81610362565b8114610386575f5ffd5b50565b5f8135905061039781610373565b92915050565b5f602082840312156103b2576103b161033b565b5b5f6103bf84828501610389565b91505092915050565b5f819050919050565b6103da816103c8565b82525050565b5f6020820190506103f35f8301846103d1565b92915050565b610402816103c8565b811461040c575f5ffd5b50565b5f8135905061041d816103f9565b92915050565b5f602082840312156104385761043761033b565b5b5f6104458482850161040f565b91505092915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f84011261046f5761046e61044e565b5b8235905067ffffffffffffffff81111561048c5761048b610452565b5b6020830191508360018202830111156104a8576104a7610456565b5b9250929050565b5f5f5f5f5f608086880312156104c8576104c761033b565b5b5f6104d588828901610389565b95505060206104e688828901610389565b94505060406104f78882890161040f565b935050606086013567ffffffffffffffff8111156105185761051761033f565b5b6105248882890161045a565b92509250509295509295909350565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61056781610533565b82525050565b5f6020820190506105805f83018461055e565b92915050565b5f82825260208201905092915050565b7f62616c616e636520746f6f206c6f7700000000000000000000000000000000005f82015250565b5f6105ca600f83610586565b91506105d582610596565b602082019050919050565b5f6020820190508181035f8301526105f7816105be565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610635826103c8565b9150610640836103c8565b9250828203905081811115610658576106576105fe565b5b92915050565b61066781610362565b82525050565b5f6040820190506106805f83018561065e565b61068d60208301846103d1565b9392505050565b5f8115159050919050565b6106a881610694565b81146106b2575f5ffd5b50565b5f815190506106c38161069f565b92915050565b5f602082840312156106de576106dd61033b565b5b5f6106eb848285016106b5565b91505092915050565b7f6e6f742074686520657870656374656420746f6b656e000000000000000000005f82015250565b5f610728601683610586565b9150610733826106f4565b602082019050919050565b5f6020820190508181035f8301526107558161071c565b9050919050565b5f610766826103c8565b9150610771836103c8565b9250828201905080821115610789576107886105fe565b5b9291505056fea2646970667358221220498f4b2e8b11376eb1235521202f2decbde99b140a036fc1b6f509b0abf9b80c64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x8D1 CODESIZE SUB DUP1 PUSH2 0x8D1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xD4 JUMP JUMPDEST DUP1 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0xFF JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA3 DUP3 PUSH2 0x7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3 DUP2 PUSH2 0x99 JUMP JUMPDEST DUP2 EQ PUSH2 0xBD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCE DUP2 PUSH2 0xAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE9 JUMPI PUSH2 0xE8 PUSH2 0x76 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF6 DUP5 DUP3 DUP6 ADD PUSH2 0xC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7C5 DUP1 PUSH2 0x10C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0x88A7CA5C EQ PUSH2 0x8F JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x39D JUMP JUMPDEST PUSH2 0xBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x423 JUMP JUMPDEST PUSH2 0xD4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x4AF JUMP JUMPDEST PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6 SWAP2 SWAP1 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x154 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B SWAP1 PUSH2 0x5E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x62B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x202 SWAP3 SWAP2 SWAP1 PUSH2 0x66D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x6C9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CC SWAP1 PUSH2 0x73E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x75C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH4 0x88A7CA5C PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x36C DUP3 PUSH2 0x343 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37C DUP2 PUSH2 0x362 JUMP JUMPDEST DUP2 EQ PUSH2 0x386 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x397 DUP2 PUSH2 0x373 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B2 JUMPI PUSH2 0x3B1 PUSH2 0x33B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3BF DUP5 DUP3 DUP6 ADD PUSH2 0x389 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DA DUP2 PUSH2 0x3C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3F3 PUSH0 DUP4 ADD DUP5 PUSH2 0x3D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x402 DUP2 PUSH2 0x3C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x40C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x41D DUP2 PUSH2 0x3F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x438 JUMPI PUSH2 0x437 PUSH2 0x33B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x445 DUP5 DUP3 DUP6 ADD PUSH2 0x40F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x46F JUMPI PUSH2 0x46E PUSH2 0x44E JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x48C JUMPI PUSH2 0x48B PUSH2 0x452 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x4A8 JUMPI PUSH2 0x4A7 PUSH2 0x456 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4C8 JUMPI PUSH2 0x4C7 PUSH2 0x33B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4D5 DUP9 DUP3 DUP10 ADD PUSH2 0x389 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x4E6 DUP9 DUP3 DUP10 ADD PUSH2 0x389 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x4F7 DUP9 DUP3 DUP10 ADD PUSH2 0x40F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x518 JUMPI PUSH2 0x517 PUSH2 0x33F JUMP JUMPDEST JUMPDEST PUSH2 0x524 DUP9 DUP3 DUP10 ADD PUSH2 0x45A JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x567 DUP2 PUSH2 0x533 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x580 PUSH0 DUP4 ADD DUP5 PUSH2 0x55E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x62616C616E636520746F6F206C6F770000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5CA PUSH1 0xF DUP4 PUSH2 0x586 JUMP JUMPDEST SWAP2 POP PUSH2 0x5D5 DUP3 PUSH2 0x596 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5F7 DUP2 PUSH2 0x5BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x635 DUP3 PUSH2 0x3C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x640 DUP4 PUSH2 0x3C8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x658 JUMPI PUSH2 0x657 PUSH2 0x5FE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x667 DUP2 PUSH2 0x362 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x680 PUSH0 DUP4 ADD DUP6 PUSH2 0x65E JUMP JUMPDEST PUSH2 0x68D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6A8 DUP2 PUSH2 0x694 JUMP JUMPDEST DUP2 EQ PUSH2 0x6B2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x6C3 DUP2 PUSH2 0x69F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6DE JUMPI PUSH2 0x6DD PUSH2 0x33B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6EB DUP5 DUP3 DUP6 ADD PUSH2 0x6B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F742074686520657870656374656420746F6B656E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x728 PUSH1 0x16 DUP4 PUSH2 0x586 JUMP JUMPDEST SWAP2 POP PUSH2 0x733 DUP3 PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x755 DUP2 PUSH2 0x71C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x766 DUP3 PUSH2 0x3C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x771 DUP4 PUSH2 0x3C8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x789 JUMPI PUSH2 0x788 PUSH2 0x5FE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBHASH DUP16 0x4B 0x2E DUP12 GT CALLDATACOPY PUSH15 0xB1235521202F2DECBDE99B140A036F 0xC1 0xB6 CREATE2 MULMOD 0xB0 0xAB 0xF9 0xB8 0xC PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "183:687:6:-:0;;;262:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;316:13;301:12;;:28;;;;;;;;;;;;;;;;;;262:71;183:687;;88:117:7;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;183:687:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@balances_219": {
									"entryPoint": 191,
									"id": 219,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@onTransferReceived_251": {
									"entryPoint": 582,
									"id": 251,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@withdraw_283": {
									"entryPoint": 212,
									"id": 283,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 1114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 1199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 1374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1da86cb1e60d20d3ed05c0580ba028b5b1003bcbcb4c51ea7430e12ebfca98c9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3dfffd4c9d9f882d0f90c6e2df6eb8d15bd00aa18c05c0e0791aaaada359b825_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1645,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 1389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1da86cb1e60d20d3ed05c0580ba028b5b1003bcbcb4c51ea7430e12ebfca98c9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3dfffd4c9d9f882d0f90c6e2df6eb8d15bd00aa18c05c0e0791aaaada359b825__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 1331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1534,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 1106,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1102,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1110,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 831,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 827,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_1da86cb1e60d20d3ed05c0580ba028b5b1003bcbcb4c51ea7430e12ebfca98c9": {
									"entryPoint": 1780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3dfffd4c9d9f882d0f90c6e2df6eb8d15bd00aa18c05c0e0791aaaada359b825": {
									"entryPoint": 1430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8500:7",
										"nodeType": "YulBlock",
										"src": "0:8500:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "748:87:7",
													"nodeType": "YulBlock",
													"src": "748:87:7",
													"statements": [
														{
															"nativeSrc": "758:29:7",
															"nodeType": "YulAssignment",
															"src": "758:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:7"
																},
																"nativeSrc": "767:20:7",
																"nodeType": "YulFunctionCall",
																"src": "767:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:7"
																},
																"nativeSrc": "796:33:7",
																"nodeType": "YulFunctionCall",
																"src": "796:33:7"
															},
															"nativeSrc": "796:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:7",
														"nodeType": "YulTypedName",
														"src": "726:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:7",
														"nodeType": "YulTypedName",
														"src": "734:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:7",
														"nodeType": "YulTypedName",
														"src": "742:5:7",
														"type": ""
													}
												],
												"src": "696:139:7"
											},
											{
												"body": {
													"nativeSrc": "907:263:7",
													"nodeType": "YulBlock",
													"src": "907:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:7",
																"nodeType": "YulBlock",
																"src": "953:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:7"
																			},
																			"nativeSrc": "955:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:7"
																		},
																		"nativeSrc": "955:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:7"
																		},
																		"nativeSrc": "924:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:7",
																		"nodeType": "YulLiteral",
																		"src": "949:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:7"
																},
																"nativeSrc": "920:32:7",
																"nodeType": "YulFunctionCall",
																"src": "920:32:7"
															},
															"nativeSrc": "917:119:7",
															"nodeType": "YulIf",
															"src": "917:119:7"
														},
														{
															"nativeSrc": "1046:117:7",
															"nodeType": "YulBlock",
															"src": "1046:117:7",
															"statements": [
																{
																	"nativeSrc": "1061:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:7",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:7"
																				},
																				"nativeSrc": "1121:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:7"
																		},
																		"nativeSrc": "1100:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:7",
														"nodeType": "YulTypedName",
														"src": "877:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:7",
														"nodeType": "YulTypedName",
														"src": "888:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:7",
														"nodeType": "YulTypedName",
														"src": "900:6:7",
														"type": ""
													}
												],
												"src": "841:329:7"
											},
											{
												"body": {
													"nativeSrc": "1221:32:7",
													"nodeType": "YulBlock",
													"src": "1221:32:7",
													"statements": [
														{
															"nativeSrc": "1231:16:7",
															"nodeType": "YulAssignment",
															"src": "1231:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:7",
																"nodeType": "YulIdentifier",
																"src": "1242:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:7",
														"nodeType": "YulTypedName",
														"src": "1203:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:7",
														"nodeType": "YulTypedName",
														"src": "1213:7:7",
														"type": ""
													}
												],
												"src": "1176:77:7"
											},
											{
												"body": {
													"nativeSrc": "1324:53:7",
													"nodeType": "YulBlock",
													"src": "1324:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:7"
																		},
																		"nativeSrc": "1346:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:7"
																},
																"nativeSrc": "1334:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:7"
															},
															"nativeSrc": "1334:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:7",
														"nodeType": "YulTypedName",
														"src": "1312:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:7",
														"nodeType": "YulTypedName",
														"src": "1319:3:7",
														"type": ""
													}
												],
												"src": "1259:118:7"
											},
											{
												"body": {
													"nativeSrc": "1481:124:7",
													"nodeType": "YulBlock",
													"src": "1481:124:7",
													"statements": [
														{
															"nativeSrc": "1491:26:7",
															"nodeType": "YulAssignment",
															"src": "1491:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:7"
																},
																"nativeSrc": "1499:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:7"
																		},
																		"nativeSrc": "1580:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:7"
																},
																"nativeSrc": "1527:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:7"
															},
															"nativeSrc": "1527:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:7",
														"nodeType": "YulTypedName",
														"src": "1453:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:7",
														"nodeType": "YulTypedName",
														"src": "1465:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:7",
														"nodeType": "YulTypedName",
														"src": "1476:4:7",
														"type": ""
													}
												],
												"src": "1383:222:7"
											},
											{
												"body": {
													"nativeSrc": "1654:79:7",
													"nodeType": "YulBlock",
													"src": "1654:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:7",
																"nodeType": "YulBlock",
																"src": "1711:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:7"
																			},
																			"nativeSrc": "1713:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:7"
																		},
																		"nativeSrc": "1713:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1684:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:7"
																				},
																				"nativeSrc": "1684:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:7"
																		},
																		"nativeSrc": "1674:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:7"
																},
																"nativeSrc": "1667:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:7"
															},
															"nativeSrc": "1664:63:7",
															"nodeType": "YulIf",
															"src": "1664:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1611:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:7",
														"nodeType": "YulTypedName",
														"src": "1647:5:7",
														"type": ""
													}
												],
												"src": "1611:122:7"
											},
											{
												"body": {
													"nativeSrc": "1791:87:7",
													"nodeType": "YulBlock",
													"src": "1791:87:7",
													"statements": [
														{
															"nativeSrc": "1801:29:7",
															"nodeType": "YulAssignment",
															"src": "1801:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:7"
																},
																"nativeSrc": "1810:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1839:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:7"
																},
																"nativeSrc": "1839:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:7"
															},
															"nativeSrc": "1839:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1739:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:7",
														"nodeType": "YulTypedName",
														"src": "1769:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:7",
														"nodeType": "YulTypedName",
														"src": "1777:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:7",
														"nodeType": "YulTypedName",
														"src": "1785:5:7",
														"type": ""
													}
												],
												"src": "1739:139:7"
											},
											{
												"body": {
													"nativeSrc": "1950:263:7",
													"nodeType": "YulBlock",
													"src": "1950:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1996:83:7",
																"nodeType": "YulBlock",
																"src": "1996:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1998:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:7"
																			},
																			"nativeSrc": "1998:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:7"
																		},
																		"nativeSrc": "1998:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1971:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1980:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1967:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:7"
																		},
																		"nativeSrc": "1967:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1963:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:7"
																},
																"nativeSrc": "1963:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1963:32:7"
															},
															"nativeSrc": "1960:119:7",
															"nodeType": "YulIf",
															"src": "1960:119:7"
														},
														{
															"nativeSrc": "2089:117:7",
															"nodeType": "YulBlock",
															"src": "2089:117:7",
															"statements": [
																{
																	"nativeSrc": "2104:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2118:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2108:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2133:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2133:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2168:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2179:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2164:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:7"
																				},
																				"nativeSrc": "2164:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2188:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2143:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:7"
																		},
																		"nativeSrc": "2143:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2133:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1884:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1920:9:7",
														"nodeType": "YulTypedName",
														"src": "1920:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1931:7:7",
														"nodeType": "YulTypedName",
														"src": "1931:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1943:6:7",
														"nodeType": "YulTypedName",
														"src": "1943:6:7",
														"type": ""
													}
												],
												"src": "1884:329:7"
											},
											{
												"body": {
													"nativeSrc": "2308:28:7",
													"nodeType": "YulBlock",
													"src": "2308:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2325:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2325:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2328:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2328:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2318:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2318:6:7"
																},
																"nativeSrc": "2318:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2318:12:7"
															},
															"nativeSrc": "2318:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "2318:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "2219:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2219:117:7"
											},
											{
												"body": {
													"nativeSrc": "2431:28:7",
													"nodeType": "YulBlock",
													"src": "2431:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2448:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2448:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2451:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2451:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2441:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2441:6:7"
																},
																"nativeSrc": "2441:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2441:12:7"
															},
															"nativeSrc": "2441:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "2441:12:7"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "2342:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2342:117:7"
											},
											{
												"body": {
													"nativeSrc": "2554:28:7",
													"nodeType": "YulBlock",
													"src": "2554:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2571:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2571:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2574:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2574:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2564:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2564:6:7"
																},
																"nativeSrc": "2564:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2564:12:7"
															},
															"nativeSrc": "2564:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "2564:12:7"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "2465:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2465:117:7"
											},
											{
												"body": {
													"nativeSrc": "2675:478:7",
													"nodeType": "YulBlock",
													"src": "2675:478:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2724:83:7",
																"nodeType": "YulBlock",
																"src": "2724:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2726:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2726:77:7"
																			},
																			"nativeSrc": "2726:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2726:79:7"
																		},
																		"nativeSrc": "2726:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2703:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2703:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2711:4:7",
																						"nodeType": "YulLiteral",
																						"src": "2711:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2699:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2699:3:7"
																				},
																				"nativeSrc": "2699:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2699:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2718:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2718:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2695:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2695:3:7"
																		},
																		"nativeSrc": "2695:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2695:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2688:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2688:6:7"
																},
																"nativeSrc": "2688:35:7",
																"nodeType": "YulFunctionCall",
																"src": "2688:35:7"
															},
															"nativeSrc": "2685:122:7",
															"nodeType": "YulIf",
															"src": "2685:122:7"
														},
														{
															"nativeSrc": "2816:30:7",
															"nodeType": "YulAssignment",
															"src": "2816:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2839:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2839:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2826:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2826:12:7"
																},
																"nativeSrc": "2826:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2826:20:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2816:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2816:6:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2889:83:7",
																"nodeType": "YulBlock",
																"src": "2889:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "2891:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2891:77:7"
																			},
																			"nativeSrc": "2891:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2891:79:7"
																		},
																		"nativeSrc": "2891:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2891:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2861:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2861:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2869:18:7",
																		"nodeType": "YulLiteral",
																		"src": "2869:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2858:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2858:2:7"
																},
																"nativeSrc": "2858:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2858:30:7"
															},
															"nativeSrc": "2855:117:7",
															"nodeType": "YulIf",
															"src": "2855:117:7"
														},
														{
															"nativeSrc": "2981:29:7",
															"nodeType": "YulAssignment",
															"src": "2981:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2997:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2997:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3005:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3005:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2993:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2993:3:7"
																},
																"nativeSrc": "2993:17:7",
																"nodeType": "YulFunctionCall",
																"src": "2993:17:7"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "2981:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2981:8:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3064:83:7",
																"nodeType": "YulBlock",
																"src": "3064:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "3066:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3066:77:7"
																			},
																			"nativeSrc": "3066:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3066:79:7"
																		},
																		"nativeSrc": "3066:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3066:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "3029:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "3029:8:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "3043:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3043:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3051:4:7",
																						"nodeType": "YulLiteral",
																						"src": "3051:4:7",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3039:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3039:3:7"
																				},
																				"nativeSrc": "3039:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3039:17:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3025:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3025:3:7"
																		},
																		"nativeSrc": "3025:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3025:32:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3059:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3059:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3022:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3022:2:7"
																},
																"nativeSrc": "3022:41:7",
																"nodeType": "YulFunctionCall",
																"src": "3022:41:7"
															},
															"nativeSrc": "3019:128:7",
															"nodeType": "YulIf",
															"src": "3019:128:7"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nativeSrc": "2601:552:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2642:6:7",
														"nodeType": "YulTypedName",
														"src": "2642:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2650:3:7",
														"nodeType": "YulTypedName",
														"src": "2650:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "2658:8:7",
														"nodeType": "YulTypedName",
														"src": "2658:8:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2668:6:7",
														"nodeType": "YulTypedName",
														"src": "2668:6:7",
														"type": ""
													}
												],
												"src": "2601:552:7"
											},
											{
												"body": {
													"nativeSrc": "3295:827:7",
													"nodeType": "YulBlock",
													"src": "3295:827:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3342:83:7",
																"nodeType": "YulBlock",
																"src": "3342:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3344:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3344:77:7"
																			},
																			"nativeSrc": "3344:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3344:79:7"
																		},
																		"nativeSrc": "3344:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3344:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3316:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3316:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3325:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3325:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3312:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3312:3:7"
																		},
																		"nativeSrc": "3312:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3337:3:7",
																		"nodeType": "YulLiteral",
																		"src": "3337:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3308:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3308:3:7"
																},
																"nativeSrc": "3308:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3308:33:7"
															},
															"nativeSrc": "3305:120:7",
															"nodeType": "YulIf",
															"src": "3305:120:7"
														},
														{
															"nativeSrc": "3435:117:7",
															"nodeType": "YulBlock",
															"src": "3435:117:7",
															"statements": [
																{
																	"nativeSrc": "3450:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3450:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3464:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3464:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3454:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3454:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3479:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3479:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3514:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3514:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3525:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3525:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3510:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3510:3:7"
																				},
																				"nativeSrc": "3510:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3510:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3534:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3534:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3489:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3489:20:7"
																		},
																		"nativeSrc": "3489:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3489:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3479:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3479:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3562:118:7",
															"nodeType": "YulBlock",
															"src": "3562:118:7",
															"statements": [
																{
																	"nativeSrc": "3577:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3577:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3591:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3591:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3581:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3581:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3607:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3607:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3642:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3642:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3653:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3653:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3638:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3638:3:7"
																				},
																				"nativeSrc": "3638:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3638:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3662:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3662:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3617:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3617:20:7"
																		},
																		"nativeSrc": "3617:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3617:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3607:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3607:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3690:118:7",
															"nodeType": "YulBlock",
															"src": "3690:118:7",
															"statements": [
																{
																	"nativeSrc": "3705:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3705:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3719:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3719:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3709:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3709:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3735:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3735:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3770:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3770:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3781:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3781:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3766:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3766:3:7"
																				},
																				"nativeSrc": "3766:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3766:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3790:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3790:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3745:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3745:20:7"
																		},
																		"nativeSrc": "3745:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3745:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3735:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3735:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3818:297:7",
															"nodeType": "YulBlock",
															"src": "3818:297:7",
															"statements": [
																{
																	"nativeSrc": "3833:46:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3833:46:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3864:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3864:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3875:2:7",
																						"nodeType": "YulLiteral",
																						"src": "3875:2:7",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3860:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3860:3:7"
																				},
																				"nativeSrc": "3860:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3860:18:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "3847:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "3847:12:7"
																		},
																		"nativeSrc": "3847:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3847:32:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3837:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3837:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3926:83:7",
																		"nodeType": "YulBlock",
																		"src": "3926:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3928:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "3928:77:7"
																					},
																					"nativeSrc": "3928:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3928:79:7"
																				},
																				"nativeSrc": "3928:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3928:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3898:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3898:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3906:18:7",
																				"nodeType": "YulLiteral",
																				"src": "3906:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3895:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3895:2:7"
																		},
																		"nativeSrc": "3895:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3895:30:7"
																	},
																	"nativeSrc": "3892:117:7",
																	"nodeType": "YulIf",
																	"src": "3892:117:7"
																},
																{
																	"nativeSrc": "4023:82:7",
																	"nodeType": "YulAssignment",
																	"src": "4023:82:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4077:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4077:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4088:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4088:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4073:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4073:3:7"
																				},
																				"nativeSrc": "4073:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4073:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4097:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4097:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "4041:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "4041:31:7"
																		},
																		"nativeSrc": "4041:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4041:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4023:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4023:6:7"
																		},
																		{
																			"name": "value4",
																			"nativeSrc": "4031:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4031:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nativeSrc": "3159:963:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3233:9:7",
														"nodeType": "YulTypedName",
														"src": "3233:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3244:7:7",
														"nodeType": "YulTypedName",
														"src": "3244:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3256:6:7",
														"nodeType": "YulTypedName",
														"src": "3256:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3264:6:7",
														"nodeType": "YulTypedName",
														"src": "3264:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3272:6:7",
														"nodeType": "YulTypedName",
														"src": "3272:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3280:6:7",
														"nodeType": "YulTypedName",
														"src": "3280:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3288:6:7",
														"nodeType": "YulTypedName",
														"src": "3288:6:7",
														"type": ""
													}
												],
												"src": "3159:963:7"
											},
											{
												"body": {
													"nativeSrc": "4172:105:7",
													"nodeType": "YulBlock",
													"src": "4172:105:7",
													"statements": [
														{
															"nativeSrc": "4182:89:7",
															"nodeType": "YulAssignment",
															"src": "4182:89:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4197:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4197:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4204:66:7",
																		"nodeType": "YulLiteral",
																		"src": "4204:66:7",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4193:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4193:3:7"
																},
																"nativeSrc": "4193:78:7",
																"nodeType": "YulFunctionCall",
																"src": "4193:78:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4182:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4182:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "4128:149:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4154:5:7",
														"nodeType": "YulTypedName",
														"src": "4154:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4164:7:7",
														"nodeType": "YulTypedName",
														"src": "4164:7:7",
														"type": ""
													}
												],
												"src": "4128:149:7"
											},
											{
												"body": {
													"nativeSrc": "4346:52:7",
													"nodeType": "YulBlock",
													"src": "4346:52:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4363:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4363:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4385:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4385:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nativeSrc": "4368:16:7",
																			"nodeType": "YulIdentifier",
																			"src": "4368:16:7"
																		},
																		"nativeSrc": "4368:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4368:23:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4356:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4356:6:7"
																},
																"nativeSrc": "4356:36:7",
																"nodeType": "YulFunctionCall",
																"src": "4356:36:7"
															},
															"nativeSrc": "4356:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "4356:36:7"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nativeSrc": "4283:115:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4334:5:7",
														"nodeType": "YulTypedName",
														"src": "4334:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4341:3:7",
														"nodeType": "YulTypedName",
														"src": "4341:3:7",
														"type": ""
													}
												],
												"src": "4283:115:7"
											},
											{
												"body": {
													"nativeSrc": "4500:122:7",
													"nodeType": "YulBlock",
													"src": "4500:122:7",
													"statements": [
														{
															"nativeSrc": "4510:26:7",
															"nodeType": "YulAssignment",
															"src": "4510:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4522:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4522:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4533:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4533:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4518:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4518:3:7"
																},
																"nativeSrc": "4518:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4518:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4510:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4510:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4588:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4588:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4601:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4601:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4612:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4612:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4597:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4597:3:7"
																		},
																		"nativeSrc": "4597:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4597:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nativeSrc": "4546:41:7",
																	"nodeType": "YulIdentifier",
																	"src": "4546:41:7"
																},
																"nativeSrc": "4546:69:7",
																"nodeType": "YulFunctionCall",
																"src": "4546:69:7"
															},
															"nativeSrc": "4546:69:7",
															"nodeType": "YulExpressionStatement",
															"src": "4546:69:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nativeSrc": "4404:218:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4472:9:7",
														"nodeType": "YulTypedName",
														"src": "4472:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4484:6:7",
														"nodeType": "YulTypedName",
														"src": "4484:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4495:4:7",
														"nodeType": "YulTypedName",
														"src": "4495:4:7",
														"type": ""
													}
												],
												"src": "4404:218:7"
											},
											{
												"body": {
													"nativeSrc": "4724:73:7",
													"nodeType": "YulBlock",
													"src": "4724:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4741:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4741:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4746:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4746:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4734:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4734:6:7"
																},
																"nativeSrc": "4734:19:7",
																"nodeType": "YulFunctionCall",
																"src": "4734:19:7"
															},
															"nativeSrc": "4734:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "4734:19:7"
														},
														{
															"nativeSrc": "4762:29:7",
															"nodeType": "YulAssignment",
															"src": "4762:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4781:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4781:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4786:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4786:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4777:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4777:3:7"
																},
																"nativeSrc": "4777:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4777:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4762:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "4762:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4628:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4696:3:7",
														"nodeType": "YulTypedName",
														"src": "4696:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4701:6:7",
														"nodeType": "YulTypedName",
														"src": "4701:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4712:11:7",
														"nodeType": "YulTypedName",
														"src": "4712:11:7",
														"type": ""
													}
												],
												"src": "4628:169:7"
											},
											{
												"body": {
													"nativeSrc": "4909:59:7",
													"nodeType": "YulBlock",
													"src": "4909:59:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4931:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4931:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4939:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4939:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4927:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4927:3:7"
																		},
																		"nativeSrc": "4927:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4927:14:7"
																	},
																	{
																		"hexValue": "62616c616e636520746f6f206c6f77",
																		"kind": "string",
																		"nativeSrc": "4943:17:7",
																		"nodeType": "YulLiteral",
																		"src": "4943:17:7",
																		"type": "",
																		"value": "balance too low"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4920:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4920:6:7"
																},
																"nativeSrc": "4920:41:7",
																"nodeType": "YulFunctionCall",
																"src": "4920:41:7"
															},
															"nativeSrc": "4920:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "4920:41:7"
														}
													]
												},
												"name": "store_literal_in_memory_3dfffd4c9d9f882d0f90c6e2df6eb8d15bd00aa18c05c0e0791aaaada359b825",
												"nativeSrc": "4803:165:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4901:6:7",
														"nodeType": "YulTypedName",
														"src": "4901:6:7",
														"type": ""
													}
												],
												"src": "4803:165:7"
											},
											{
												"body": {
													"nativeSrc": "5120:220:7",
													"nodeType": "YulBlock",
													"src": "5120:220:7",
													"statements": [
														{
															"nativeSrc": "5130:74:7",
															"nodeType": "YulAssignment",
															"src": "5130:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5196:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5196:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5201:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5201:2:7",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5137:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "5137:58:7"
																},
																"nativeSrc": "5137:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5137:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5130:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5130:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5302:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5302:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3dfffd4c9d9f882d0f90c6e2df6eb8d15bd00aa18c05c0e0791aaaada359b825",
																	"nativeSrc": "5213:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "5213:88:7"
																},
																"nativeSrc": "5213:93:7",
																"nodeType": "YulFunctionCall",
																"src": "5213:93:7"
															},
															"nativeSrc": "5213:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "5213:93:7"
														},
														{
															"nativeSrc": "5315:19:7",
															"nodeType": "YulAssignment",
															"src": "5315:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5326:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5326:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5331:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5331:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5322:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5322:3:7"
																},
																"nativeSrc": "5322:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5322:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5315:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5315:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3dfffd4c9d9f882d0f90c6e2df6eb8d15bd00aa18c05c0e0791aaaada359b825_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4974:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5108:3:7",
														"nodeType": "YulTypedName",
														"src": "5108:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5116:3:7",
														"nodeType": "YulTypedName",
														"src": "5116:3:7",
														"type": ""
													}
												],
												"src": "4974:366:7"
											},
											{
												"body": {
													"nativeSrc": "5517:248:7",
													"nodeType": "YulBlock",
													"src": "5517:248:7",
													"statements": [
														{
															"nativeSrc": "5527:26:7",
															"nodeType": "YulAssignment",
															"src": "5527:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5539:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5539:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5550:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5550:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5535:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5535:3:7"
																},
																"nativeSrc": "5535:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5535:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5527:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5527:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5574:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5574:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5585:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5585:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5570:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5570:3:7"
																		},
																		"nativeSrc": "5570:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5570:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5593:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5593:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5599:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5599:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5589:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5589:3:7"
																		},
																		"nativeSrc": "5589:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5589:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5563:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5563:6:7"
																},
																"nativeSrc": "5563:47:7",
																"nodeType": "YulFunctionCall",
																"src": "5563:47:7"
															},
															"nativeSrc": "5563:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "5563:47:7"
														},
														{
															"nativeSrc": "5619:139:7",
															"nodeType": "YulAssignment",
															"src": "5619:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5753:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5753:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3dfffd4c9d9f882d0f90c6e2df6eb8d15bd00aa18c05c0e0791aaaada359b825_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5627:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "5627:124:7"
																},
																"nativeSrc": "5627:131:7",
																"nodeType": "YulFunctionCall",
																"src": "5627:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5619:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5619:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3dfffd4c9d9f882d0f90c6e2df6eb8d15bd00aa18c05c0e0791aaaada359b825__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5346:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5497:9:7",
														"nodeType": "YulTypedName",
														"src": "5497:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5512:4:7",
														"nodeType": "YulTypedName",
														"src": "5512:4:7",
														"type": ""
													}
												],
												"src": "5346:419:7"
											},
											{
												"body": {
													"nativeSrc": "5799:152:7",
													"nodeType": "YulBlock",
													"src": "5799:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5816:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5816:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5819:77:7",
																		"nodeType": "YulLiteral",
																		"src": "5819:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5809:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5809:6:7"
																},
																"nativeSrc": "5809:88:7",
																"nodeType": "YulFunctionCall",
																"src": "5809:88:7"
															},
															"nativeSrc": "5809:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "5809:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5913:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5913:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5916:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5916:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5906:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5906:6:7"
																},
																"nativeSrc": "5906:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5906:15:7"
															},
															"nativeSrc": "5906:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5906:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5937:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5937:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5940:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5940:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5930:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5930:6:7"
																},
																"nativeSrc": "5930:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5930:15:7"
															},
															"nativeSrc": "5930:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5930:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5771:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5771:180:7"
											},
											{
												"body": {
													"nativeSrc": "6002:149:7",
													"nodeType": "YulBlock",
													"src": "6002:149:7",
													"statements": [
														{
															"nativeSrc": "6012:25:7",
															"nodeType": "YulAssignment",
															"src": "6012:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6035:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6035:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6017:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6017:17:7"
																},
																"nativeSrc": "6017:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6017:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6012:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "6012:1:7"
																}
															]
														},
														{
															"nativeSrc": "6046:25:7",
															"nodeType": "YulAssignment",
															"src": "6046:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6069:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6069:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6051:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6051:17:7"
																},
																"nativeSrc": "6051:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6051:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6046:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "6046:1:7"
																}
															]
														},
														{
															"nativeSrc": "6080:17:7",
															"nodeType": "YulAssignment",
															"src": "6080:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6092:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6092:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6095:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6095:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6088:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6088:3:7"
																},
																"nativeSrc": "6088:9:7",
																"nodeType": "YulFunctionCall",
																"src": "6088:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6080:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6080:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6122:22:7",
																"nodeType": "YulBlock",
																"src": "6122:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6124:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6124:16:7"
																			},
																			"nativeSrc": "6124:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6124:18:7"
																		},
																		"nativeSrc": "6124:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6124:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6113:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6113:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6119:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6119:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6110:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6110:2:7"
																},
																"nativeSrc": "6110:11:7",
																"nodeType": "YulFunctionCall",
																"src": "6110:11:7"
															},
															"nativeSrc": "6107:37:7",
															"nodeType": "YulIf",
															"src": "6107:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5957:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5988:1:7",
														"nodeType": "YulTypedName",
														"src": "5988:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5991:1:7",
														"nodeType": "YulTypedName",
														"src": "5991:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5997:4:7",
														"nodeType": "YulTypedName",
														"src": "5997:4:7",
														"type": ""
													}
												],
												"src": "5957:194:7"
											},
											{
												"body": {
													"nativeSrc": "6222:53:7",
													"nodeType": "YulBlock",
													"src": "6222:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6239:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6239:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6262:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6262:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6244:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6244:17:7"
																		},
																		"nativeSrc": "6244:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6244:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6232:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6232:6:7"
																},
																"nativeSrc": "6232:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6232:37:7"
															},
															"nativeSrc": "6232:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6232:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6157:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6210:5:7",
														"nodeType": "YulTypedName",
														"src": "6210:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6217:3:7",
														"nodeType": "YulTypedName",
														"src": "6217:3:7",
														"type": ""
													}
												],
												"src": "6157:118:7"
											},
											{
												"body": {
													"nativeSrc": "6407:206:7",
													"nodeType": "YulBlock",
													"src": "6407:206:7",
													"statements": [
														{
															"nativeSrc": "6417:26:7",
															"nodeType": "YulAssignment",
															"src": "6417:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6429:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6429:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6440:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6440:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6425:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6425:3:7"
																},
																"nativeSrc": "6425:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6425:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6417:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6417:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6497:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6497:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6510:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6510:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6521:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6521:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6506:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6506:3:7"
																		},
																		"nativeSrc": "6506:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6506:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6453:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6453:43:7"
																},
																"nativeSrc": "6453:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6453:71:7"
															},
															"nativeSrc": "6453:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6453:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6578:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6578:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6591:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6591:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6602:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6602:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6587:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6587:3:7"
																		},
																		"nativeSrc": "6587:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6587:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6534:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6534:43:7"
																},
																"nativeSrc": "6534:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6534:72:7"
															},
															"nativeSrc": "6534:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6534:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6281:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6371:9:7",
														"nodeType": "YulTypedName",
														"src": "6371:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6383:6:7",
														"nodeType": "YulTypedName",
														"src": "6383:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6391:6:7",
														"nodeType": "YulTypedName",
														"src": "6391:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6402:4:7",
														"nodeType": "YulTypedName",
														"src": "6402:4:7",
														"type": ""
													}
												],
												"src": "6281:332:7"
											},
											{
												"body": {
													"nativeSrc": "6661:48:7",
													"nodeType": "YulBlock",
													"src": "6661:48:7",
													"statements": [
														{
															"nativeSrc": "6671:32:7",
															"nodeType": "YulAssignment",
															"src": "6671:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6696:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6696:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "6689:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6689:6:7"
																		},
																		"nativeSrc": "6689:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6689:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6682:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6682:6:7"
																},
																"nativeSrc": "6682:21:7",
																"nodeType": "YulFunctionCall",
																"src": "6682:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6671:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "6671:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "6619:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6643:5:7",
														"nodeType": "YulTypedName",
														"src": "6643:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6653:7:7",
														"nodeType": "YulTypedName",
														"src": "6653:7:7",
														"type": ""
													}
												],
												"src": "6619:90:7"
											},
											{
												"body": {
													"nativeSrc": "6755:76:7",
													"nodeType": "YulBlock",
													"src": "6755:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6809:16:7",
																"nodeType": "YulBlock",
																"src": "6809:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6818:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6818:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6821:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6821:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6811:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6811:6:7"
																			},
																			"nativeSrc": "6811:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6811:12:7"
																		},
																		"nativeSrc": "6811:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6811:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6778:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6778:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6800:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "6800:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6785:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "6785:14:7"
																				},
																				"nativeSrc": "6785:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6785:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6775:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6775:2:7"
																		},
																		"nativeSrc": "6775:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6775:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6768:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6768:6:7"
																},
																"nativeSrc": "6768:40:7",
																"nodeType": "YulFunctionCall",
																"src": "6768:40:7"
															},
															"nativeSrc": "6765:60:7",
															"nodeType": "YulIf",
															"src": "6765:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6715:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6748:5:7",
														"nodeType": "YulTypedName",
														"src": "6748:5:7",
														"type": ""
													}
												],
												"src": "6715:116:7"
											},
											{
												"body": {
													"nativeSrc": "6897:77:7",
													"nodeType": "YulBlock",
													"src": "6897:77:7",
													"statements": [
														{
															"nativeSrc": "6907:22:7",
															"nodeType": "YulAssignment",
															"src": "6907:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6922:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6922:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6916:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6916:5:7"
																},
																"nativeSrc": "6916:13:7",
																"nodeType": "YulFunctionCall",
																"src": "6916:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6907:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6907:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6962:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6962:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6938:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "6938:23:7"
																},
																"nativeSrc": "6938:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6938:30:7"
															},
															"nativeSrc": "6938:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "6938:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "6837:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6875:6:7",
														"nodeType": "YulTypedName",
														"src": "6875:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6883:3:7",
														"nodeType": "YulTypedName",
														"src": "6883:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6891:5:7",
														"nodeType": "YulTypedName",
														"src": "6891:5:7",
														"type": ""
													}
												],
												"src": "6837:137:7"
											},
											{
												"body": {
													"nativeSrc": "7054:271:7",
													"nodeType": "YulBlock",
													"src": "7054:271:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7100:83:7",
																"nodeType": "YulBlock",
																"src": "7100:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7102:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7102:77:7"
																			},
																			"nativeSrc": "7102:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7102:79:7"
																		},
																		"nativeSrc": "7102:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7102:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7075:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7075:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7084:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7084:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7071:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7071:3:7"
																		},
																		"nativeSrc": "7071:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7071:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7096:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7096:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7067:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7067:3:7"
																},
																"nativeSrc": "7067:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7067:32:7"
															},
															"nativeSrc": "7064:119:7",
															"nodeType": "YulIf",
															"src": "7064:119:7"
														},
														{
															"nativeSrc": "7193:125:7",
															"nodeType": "YulBlock",
															"src": "7193:125:7",
															"statements": [
																{
																	"nativeSrc": "7208:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7208:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7222:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7222:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7212:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7212:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7237:71:7",
																	"nodeType": "YulAssignment",
																	"src": "7237:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7280:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7280:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7291:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7291:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7276:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7276:3:7"
																				},
																				"nativeSrc": "7276:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7276:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7300:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7300:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "7247:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "7247:28:7"
																		},
																		"nativeSrc": "7247:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7247:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7237:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7237:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "6980:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7024:9:7",
														"nodeType": "YulTypedName",
														"src": "7024:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7035:7:7",
														"nodeType": "YulTypedName",
														"src": "7035:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7047:6:7",
														"nodeType": "YulTypedName",
														"src": "7047:6:7",
														"type": ""
													}
												],
												"src": "6980:345:7"
											},
											{
												"body": {
													"nativeSrc": "7437:66:7",
													"nodeType": "YulBlock",
													"src": "7437:66:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7459:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7459:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7467:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7467:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7455:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7455:3:7"
																		},
																		"nativeSrc": "7455:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7455:14:7"
																	},
																	{
																		"hexValue": "6e6f742074686520657870656374656420746f6b656e",
																		"kind": "string",
																		"nativeSrc": "7471:24:7",
																		"nodeType": "YulLiteral",
																		"src": "7471:24:7",
																		"type": "",
																		"value": "not the expected token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7448:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7448:6:7"
																},
																"nativeSrc": "7448:48:7",
																"nodeType": "YulFunctionCall",
																"src": "7448:48:7"
															},
															"nativeSrc": "7448:48:7",
															"nodeType": "YulExpressionStatement",
															"src": "7448:48:7"
														}
													]
												},
												"name": "store_literal_in_memory_1da86cb1e60d20d3ed05c0580ba028b5b1003bcbcb4c51ea7430e12ebfca98c9",
												"nativeSrc": "7331:172:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7429:6:7",
														"nodeType": "YulTypedName",
														"src": "7429:6:7",
														"type": ""
													}
												],
												"src": "7331:172:7"
											},
											{
												"body": {
													"nativeSrc": "7655:220:7",
													"nodeType": "YulBlock",
													"src": "7655:220:7",
													"statements": [
														{
															"nativeSrc": "7665:74:7",
															"nodeType": "YulAssignment",
															"src": "7665:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7731:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7731:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7736:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7736:2:7",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7672:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "7672:58:7"
																},
																"nativeSrc": "7672:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7672:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7665:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7665:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7837:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7837:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1da86cb1e60d20d3ed05c0580ba028b5b1003bcbcb4c51ea7430e12ebfca98c9",
																	"nativeSrc": "7748:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "7748:88:7"
																},
																"nativeSrc": "7748:93:7",
																"nodeType": "YulFunctionCall",
																"src": "7748:93:7"
															},
															"nativeSrc": "7748:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "7748:93:7"
														},
														{
															"nativeSrc": "7850:19:7",
															"nodeType": "YulAssignment",
															"src": "7850:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7861:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7861:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7866:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7866:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7857:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7857:3:7"
																},
																"nativeSrc": "7857:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7857:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7850:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7850:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1da86cb1e60d20d3ed05c0580ba028b5b1003bcbcb4c51ea7430e12ebfca98c9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7509:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7643:3:7",
														"nodeType": "YulTypedName",
														"src": "7643:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7651:3:7",
														"nodeType": "YulTypedName",
														"src": "7651:3:7",
														"type": ""
													}
												],
												"src": "7509:366:7"
											},
											{
												"body": {
													"nativeSrc": "8052:248:7",
													"nodeType": "YulBlock",
													"src": "8052:248:7",
													"statements": [
														{
															"nativeSrc": "8062:26:7",
															"nodeType": "YulAssignment",
															"src": "8062:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8074:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8074:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8085:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8085:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8070:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8070:3:7"
																},
																"nativeSrc": "8070:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8070:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8062:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8062:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8109:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8109:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8120:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8120:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8105:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8105:3:7"
																		},
																		"nativeSrc": "8105:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8105:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8128:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8128:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8134:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8134:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8124:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8124:3:7"
																		},
																		"nativeSrc": "8124:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8124:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8098:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8098:6:7"
																},
																"nativeSrc": "8098:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8098:47:7"
															},
															"nativeSrc": "8098:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8098:47:7"
														},
														{
															"nativeSrc": "8154:139:7",
															"nodeType": "YulAssignment",
															"src": "8154:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8288:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8288:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1da86cb1e60d20d3ed05c0580ba028b5b1003bcbcb4c51ea7430e12ebfca98c9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8162:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "8162:124:7"
																},
																"nativeSrc": "8162:131:7",
																"nodeType": "YulFunctionCall",
																"src": "8162:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8154:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8154:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1da86cb1e60d20d3ed05c0580ba028b5b1003bcbcb4c51ea7430e12ebfca98c9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7881:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8032:9:7",
														"nodeType": "YulTypedName",
														"src": "8032:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8047:4:7",
														"nodeType": "YulTypedName",
														"src": "8047:4:7",
														"type": ""
													}
												],
												"src": "7881:419:7"
											},
											{
												"body": {
													"nativeSrc": "8350:147:7",
													"nodeType": "YulBlock",
													"src": "8350:147:7",
													"statements": [
														{
															"nativeSrc": "8360:25:7",
															"nodeType": "YulAssignment",
															"src": "8360:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8383:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8383:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8365:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8365:17:7"
																},
																"nativeSrc": "8365:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8365:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8360:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8360:1:7"
																}
															]
														},
														{
															"nativeSrc": "8394:25:7",
															"nodeType": "YulAssignment",
															"src": "8394:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8417:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8417:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8399:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8399:17:7"
																},
																"nativeSrc": "8399:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8399:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8394:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8394:1:7"
																}
															]
														},
														{
															"nativeSrc": "8428:16:7",
															"nodeType": "YulAssignment",
															"src": "8428:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8439:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8439:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8442:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8442:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8435:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8435:3:7"
																},
																"nativeSrc": "8435:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8435:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8428:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8428:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8468:22:7",
																"nodeType": "YulBlock",
																"src": "8468:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8470:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8470:16:7"
																			},
																			"nativeSrc": "8470:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8470:18:7"
																		},
																		"nativeSrc": "8470:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8470:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8460:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8460:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8463:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8463:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8457:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8457:2:7"
																},
																"nativeSrc": "8457:10:7",
																"nodeType": "YulFunctionCall",
																"src": "8457:10:7"
															},
															"nativeSrc": "8454:36:7",
															"nodeType": "YulIf",
															"src": "8454:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8306:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8337:1:7",
														"nodeType": "YulTypedName",
														"src": "8337:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8340:1:7",
														"nodeType": "YulTypedName",
														"src": "8340:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8346:3:7",
														"nodeType": "YulTypedName",
														"src": "8346:3:7",
														"type": ""
													}
												],
												"src": "8306:191:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_3dfffd4c9d9f882d0f90c6e2df6eb8d15bd00aa18c05c0e0791aaaada359b825(memPtr) {\n\n        mstore(add(memPtr, 0), \"balance too low\")\n\n    }\n\n    function abi_encode_t_stringliteral_3dfffd4c9d9f882d0f90c6e2df6eb8d15bd00aa18c05c0e0791aaaada359b825_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_3dfffd4c9d9f882d0f90c6e2df6eb8d15bd00aa18c05c0e0791aaaada359b825(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3dfffd4c9d9f882d0f90c6e2df6eb8d15bd00aa18c05c0e0791aaaada359b825__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3dfffd4c9d9f882d0f90c6e2df6eb8d15bd00aa18c05c0e0791aaaada359b825_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_1da86cb1e60d20d3ed05c0580ba028b5b1003bcbcb4c51ea7430e12ebfca98c9(memPtr) {\n\n        mstore(add(memPtr, 0), \"not the expected token\")\n\n    }\n\n    function abi_encode_t_stringliteral_1da86cb1e60d20d3ed05c0580ba028b5b1003bcbcb4c51ea7430e12ebfca98c9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_1da86cb1e60d20d3ed05c0580ba028b5b1003bcbcb4c51ea7430e12ebfca98c9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1da86cb1e60d20d3ed05c0580ba028b5b1003bcbcb4c51ea7430e12ebfca98c9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1da86cb1e60d20d3ed05c0580ba028b5b1003bcbcb4c51ea7430e12ebfca98c9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061003f575f3560e01c806327e235e3146100435780632e1a7d4d1461007357806388a7ca5c1461008f575b5f5ffd5b61005d6004803603810190610058919061039d565b6100bf565b60405161006a91906103e0565b60405180910390f35b61008d60048036038101906100889190610423565b6100d4565b005b6100a960048036038101906100a491906104af565b610246565b6040516100b6919061056d565b60405180910390f35b6001602052805f5260405f205f915090505481565b8060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610154576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014b906105e0565b60405180910390fd5b8060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546101a0919061062b565b925050819055505f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161020292919061066d565b6020604051808303815f875af115801561021e573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061024291906106c9565b5050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cc9061073e565b60405180910390fd5b8360015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610321919061075c565b925050819055506388a7ca5c60e01b905095945050505050565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61036c82610343565b9050919050565b61037c81610362565b8114610386575f5ffd5b50565b5f8135905061039781610373565b92915050565b5f602082840312156103b2576103b161033b565b5b5f6103bf84828501610389565b91505092915050565b5f819050919050565b6103da816103c8565b82525050565b5f6020820190506103f35f8301846103d1565b92915050565b610402816103c8565b811461040c575f5ffd5b50565b5f8135905061041d816103f9565b92915050565b5f602082840312156104385761043761033b565b5b5f6104458482850161040f565b91505092915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f84011261046f5761046e61044e565b5b8235905067ffffffffffffffff81111561048c5761048b610452565b5b6020830191508360018202830111156104a8576104a7610456565b5b9250929050565b5f5f5f5f5f608086880312156104c8576104c761033b565b5b5f6104d588828901610389565b95505060206104e688828901610389565b94505060406104f78882890161040f565b935050606086013567ffffffffffffffff8111156105185761051761033f565b5b6105248882890161045a565b92509250509295509295909350565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61056781610533565b82525050565b5f6020820190506105805f83018461055e565b92915050565b5f82825260208201905092915050565b7f62616c616e636520746f6f206c6f7700000000000000000000000000000000005f82015250565b5f6105ca600f83610586565b91506105d582610596565b602082019050919050565b5f6020820190508181035f8301526105f7816105be565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610635826103c8565b9150610640836103c8565b9250828203905081811115610658576106576105fe565b5b92915050565b61066781610362565b82525050565b5f6040820190506106805f83018561065e565b61068d60208301846103d1565b9392505050565b5f8115159050919050565b6106a881610694565b81146106b2575f5ffd5b50565b5f815190506106c38161069f565b92915050565b5f602082840312156106de576106dd61033b565b5b5f6106eb848285016106b5565b91505092915050565b7f6e6f742074686520657870656374656420746f6b656e000000000000000000005f82015250565b5f610728601683610586565b9150610733826106f4565b602082019050919050565b5f6020820190508181035f8301526107558161071c565b9050919050565b5f610766826103c8565b9150610771836103c8565b9250828201905080821115610789576107886105fe565b5b9291505056fea2646970667358221220498f4b2e8b11376eb1235521202f2decbde99b140a036fc1b6f509b0abf9b80c64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0x88A7CA5C EQ PUSH2 0x8F JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x39D JUMP JUMPDEST PUSH2 0xBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x3E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x423 JUMP JUMPDEST PUSH2 0xD4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x4AF JUMP JUMPDEST PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6 SWAP2 SWAP1 PUSH2 0x56D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x154 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B SWAP1 PUSH2 0x5E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x62B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x202 SWAP3 SWAP2 SWAP1 PUSH2 0x66D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x6C9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CC SWAP1 PUSH2 0x73E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x75C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH4 0x88A7CA5C PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x36C DUP3 PUSH2 0x343 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37C DUP2 PUSH2 0x362 JUMP JUMPDEST DUP2 EQ PUSH2 0x386 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x397 DUP2 PUSH2 0x373 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B2 JUMPI PUSH2 0x3B1 PUSH2 0x33B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3BF DUP5 DUP3 DUP6 ADD PUSH2 0x389 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DA DUP2 PUSH2 0x3C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3F3 PUSH0 DUP4 ADD DUP5 PUSH2 0x3D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x402 DUP2 PUSH2 0x3C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x40C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x41D DUP2 PUSH2 0x3F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x438 JUMPI PUSH2 0x437 PUSH2 0x33B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x445 DUP5 DUP3 DUP6 ADD PUSH2 0x40F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x46F JUMPI PUSH2 0x46E PUSH2 0x44E JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x48C JUMPI PUSH2 0x48B PUSH2 0x452 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x4A8 JUMPI PUSH2 0x4A7 PUSH2 0x456 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4C8 JUMPI PUSH2 0x4C7 PUSH2 0x33B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4D5 DUP9 DUP3 DUP10 ADD PUSH2 0x389 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x4E6 DUP9 DUP3 DUP10 ADD PUSH2 0x389 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x4F7 DUP9 DUP3 DUP10 ADD PUSH2 0x40F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x518 JUMPI PUSH2 0x517 PUSH2 0x33F JUMP JUMPDEST JUMPDEST PUSH2 0x524 DUP9 DUP3 DUP10 ADD PUSH2 0x45A JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x567 DUP2 PUSH2 0x533 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x580 PUSH0 DUP4 ADD DUP5 PUSH2 0x55E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x62616C616E636520746F6F206C6F770000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5CA PUSH1 0xF DUP4 PUSH2 0x586 JUMP JUMPDEST SWAP2 POP PUSH2 0x5D5 DUP3 PUSH2 0x596 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5F7 DUP2 PUSH2 0x5BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x635 DUP3 PUSH2 0x3C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x640 DUP4 PUSH2 0x3C8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x658 JUMPI PUSH2 0x657 PUSH2 0x5FE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x667 DUP2 PUSH2 0x362 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x680 PUSH0 DUP4 ADD DUP6 PUSH2 0x65E JUMP JUMPDEST PUSH2 0x68D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6A8 DUP2 PUSH2 0x694 JUMP JUMPDEST DUP2 EQ PUSH2 0x6B2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x6C3 DUP2 PUSH2 0x69F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6DE JUMPI PUSH2 0x6DD PUSH2 0x33B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6EB DUP5 DUP3 DUP6 ADD PUSH2 0x6B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F742074686520657870656374656420746F6B656E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x728 PUSH1 0x16 DUP4 PUSH2 0x586 JUMP JUMPDEST SWAP2 POP PUSH2 0x733 DUP3 PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x755 DUP2 PUSH2 0x71C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x766 DUP3 PUSH2 0x3C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x771 DUP4 PUSH2 0x3C8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x789 JUMPI PUSH2 0x788 PUSH2 0x5FE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBHASH DUP16 0x4B 0x2E DUP12 GT CALLDATACOPY PUSH15 0xB1235521202F2DECBDE99B140A036F 0xC1 0xB6 CREATE2 MULMOD 0xB0 0xAB 0xF9 0xB8 0xC PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "183:687:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;336:56;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;671:196;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;396:272;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;336:56;;;;;;;;;;;;;;;;;:::o;671:196::-;749:5;725:8;:20;734:10;725:20;;;;;;;;;;;;;;;;:29;;717:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;802:5;778:8;:20;787:10;778:20;;;;;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;;;;;822:12;;;;;;;;;;;813:31;;;845:10;857:5;813:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;671:196;:::o;396:272::-;521:6;555:12;;;;;;;;;;;541:26;;:10;:26;;;533:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;616:5;598:8;:14;607:4;598:14;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;632:32;;;625:39;;396:272;;;;;;;:::o;88:117:7:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:117::-;2328:1;2325;2318:12;2342:117;2451:1;2448;2441:12;2465:117;2574:1;2571;2564:12;2601:552;2658:8;2668:6;2718:3;2711:4;2703:6;2699:17;2695:27;2685:122;;2726:79;;:::i;:::-;2685:122;2839:6;2826:20;2816:30;;2869:18;2861:6;2858:30;2855:117;;;2891:79;;:::i;:::-;2855:117;3005:4;2997:6;2993:17;2981:29;;3059:3;3051:4;3043:6;3039:17;3029:8;3025:32;3022:41;3019:128;;;3066:79;;:::i;:::-;3019:128;2601:552;;;;;:::o;3159:963::-;3256:6;3264;3272;3280;3288;3337:3;3325:9;3316:7;3312:23;3308:33;3305:120;;;3344:79;;:::i;:::-;3305:120;3464:1;3489:53;3534:7;3525:6;3514:9;3510:22;3489:53;:::i;:::-;3479:63;;3435:117;3591:2;3617:53;3662:7;3653:6;3642:9;3638:22;3617:53;:::i;:::-;3607:63;;3562:118;3719:2;3745:53;3790:7;3781:6;3770:9;3766:22;3745:53;:::i;:::-;3735:63;;3690:118;3875:2;3864:9;3860:18;3847:32;3906:18;3898:6;3895:30;3892:117;;;3928:79;;:::i;:::-;3892:117;4041:64;4097:7;4088:6;4077:9;4073:22;4041:64;:::i;:::-;4023:82;;;;3818:297;3159:963;;;;;;;;:::o;4128:149::-;4164:7;4204:66;4197:5;4193:78;4182:89;;4128:149;;;:::o;4283:115::-;4368:23;4385:5;4368:23;:::i;:::-;4363:3;4356:36;4283:115;;:::o;4404:218::-;4495:4;4533:2;4522:9;4518:18;4510:26;;4546:69;4612:1;4601:9;4597:17;4588:6;4546:69;:::i;:::-;4404:218;;;;:::o;4628:169::-;4712:11;4746:6;4741:3;4734:19;4786:4;4781:3;4777:14;4762:29;;4628:169;;;;:::o;4803:165::-;4943:17;4939:1;4931:6;4927:14;4920:41;4803:165;:::o;4974:366::-;5116:3;5137:67;5201:2;5196:3;5137:67;:::i;:::-;5130:74;;5213:93;5302:3;5213:93;:::i;:::-;5331:2;5326:3;5322:12;5315:19;;4974:366;;;:::o;5346:419::-;5512:4;5550:2;5539:9;5535:18;5527:26;;5599:9;5593:4;5589:20;5585:1;5574:9;5570:17;5563:47;5627:131;5753:4;5627:131;:::i;:::-;5619:139;;5346:419;;;:::o;5771:180::-;5819:77;5816:1;5809:88;5916:4;5913:1;5906:15;5940:4;5937:1;5930:15;5957:194;5997:4;6017:20;6035:1;6017:20;:::i;:::-;6012:25;;6051:20;6069:1;6051:20;:::i;:::-;6046:25;;6095:1;6092;6088:9;6080:17;;6119:1;6113:4;6110:11;6107:37;;;6124:18;;:::i;:::-;6107:37;5957:194;;;;:::o;6157:118::-;6244:24;6262:5;6244:24;:::i;:::-;6239:3;6232:37;6157:118;;:::o;6281:332::-;6402:4;6440:2;6429:9;6425:18;6417:26;;6453:71;6521:1;6510:9;6506:17;6497:6;6453:71;:::i;:::-;6534:72;6602:2;6591:9;6587:18;6578:6;6534:72;:::i;:::-;6281:332;;;;;:::o;6619:90::-;6653:7;6696:5;6689:13;6682:21;6671:32;;6619:90;;;:::o;6715:116::-;6785:21;6800:5;6785:21;:::i;:::-;6778:5;6775:32;6765:60;;6821:1;6818;6811:12;6765:60;6715:116;:::o;6837:137::-;6891:5;6922:6;6916:13;6907:22;;6938:30;6962:5;6938:30;:::i;:::-;6837:137;;;;:::o;6980:345::-;7047:6;7096:2;7084:9;7075:7;7071:23;7067:32;7064:119;;;7102:79;;:::i;:::-;7064:119;7222:1;7247:61;7300:7;7291:6;7280:9;7276:22;7247:61;:::i;:::-;7237:71;;7193:125;6980:345;;;;:::o;7331:172::-;7471:24;7467:1;7459:6;7455:14;7448:48;7331:172;:::o;7509:366::-;7651:3;7672:67;7736:2;7731:3;7672:67;:::i;:::-;7665:74;;7748:93;7837:3;7748:93;:::i;:::-;7866:2;7861:3;7857:12;7850:19;;7509:366;;;:::o;7881:419::-;8047:4;8085:2;8074:9;8070:18;8062:26;;8134:9;8128:4;8124:20;8120:1;8109:9;8105:17;8098:47;8162:131;8288:4;8162:131;:::i;:::-;8154:139;;7881:419;;;:::o;8306:191::-;8346:3;8365:20;8383:1;8365:20;:::i;:::-;8360:25;;8399:20;8417:1;8399:20;:::i;:::-;8394:25;;8442:1;8439;8435:9;8428:16;;8463:3;8460:1;8457:10;8454:36;;;8470:18;;:::i;:::-;8454:36;8306:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "397800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balances(address)": "2780",
								"onTransferReceived(address,address,uint256,bytes)": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 183,
									"end": 870,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 183,
									"end": 870,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 183,
									"end": 870,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 262,
									"end": 333,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 262,
									"end": 333,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 262,
									"end": 333,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 262,
									"end": 333,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 262,
									"end": 333,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 262,
									"end": 333,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 333,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 333,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 262,
									"end": 333,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 262,
									"end": 333,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 262,
									"end": 333,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 262,
									"end": 333,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 262,
									"end": 333,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 262,
									"end": 333,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 262,
									"end": 333,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 262,
									"end": 333,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 262,
									"end": 333,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 262,
									"end": 333,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 262,
									"end": 333,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 262,
									"end": 333,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 262,
									"end": 333,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 262,
									"end": 333,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 262,
									"end": 333,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 262,
									"end": 333,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 262,
									"end": 333,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 262,
									"end": 333,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 262,
									"end": 333,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 262,
									"end": 333,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 262,
									"end": 333,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 262,
									"end": 333,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 262,
									"end": 333,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 262,
									"end": 333,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 262,
									"end": 333,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 262,
									"end": 333,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 262,
									"end": 333,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 316,
									"end": 329,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 301,
									"end": 313,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 313,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 329,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 301,
									"end": 329,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 301,
									"end": 329,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 301,
									"end": 329,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 301,
									"end": 329,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 301,
									"end": 329,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 301,
									"end": 329,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 301,
									"end": 329,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 301,
									"end": 329,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 301,
									"end": 329,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 301,
									"end": 329,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 301,
									"end": 329,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 301,
									"end": 329,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 301,
									"end": 329,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 301,
									"end": 329,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 301,
									"end": 329,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 301,
									"end": 329,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 301,
									"end": 329,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 262,
									"end": 333,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 183,
									"end": 870,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 183,
									"end": 870,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 183,
									"end": 870,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 183,
									"end": 870,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 183,
									"end": 870,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 870,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 183,
									"end": 870,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 870,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 870,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 183,
									"end": 870,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 870,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220498f4b2e8b11376eb1235521202f2decbde99b140a036fc1b6f509b0abf9b80c64736f6c634300081c0033",
									".code": [
										{
											"begin": 183,
											"end": 870,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 183,
											"end": 870,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 183,
											"end": 870,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 183,
											"end": 870,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 183,
											"end": 870,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 183,
											"end": 870,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 183,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 183,
											"end": 870,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 183,
											"end": 870,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 870,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 870,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 183,
											"end": 870,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 183,
											"end": 870,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 183,
											"end": 870,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 183,
											"end": 870,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 183,
											"end": 870,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 183,
											"end": 870,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 183,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 183,
											"end": 870,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 183,
											"end": 870,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 870,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 183,
											"end": 870,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 183,
											"end": 870,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 183,
											"end": 870,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 183,
											"end": 870,
											"name": "PUSH",
											"source": 6,
											"value": "27E235E3"
										},
										{
											"begin": 183,
											"end": 870,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 183,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 183,
											"end": 870,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 183,
											"end": 870,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 183,
											"end": 870,
											"name": "PUSH",
											"source": 6,
											"value": "2E1A7D4D"
										},
										{
											"begin": 183,
											"end": 870,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 183,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 183,
											"end": 870,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 183,
											"end": 870,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 183,
											"end": 870,
											"name": "PUSH",
											"source": 6,
											"value": "88A7CA5C"
										},
										{
											"begin": 183,
											"end": 870,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 183,
											"end": 870,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 183,
											"end": 870,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 183,
											"end": 870,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 183,
											"end": 870,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 183,
											"end": 870,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 870,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 870,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 336,
											"end": 392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 336,
											"end": 392,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 336,
											"end": 392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 336,
											"end": 392,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 336,
											"end": 392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 336,
											"end": 392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 336,
											"end": 392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 336,
											"end": 392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 336,
											"end": 392,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 336,
											"end": 392,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 336,
											"end": 392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 336,
											"end": 392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 336,
											"end": 392,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 671,
											"end": 867,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 671,
											"end": 867,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 671,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 671,
											"end": 867,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 671,
											"end": 867,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 671,
											"end": 867,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 671,
											"end": 867,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 671,
											"end": 867,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 671,
											"end": 867,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 671,
											"end": 867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 671,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 671,
											"end": 867,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 671,
											"end": 867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 671,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 671,
											"end": 867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 671,
											"end": 867,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 671,
											"end": 867,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 671,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 671,
											"end": 867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 671,
											"end": 867,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 671,
											"end": 867,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 671,
											"end": 867,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 396,
											"end": 668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 396,
											"end": 668,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 396,
											"end": 668,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 396,
											"end": 668,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 396,
											"end": 668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 396,
											"end": 668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 396,
											"end": 668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 396,
											"end": 668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 668,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 396,
											"end": 668,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 396,
											"end": 668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 396,
											"end": 668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 668,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 336,
											"end": 392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 336,
											"end": 392,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 336,
											"end": 392,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 392,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 336,
											"end": 392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 392,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 392,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 336,
											"end": 392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 671,
											"end": 867,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 671,
											"end": 867,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 749,
											"end": 754,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 725,
											"end": 733,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 725,
											"end": 745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 725,
											"end": 745,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 725,
											"end": 745,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 725,
											"end": 745,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 725,
											"end": 745,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 725,
											"end": 745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 725,
											"end": 745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 725,
											"end": 745,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 725,
											"end": 745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 725,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 725,
											"end": 745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 725,
											"end": 745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 725,
											"end": 745,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 725,
											"end": 745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 725,
											"end": 745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 745,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 725,
											"end": 745,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 725,
											"end": 754,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 725,
											"end": 754,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 717,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 717,
											"end": 774,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 717,
											"end": 774,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 717,
											"end": 774,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 717,
											"end": 774,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 717,
											"end": 774,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 717,
											"end": 774,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 717,
											"end": 774,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 717,
											"end": 774,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 717,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 717,
											"end": 774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 717,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 717,
											"end": 774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 717,
											"end": 774,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 717,
											"end": 774,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 717,
											"end": 774,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 717,
											"end": 774,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 717,
											"end": 774,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 717,
											"end": 774,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 717,
											"end": 774,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 717,
											"end": 774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 717,
											"end": 774,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 717,
											"end": 774,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 717,
											"end": 774,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 802,
											"end": 807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 778,
											"end": 786,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 778,
											"end": 798,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 797,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 778,
											"end": 798,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 778,
											"end": 798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 778,
											"end": 798,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 778,
											"end": 798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 778,
											"end": 798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 778,
											"end": 798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 778,
											"end": 798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 778,
											"end": 798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 778,
											"end": 798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 778,
											"end": 798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 778,
											"end": 798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 778,
											"end": 798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 778,
											"end": 798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 778,
											"end": 798,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 778,
											"end": 798,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 778,
											"end": 798,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 778,
											"end": 807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 778,
											"end": 807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 778,
											"end": 807,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 778,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 778,
											"end": 807,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 778,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 778,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 778,
											"end": 807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 778,
											"end": 807,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 778,
											"end": 807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 778,
											"end": 807,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 778,
											"end": 807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 778,
											"end": 807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 778,
											"end": 807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 778,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 778,
											"end": 807,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 778,
											"end": 807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 822,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 834,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 822,
											"end": 834,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 822,
											"end": 834,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 822,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 822,
											"end": 834,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 822,
											"end": 834,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 822,
											"end": 834,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 822,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 822,
											"end": 834,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 813,
											"end": 844,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 813,
											"end": 844,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 813,
											"end": 844,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 845,
											"end": 855,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 857,
											"end": 862,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 863,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 813,
											"end": 863,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 813,
											"end": 863,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 813,
											"end": 863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 813,
											"end": 863,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 813,
											"end": 863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 813,
											"end": 863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 813,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 863,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 863,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 813,
											"end": 863,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 863,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 863,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 813,
											"end": 863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 863,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 813,
											"end": 863,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 813,
											"end": 863,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 863,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 813,
											"end": 863,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 813,
											"end": 863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 813,
											"end": 863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 813,
											"end": 863,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 671,
											"end": 867,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 671,
											"end": 867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 396,
											"end": 668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 527,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 567,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 567,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 567,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 555,
											"end": 567,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 555,
											"end": 567,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 555,
											"end": 567,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 555,
											"end": 567,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 555,
											"end": 567,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 555,
											"end": 567,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 555,
											"end": 567,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 555,
											"end": 567,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 541,
											"end": 567,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 541,
											"end": 567,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 541,
											"end": 551,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 541,
											"end": 567,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 541,
											"end": 567,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 541,
											"end": 567,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 533,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 533,
											"end": 594,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 533,
											"end": 594,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 594,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 533,
											"end": 594,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 533,
											"end": 594,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 533,
											"end": 594,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 533,
											"end": 594,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 533,
											"end": 594,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 533,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 533,
											"end": 594,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 533,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 533,
											"end": 594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 533,
											"end": 594,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 533,
											"end": 594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 533,
											"end": 594,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 594,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 533,
											"end": 594,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 533,
											"end": 594,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 533,
											"end": 594,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 533,
											"end": 594,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 533,
											"end": 594,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 533,
											"end": 594,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 533,
											"end": 594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 616,
											"end": 621,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 598,
											"end": 606,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 598,
											"end": 612,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 611,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 598,
											"end": 612,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 598,
											"end": 612,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 598,
											"end": 612,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 598,
											"end": 612,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 598,
											"end": 612,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 598,
											"end": 612,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 598,
											"end": 612,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 612,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 598,
											"end": 612,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 598,
											"end": 612,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 598,
											"end": 612,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 598,
											"end": 612,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 612,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 598,
											"end": 612,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 612,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 598,
											"end": 612,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 621,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 598,
											"end": 621,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 598,
											"end": 621,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 598,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 598,
											"end": 621,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 598,
											"end": 621,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 598,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 598,
											"end": 621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 598,
											"end": 621,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 598,
											"end": 621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 598,
											"end": 621,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 598,
											"end": 621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 598,
											"end": 621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 598,
											"end": 621,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 598,
											"end": 621,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 598,
											"end": 621,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 598,
											"end": 621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 632,
											"end": 664,
											"name": "PUSH",
											"source": 6,
											"value": "88A7CA5C"
										},
										{
											"begin": 632,
											"end": 664,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 632,
											"end": 664,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 625,
											"end": 664,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 625,
											"end": 664,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 396,
											"end": 668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2219,
											"end": 2336,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 2219,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2329,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2326,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2318,
											"end": 2330,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2342,
											"end": 2459,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 2342,
											"end": 2459,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2451,
											"end": 2452,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2449,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2582,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2465,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2574,
											"end": 2575,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2571,
											"end": 2572,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2564,
											"end": 2576,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 3153,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 2601,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2666,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2668,
											"end": 2674,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2721,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2715,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2699,
											"end": 2716,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2695,
											"end": 2722,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2685,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 2685,
											"end": 2807,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2726,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 2726,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 2726,
											"end": 2805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2726,
											"end": 2805,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 2726,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2685,
											"end": 2807,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 2685,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2845,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2846,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2846,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2816,
											"end": 2846,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2869,
											"end": 2887,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2861,
											"end": 2867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2858,
											"end": 2888,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2855,
											"end": 2972,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2855,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 2855,
											"end": 2972,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 2891,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 2891,
											"end": 2970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2891,
											"end": 2970,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 2891,
											"end": 2970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2855,
											"end": 2972,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 2855,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3005,
											"end": 3009,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2997,
											"end": 3003,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2993,
											"end": 3010,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2981,
											"end": 3010,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2981,
											"end": 3010,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3062,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3051,
											"end": 3055,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3043,
											"end": 3049,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3039,
											"end": 3056,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3025,
											"end": 3057,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3022,
											"end": 3063,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3147,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 3019,
											"end": 3147,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3066,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 3066,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 3066,
											"end": 3145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3066,
											"end": 3145,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 3066,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3147,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 3019,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 3153,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 3153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 3153,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 3153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 3153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 3153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 4122,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 3159,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3264,
											"end": 3270,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3272,
											"end": 3278,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3280,
											"end": 3286,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3288,
											"end": 3294,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3340,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3325,
											"end": 3334,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3323,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3312,
											"end": 3335,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3308,
											"end": 3341,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3305,
											"end": 3425,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3305,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 3305,
											"end": 3425,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3344,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 3344,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 3344,
											"end": 3423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3344,
											"end": 3423,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 3344,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3305,
											"end": 3425,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 3305,
											"end": 3425,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3464,
											"end": 3465,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3525,
											"end": 3531,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3514,
											"end": 3523,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3532,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 3489,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3542,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 3489,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3542,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3542,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3435,
											"end": 3552,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3591,
											"end": 3593,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3617,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 3662,
											"end": 3669,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3653,
											"end": 3659,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3642,
											"end": 3651,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 3638,
											"end": 3660,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3617,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 3617,
											"end": 3670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3617,
											"end": 3670,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 3617,
											"end": 3670,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3670,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3670,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3562,
											"end": 3680,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3745,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 3790,
											"end": 3797,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3781,
											"end": 3787,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3770,
											"end": 3779,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 3766,
											"end": 3788,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3745,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 3745,
											"end": 3798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3745,
											"end": 3798,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 3745,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3735,
											"end": 3798,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3735,
											"end": 3798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3690,
											"end": 3808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3877,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3864,
											"end": 3873,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3860,
											"end": 3878,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3847,
											"end": 3879,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3898,
											"end": 3904,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3895,
											"end": 3925,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3892,
											"end": 4009,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3892,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 3892,
											"end": 4009,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 3928,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 3928,
											"end": 4007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3928,
											"end": 4007,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 3928,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3892,
											"end": 4009,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 3892,
											"end": 4009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 4097,
											"end": 4104,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4088,
											"end": 4094,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4077,
											"end": 4086,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4073,
											"end": 4095,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 4041,
											"end": 4105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4041,
											"end": 4105,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 4041,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4023,
											"end": 4105,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4023,
											"end": 4105,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4023,
											"end": 4105,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4023,
											"end": 4105,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 4115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 4122,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 4122,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 4122,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 4122,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 4122,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 4122,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 4122,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 4122,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3159,
											"end": 4122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4277,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 4128,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4164,
											"end": 4171,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4204,
											"end": 4270,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4197,
											"end": 4202,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4193,
											"end": 4271,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4277,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4277,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4277,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4128,
											"end": 4277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4283,
											"end": 4398,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 4283,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4368,
											"end": 4391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 4385,
											"end": 4390,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4368,
											"end": 4391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 4368,
											"end": 4391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4368,
											"end": 4391,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 4368,
											"end": 4391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4363,
											"end": 4366,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4356,
											"end": 4392,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4283,
											"end": 4398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4283,
											"end": 4398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4283,
											"end": 4398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4622,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 4404,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4495,
											"end": 4499,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4533,
											"end": 4535,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4522,
											"end": 4531,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4518,
											"end": 4536,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4510,
											"end": 4536,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4510,
											"end": 4536,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4546,
											"end": 4615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 4612,
											"end": 4613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4601,
											"end": 4610,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4597,
											"end": 4614,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4594,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4546,
											"end": 4615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 4546,
											"end": 4615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4546,
											"end": 4615,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 4546,
											"end": 4615,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4622,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4622,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4622,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4622,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4797,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 4628,
											"end": 4797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4712,
											"end": 4723,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4752,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4741,
											"end": 4744,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4734,
											"end": 4753,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4786,
											"end": 4790,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4781,
											"end": 4784,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4777,
											"end": 4791,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4762,
											"end": 4791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4762,
											"end": 4791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4797,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4803,
											"end": 4968,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 4803,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4960,
											"name": "PUSH",
											"source": 7,
											"value": "62616C616E636520746F6F206C6F770000000000000000000000000000000000"
										},
										{
											"begin": 4939,
											"end": 4940,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4931,
											"end": 4937,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4927,
											"end": 4941,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4961,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4803,
											"end": 4968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4803,
											"end": 4968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4974,
											"end": 5340,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 4974,
											"end": 5340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5119,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5137,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 5201,
											"end": 5203,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 5196,
											"end": 5199,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5137,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 5137,
											"end": 5204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5137,
											"end": 5204,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 5137,
											"end": 5204,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5130,
											"end": 5204,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5130,
											"end": 5204,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 5302,
											"end": 5305,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 5213,
											"end": 5306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5306,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 5213,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5331,
											"end": 5333,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5326,
											"end": 5329,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5322,
											"end": 5334,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5315,
											"end": 5334,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5315,
											"end": 5334,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4974,
											"end": 5340,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4974,
											"end": 5340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4974,
											"end": 5340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4974,
											"end": 5340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5346,
											"end": 5765,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 5346,
											"end": 5765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5512,
											"end": 5516,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5552,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5539,
											"end": 5548,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5553,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5553,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5599,
											"end": 5608,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5593,
											"end": 5597,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5589,
											"end": 5609,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5574,
											"end": 5583,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5570,
											"end": 5587,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5563,
											"end": 5610,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5627,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 5753,
											"end": 5757,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5627,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 5627,
											"end": 5758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5627,
											"end": 5758,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 5627,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5346,
											"end": 5765,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5346,
											"end": 5765,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5346,
											"end": 5765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5346,
											"end": 5765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5771,
											"end": 5951,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5771,
											"end": 5951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5819,
											"end": 5896,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5816,
											"end": 5817,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5809,
											"end": 5897,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5916,
											"end": 5920,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 5913,
											"end": 5914,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5906,
											"end": 5921,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5940,
											"end": 5944,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5937,
											"end": 5938,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5930,
											"end": 5945,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 6151,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 5957,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5997,
											"end": 6001,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6017,
											"end": 6037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 6035,
											"end": 6036,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6017,
											"end": 6037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 6017,
											"end": 6037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6017,
											"end": 6037,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 6017,
											"end": 6037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6012,
											"end": 6037,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6012,
											"end": 6037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 6069,
											"end": 6070,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 6051,
											"end": 6071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6071,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 6051,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6071,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6071,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6095,
											"end": 6096,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6092,
											"end": 6093,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6088,
											"end": 6097,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6080,
											"end": 6097,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6080,
											"end": 6097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6120,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6113,
											"end": 6117,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6110,
											"end": 6121,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6107,
											"end": 6144,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6107,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 6107,
											"end": 6144,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6124,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 6124,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6124,
											"end": 6142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6124,
											"end": 6142,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 6124,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6107,
											"end": 6144,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 6107,
											"end": 6144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 6151,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 6151,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 6151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 6151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 6151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6157,
											"end": 6275,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 6157,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6244,
											"end": 6268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 6262,
											"end": 6267,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6244,
											"end": 6268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6244,
											"end": 6268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6244,
											"end": 6268,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 6244,
											"end": 6268,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6239,
											"end": 6242,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6232,
											"end": 6269,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6157,
											"end": 6275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6157,
											"end": 6275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6157,
											"end": 6275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6281,
											"end": 6613,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 6281,
											"end": 6613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6402,
											"end": 6406,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6440,
											"end": 6442,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6429,
											"end": 6438,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6443,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6417,
											"end": 6443,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6417,
											"end": 6443,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 6521,
											"end": 6522,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6510,
											"end": 6519,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6506,
											"end": 6523,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6497,
											"end": 6503,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 6453,
											"end": 6524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6453,
											"end": 6524,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 6453,
											"end": 6524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6534,
											"end": 6606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 6602,
											"end": 6604,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6591,
											"end": 6600,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6587,
											"end": 6605,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6578,
											"end": 6584,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6534,
											"end": 6606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 6534,
											"end": 6606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6534,
											"end": 6606,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 6534,
											"end": 6606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6281,
											"end": 6613,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6281,
											"end": 6613,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6281,
											"end": 6613,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6281,
											"end": 6613,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6281,
											"end": 6613,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6281,
											"end": 6613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6619,
											"end": 6709,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 6619,
											"end": 6709,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6653,
											"end": 6660,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6696,
											"end": 6701,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6689,
											"end": 6702,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6682,
											"end": 6703,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6671,
											"end": 6703,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6671,
											"end": 6703,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6619,
											"end": 6709,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6619,
											"end": 6709,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6619,
											"end": 6709,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6619,
											"end": 6709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6831,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 6715,
											"end": 6831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6806,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 6800,
											"end": 6805,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6806,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 6785,
											"end": 6806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6806,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 6785,
											"end": 6806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6778,
											"end": 6783,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6775,
											"end": 6807,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6765,
											"end": 6825,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 6765,
											"end": 6825,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6821,
											"end": 6822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6818,
											"end": 6819,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6811,
											"end": 6823,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6765,
											"end": 6825,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 6765,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6974,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6837,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6891,
											"end": 6896,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6922,
											"end": 6928,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6916,
											"end": 6929,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6907,
											"end": 6929,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6907,
											"end": 6929,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6938,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 6962,
											"end": 6967,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6938,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 6938,
											"end": 6968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6938,
											"end": 6968,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 6938,
											"end": 6968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6974,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6974,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6837,
											"end": 6974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 7325,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 6980,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7047,
											"end": 7053,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7096,
											"end": 7098,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7084,
											"end": 7093,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7075,
											"end": 7082,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7071,
											"end": 7094,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7067,
											"end": 7099,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7183,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 7064,
											"end": 7183,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7102,
											"end": 7181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 7102,
											"end": 7181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 7102,
											"end": 7181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7102,
											"end": 7181,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 7102,
											"end": 7181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7064,
											"end": 7183,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 7064,
											"end": 7183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7222,
											"end": 7223,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7247,
											"end": 7308,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 7300,
											"end": 7307,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7291,
											"end": 7297,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7280,
											"end": 7289,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7298,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7247,
											"end": 7308,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7247,
											"end": 7308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7247,
											"end": 7308,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 7247,
											"end": 7308,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7237,
											"end": 7308,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7237,
											"end": 7308,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7193,
											"end": 7318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 7325,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 7325,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 7325,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 7325,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 7325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7331,
											"end": 7503,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 7331,
											"end": 7503,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7471,
											"end": 7495,
											"name": "PUSH",
											"source": 7,
											"value": "6E6F742074686520657870656374656420746F6B656E00000000000000000000"
										},
										{
											"begin": 7467,
											"end": 7468,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7459,
											"end": 7465,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7455,
											"end": 7469,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7448,
											"end": 7496,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7331,
											"end": 7503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7331,
											"end": 7503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7509,
											"end": 7875,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 7509,
											"end": 7875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7651,
											"end": 7654,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7672,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 7736,
											"end": 7738,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 7731,
											"end": 7734,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 7672,
											"end": 7739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7739,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 7672,
											"end": 7739,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7665,
											"end": 7739,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7665,
											"end": 7739,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7748,
											"end": 7841,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 7837,
											"end": 7840,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7748,
											"end": 7841,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 7748,
											"end": 7841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7748,
											"end": 7841,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 7748,
											"end": 7841,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7866,
											"end": 7868,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7861,
											"end": 7864,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7857,
											"end": 7869,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7850,
											"end": 7869,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7850,
											"end": 7869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7509,
											"end": 7875,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7509,
											"end": 7875,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7509,
											"end": 7875,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7509,
											"end": 7875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7881,
											"end": 8300,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 7881,
											"end": 8300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8047,
											"end": 8051,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8085,
											"end": 8087,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8074,
											"end": 8083,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8070,
											"end": 8088,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8062,
											"end": 8088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8062,
											"end": 8088,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8134,
											"end": 8143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8128,
											"end": 8132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8144,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8120,
											"end": 8121,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8109,
											"end": 8118,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8105,
											"end": 8122,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8098,
											"end": 8145,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8162,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 8288,
											"end": 8292,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8162,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 8162,
											"end": 8293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8162,
											"end": 8293,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 8162,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8154,
											"end": 8293,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8154,
											"end": 8293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7881,
											"end": 8300,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7881,
											"end": 8300,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7881,
											"end": 8300,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7881,
											"end": 8300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8306,
											"end": 8497,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 8306,
											"end": 8497,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8346,
											"end": 8349,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8365,
											"end": 8385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 8383,
											"end": 8384,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8365,
											"end": 8385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 8365,
											"end": 8385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8365,
											"end": 8385,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 8365,
											"end": 8385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8360,
											"end": 8385,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8360,
											"end": 8385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8399,
											"end": 8419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 8417,
											"end": 8418,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8399,
											"end": 8419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 8399,
											"end": 8419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8399,
											"end": 8419,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 8399,
											"end": 8419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8394,
											"end": 8419,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8394,
											"end": 8419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8442,
											"end": 8443,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8439,
											"end": 8440,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8435,
											"end": 8444,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8428,
											"end": 8444,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8428,
											"end": 8444,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8463,
											"end": 8466,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8460,
											"end": 8461,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8457,
											"end": 8467,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8454,
											"end": 8490,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8454,
											"end": 8490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 8454,
											"end": 8490,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8470,
											"end": 8488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 8470,
											"end": 8488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8470,
											"end": 8488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8470,
											"end": 8488,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 8470,
											"end": 8488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8454,
											"end": 8490,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 8454,
											"end": 8490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8306,
											"end": 8497,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8306,
											"end": 8497,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8306,
											"end": 8497,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8306,
											"end": 8497,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8306,
											"end": 8497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balances(address)": "27e235e3",
							"onTransferReceived(address,address,uint256,bytes)": "88a7ca5c",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc1363Token_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTransferReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onTransferReceived(address,address,uint256,bytes)\":{\"details\":\"Whenever ERC-1363 tokens are transferred to this contract via `transferAndCall` or `transferFromAndCall` by `operator` from `from`, this function is called. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onTransferReceived(address,address,uint256,bytes)\\\"))` (i.e. 0x88a7ca5c, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format.\",\"from\":\"The address which the tokens are transferred from.\",\"operator\":\"The address which called `transferAndCall` or `transferFromAndCall` function.\",\"value\":\"The amount of tokens transferred.\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onTransferReceived(address,address,uint256,bytes)\\\"))` if transfer is allowed unless throwing.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":\"TokenReceiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol\":{\"keccak256\":\"0xc988322f9ed15c95b435e5fbb51767b0bd8c19a4a57ca360af409122cede64c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://baf96a3317c8b2d14dd805833efca40c9a38cbf4e2a9c375d88f98b2f1ea5232\",\"dweb:/ipfs/QmTKbzuQBM62yERCNWtfoEK12cFj4sQcEFLLN64h6kEmXn\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol\":{\"keccak256\":\"0x5f0c1c339b58d3e4789f2ba54889c09f0f9e62e2f765fea6bdc1c8ae324bb260\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://506b4fe384914675551858b5f87387372448205718f17ab3982387249558c72b\",\"dweb:/ipfs/QmeWyWngMJPYquhADErQPAFbRFZ1GkgvZTaBzXnm4ZWkPY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 205,
								"contract": "contracts/ERC20_Demo/ERC1363/erc1363_demo.sol:TokenReceiver",
								"label": "erc1363Token",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 219,
								"contract": "contracts/ERC20_Demo/ERC1363/erc1363_demo.sol:TokenReceiver",
								"label": "balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/ERC20_Demo/ERC1363/erc1363_demo.sol:17:3:\n   |\n17 | \t\taddress operator,\n   | \t\t^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 443,
					"file": "contracts/ERC20_Demo/ERC1363/erc1363_demo.sol",
					"start": 427
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/ERC20_Demo/ERC1363/erc1363_demo.sol:20:3:\n   |\n20 | \t\tbytes calldata data\n   | \t\t^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 499,
					"file": "contracts/ERC20_Demo/ERC1363/erc1363_demo.sol",
					"start": 480
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC165": [
							197
						],
						"IERC20": [
							185
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 108,
							"src": "133:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 185,
										"src": "141:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 104,
							"src": "170:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 197,
										"src": "178:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"590:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 185,
										"src": "590:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC165",
										"nameLocations": [
											"598:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 197,
										"src": "598:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81,
								197,
								185
							],
							"name": "IERC1363",
							"nameLocation": "578:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1593:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:0"
									},
									"scope": 81,
									"src": "1523:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2088:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2115:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2154:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:0"
									},
									"scope": 81,
									"src": "2063:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:0"
									},
									"scope": 81,
									"src": "2624:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3294:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3320:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3335:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:0"
									},
									"scope": 81,
									"src": "3265:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3855:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:0"
									},
									"scope": 81,
									"src": "3781:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4406:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4445:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:0"
									},
									"scope": 81,
									"src": "4350:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "568:3885:0",
							"usedErrors": [],
							"usedEvents": [
								119,
								128
							]
						}
					],
					"src": "107:4347:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363Receiver.sol",
					"exportedSymbols": {
						"IERC1363Receiver": [
							99
						]
					},
					"id": 100,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1363Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 84,
								"nodeType": "StructuredDocumentation",
								"src": "141:168:1",
								"text": " @title IERC1363Receiver\n @dev Interface for any contract that wants to support `transferAndCall` or `transferFromAndCall`\n from ERC-1363 token contracts."
							},
							"fullyImplemented": false,
							"id": 99,
							"linearizedBaseContracts": [
								99
							],
							"name": "IERC1363Receiver",
							"nameLocation": "320:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "343:805:1",
										"text": " @dev Whenever ERC-1363 tokens are transferred to this contract via `transferAndCall` or `transferFromAndCall`\n by `operator` from `from`, this function is called.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))`\n (i.e. 0x88a7ca5c, or its own function selector).\n @param operator The address which called `transferAndCall` or `transferFromAndCall` function.\n @param from The address which the tokens are transferred from.\n @param value The amount of tokens transferred.\n @param data Additional data with no specified format.\n @return `bytes4(keccak256(\"onTransferReceived(address,address,uint256,bytes)\"))` if transfer is allowed unless throwing."
									},
									"functionSelector": "88a7ca5c",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onTransferReceived",
									"nameLocation": "1162:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1198:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1190:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1190:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1224:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1216:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1216:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1246:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1238:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1276:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1261:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 92,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1261:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1180:106:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1305:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 95,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1305:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1304:8:1"
									},
									"scope": 99,
									"src": "1153:160:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 100,
							"src": "310:1005:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:1201:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							197
						]
					},
					"id": 104,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 103,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 104,
							"sourceUnit": 198,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 102,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 197,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							185
						]
					},
					"id": 108,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 105,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 108,
							"sourceUnit": 186,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 106,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 185,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							185
						]
					},
					"id": 186,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 109,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 110,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 185,
							"linearizedBaseContracts": [
								185
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 119,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 128,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 185,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 185,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 185,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 185,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 169,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 185,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 181,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 185,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 186,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								119,
								128
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							197
						]
					},
					"id": 198,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 187,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 188,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:5",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 197,
							"linearizedBaseContracts": [
								197
							],
							"name": "IERC165",
							"nameLocation": "432:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 196,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "818:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 190,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:5"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "861:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 193,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:5"
									},
									"scope": 197,
									"src": "791:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 198,
							"src": "422:447:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:5"
				},
				"id": 5
			},
			"contracts/ERC20_Demo/ERC1363/erc1363_demo.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20_Demo/ERC1363/erc1363_demo.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC1363Receiver": [
							99
						],
						"IERC165": [
							197
						],
						"IERC20": [
							185
						],
						"TokenReceiver": [
							284
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 199,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363Receiver.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC1363Receiver.sol",
							"id": 200,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 285,
							"sourceUnit": 100,
							"src": "58:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"id": 201,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 285,
							"sourceUnit": 82,
							"src": "124:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 202,
										"name": "IERC1363Receiver",
										"nameLocations": [
											"209:16:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 99,
										"src": "209:16:6"
									},
									"id": 203,
									"nodeType": "InheritanceSpecifier",
									"src": "209:16:6"
								}
							],
							"canonicalName": "TokenReceiver",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284,
								99
							],
							"name": "TokenReceiver",
							"nameLocation": "192:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 205,
									"mutability": "mutable",
									"name": "erc1363Token",
									"nameLocation": "246:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 284,
									"src": "229:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 204,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "229:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "297:36:6",
										"statements": [
											{
												"expression": {
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 210,
														"name": "erc1363Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "301:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 211,
														"name": "erc1363Token_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "316:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "301:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "301:28:6"
											}
										]
									},
									"id": 215,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "erc1363Token_",
												"nameLocation": "282:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "274:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "274:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "273:23:6"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "297:0:6"
									},
									"scope": 284,
									"src": "262:71:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "27e235e3",
									"id": 219,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "384:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 284,
									"src": "336:56:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 218,
										"keyName": "user",
										"keyNameLocation": "352:4:6",
										"keyType": {
											"id": 216,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "344:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "336:40:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "balance",
										"valueNameLocation": "368:7:6",
										"valueType": {
											"id": 217,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "360:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										98
									],
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "529:139:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 233,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "541:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "545:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "541:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 235,
																"name": "erc1363Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "555:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "541:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f742074686520657870656374656420746f6b656e",
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "569:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1da86cb1e60d20d3ed05c0580ba028b5b1003bcbcb4c51ea7430e12ebfca98c9",
																"typeString": "literal_string \"not the expected token\""
															},
															"value": "not the expected token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1da86cb1e60d20d3ed05c0580ba028b5b1003bcbcb4c51ea7430e12ebfca98c9",
																"typeString": "literal_string \"not the expected token\""
															}
														],
														"id": 232,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "533:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "533:61:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "533:61:6"
											},
											{
												"expression": {
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 240,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "598:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 242,
														"indexExpression": {
															"id": 241,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "607:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "598:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 243,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "616:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "598:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "598:23:6"
											},
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 246,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "632:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_TokenReceiver_$284",
																"typeString": "contract TokenReceiver"
															}
														},
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "637:18:6",
														"memberName": "onTransferReceived",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 251,
														"src": "632:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "656:8:6",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "632:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 231,
												"id": 249,
												"nodeType": "Return",
												"src": "625:39:6"
											}
										]
									},
									"functionSelector": "88a7ca5c",
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onTransferReceived",
									"nameLocation": "405:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "435:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "427:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "455:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "447:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "471:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "463:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "463:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "495:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "480:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 226,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "480:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "423:79:6"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "521:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 229,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "521:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "520:8:6"
									},
									"scope": 284,
									"src": "396:272:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "713:154:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 257,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "725:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 260,
																"indexExpression": {
																	"expression": {
																		"id": 258,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "734:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "738:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "734:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "725:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 261,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "749:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "725:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "62616c616e636520746f6f206c6f77",
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "756:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3dfffd4c9d9f882d0f90c6e2df6eb8d15bd00aa18c05c0e0791aaaada359b825",
																"typeString": "literal_string \"balance too low\""
															},
															"value": "balance too low"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3dfffd4c9d9f882d0f90c6e2df6eb8d15bd00aa18c05c0e0791aaaada359b825",
																"typeString": "literal_string \"balance too low\""
															}
														],
														"id": 256,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "717:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "717:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "717:57:6"
											},
											{
												"expression": {
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 266,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "778:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 269,
														"indexExpression": {
															"expression": {
																"id": 267,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "787:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "791:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "787:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "778:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 270,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "802:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "778:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "778:29:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 277,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "845:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "849:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "845:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 279,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "857:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 274,
																	"name": "erc1363Token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "822:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 273,
																"name": "IERC1363",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 81,
																"src": "813:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1363_$81_$",
																	"typeString": "type(contract IERC1363)"
																}
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "813:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1363_$81",
																"typeString": "contract IERC1363"
															}
														},
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "836:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 152,
														"src": "813:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "813:50:6"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "680:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "697:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "689:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "688:15:6"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "713:0:6"
									},
									"scope": 284,
									"src": "671:196:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 285,
							"src": "183:687:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:838:6"
				},
				"id": 6
			}
		}
	}
}